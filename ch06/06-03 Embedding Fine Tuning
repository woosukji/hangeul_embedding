{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"06-03 Embedding Fine Tuning","provenance":[],"collapsed_sections":[],"machine_shape":"hm","authorship_tag":"ABX9TyOE4EaSqSw01beoBfwJ+QAU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"DxpqVAn1hzkO"},"source":["# __6 Embedding Fine Tuning__"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t7lpQeWw-Azm","executionInfo":{"status":"ok","timestamp":1626964344287,"user_tz":-540,"elapsed":110811,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"da9f5346-f0dd-40d6-b471-4a6f6c7cfa37"},"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","FOLDERNAME = 'ML/KRembedding/'\n","\n","LIB_PATH = 'lib'\n","DATA_PATH = '/notebooks/embedding/data/'\n","\n","%cd drive/My\\ Drive/$FOLDERNAME/\n","\n","# 학습된 단어 임베딩 다운로드\n","!bash preprocess.sh dump-processed\n","!bash preprocess.sh dump-word-embeddings"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n","/content/drive/My Drive/ML/KRembedding\n","download processed data...\n","--2021-07-22 14:30:51--  https://docs.google.com/uc?export=download&confirm=Rdmy&id=1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG\n","Resolving docs.google.com (docs.google.com)... 108.177.119.101, 108.177.119.139, 108.177.119.138, ...\n","Connecting to docs.google.com (docs.google.com)|108.177.119.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Moved Temporarily\n","Location: https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download [following]\n","--2021-07-22 14:30:51--  https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download\n","Resolving doc-00-a0-docs.googleusercontent.com (doc-00-a0-docs.googleusercontent.com)... 108.177.119.132, 2a00:1450:4013:c00::84\n","Connecting to doc-00-a0-docs.googleusercontent.com (doc-00-a0-docs.googleusercontent.com)|108.177.119.132|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://docs.google.com/nonceSigner?nonce=otrv6ecethd9m&continue=https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e%3Ddownload&hash=9autgkvn5li9povjvs5par326t7baodv [following]\n","--2021-07-22 14:30:51--  https://docs.google.com/nonceSigner?nonce=otrv6ecethd9m&continue=https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e%3Ddownload&hash=9autgkvn5li9povjvs5par326t7baodv\n","Connecting to docs.google.com (docs.google.com)|108.177.119.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download&nonce=otrv6ecethd9m&user=06135745795837568672Z&hash=qdt63isaf4a7go3kirat8tksurolvfpi [following]\n","--2021-07-22 14:30:52--  https://doc-00-a0-docs.googleusercontent.com/docs/securesc/ikgjlk8cv3n3koaovdtab236dl8gp92q/mrue3i16hp15ll1s4gvc1eip34jbgbnm/1626964200000/05170634686643261154/06135745795837568672Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download&nonce=otrv6ecethd9m&user=06135745795837568672Z&hash=qdt63isaf4a7go3kirat8tksurolvfpi\n","Connecting to doc-00-a0-docs.googleusercontent.com (doc-00-a0-docs.googleusercontent.com)|108.177.119.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: unspecified [application/zip]\n","Saving to: ‘/notebooks/embedding/data/processed.zip’\n","\n","/notebooks/embeddin     [                <=> ] 401.89M   117MB/s    in 3.4s    \n","\n","2021-07-22 14:30:56 (117 MB/s) - ‘/notebooks/embedding/data/processed.zip’ saved [421408263]\n","\n","Archive:  processed.zip\n","   creating: processed/\n","  inflating: processed/space-correct.model  \n","  inflating: processed/processed_korquad.txt  \n","  inflating: processed/processed_ratings_train.txt  \n","  inflating: processed/processed_ratings_test.txt  \n","  inflating: processed/processed_wiki_ko.txt  \n","  inflating: processed/processed_ratings.txt  \n","  inflating: processed/corrected_ratings_corpus.txt  \n","  inflating: processed/soyword.model  \n","  inflating: processed/processed_review_movieid.txt  \n","  inflating: processed/corrected_ratings_train.txt  \n","  inflating: processed/corrected_ratings_test.txt  \n","download word embeddings...\n","--2021-07-22 14:31:07--  https://docs.google.com/uc?export=download&confirm=EzKz&id=1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf\n","Resolving docs.google.com (docs.google.com)... 108.177.119.101, 108.177.119.139, 108.177.119.113, ...\n","Connecting to docs.google.com (docs.google.com)|108.177.119.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Moved Temporarily\n","Location: https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e=download [following]\n","--2021-07-22 14:31:07--  https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e=download\n","Resolving doc-0o-7c-docs.googleusercontent.com (doc-0o-7c-docs.googleusercontent.com)... 108.177.119.132, 2a00:1450:4013:c00::84\n","Connecting to doc-0o-7c-docs.googleusercontent.com (doc-0o-7c-docs.googleusercontent.com)|108.177.119.132|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://docs.google.com/nonceSigner?nonce=7k58ij3uevuq0&continue=https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e%3Ddownload&hash=o4nua44bnetv1dh5eo9coacs4kvb41oo [following]\n","--2021-07-22 14:31:07--  https://docs.google.com/nonceSigner?nonce=7k58ij3uevuq0&continue=https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e%3Ddownload&hash=o4nua44bnetv1dh5eo9coacs4kvb41oo\n","Connecting to docs.google.com (docs.google.com)|108.177.119.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e=download&nonce=7k58ij3uevuq0&user=00109673145294034300Z&hash=vf82p1c1cg5flmoge84ou3oa6tmekrk7 [following]\n","--2021-07-22 14:31:08--  https://doc-0o-7c-docs.googleusercontent.com/docs/securesc/4tobc09ln5bilslianp815tdhtlbbhbu/07iocu5somj3tva3b8pt9kshms6h958l/1626964200000/05170634686643261154/00109673145294034300Z/1FeGIbSz2E1A63JZP_XIxnGaSRt7AhXFf?e=download&nonce=7k58ij3uevuq0&user=00109673145294034300Z&hash=vf82p1c1cg5flmoge84ou3oa6tmekrk7\n","Connecting to doc-0o-7c-docs.googleusercontent.com (doc-0o-7c-docs.googleusercontent.com)|108.177.119.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: unspecified [application/zip]\n","Saving to: ‘/notebooks/embedding/data/word-embeddings.zip’\n","\n","/notebooks/embeddin     [   <=>              ]   2.62G   110MB/s    in 30s     \n","\n","2021-07-22 14:31:39 (87.9 MB/s) - ‘/notebooks/embedding/data/word-embeddings.zip’ saved [2808966906]\n","\n","Archive:  word-embeddings.zip\n","   creating: word-embeddings/\n","   creating: word-embeddings/word2vec/\n","  inflating: word-embeddings/word2vec/word2vec  \n","  inflating: word-embeddings/word2vec/word2vec.wv.vectors.npy  \n","  inflating: word-embeddings/word2vec/word2vec.trainables.syn1neg.npy  \n","   creating: word-embeddings/swivel/\n","  inflating: word-embeddings/swivel/col_embedding.tsv  \n","  inflating: word-embeddings/swivel/row_embedding.tsv  \n","   creating: word-embeddings/fasttext/\n","  inflating: word-embeddings/fasttext/fasttext.bin  \n","  inflating: word-embeddings/fasttext/fasttext.vec  \n","   creating: word-embeddings/glove/\n","  inflating: word-embeddings/glove/glove.txt  \n","   creating: word-embeddings/fasttext-jamo/\n","  inflating: word-embeddings/fasttext-jamo/fasttext-jamo.vec  \n","  inflating: word-embeddings/fasttext-jamo/fasttext-jamo.bin  \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y79LYd0le-B1","executionInfo":{"status":"ok","timestamp":1626964445997,"user_tz":-540,"elapsed":100206,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"407f0023-9e6c-4ef1-f3a3-61ca6e0d49f8"},"source":["# Mecab 설치\n","!bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Installing automake (A dependency for mecab-ko)\n","Hit:1 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:2 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Get:3 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease [3,626 B]\n","Get:4 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease [15.9 kB]\n","Hit:5 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Get:6 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Hit:7 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Get:8 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Get:9 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Ign:10 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Ign:11 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Get:12 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main Sources [1,785 kB]\n","Get:13 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release [697 B]\n","Hit:14 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Get:15 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release.gpg [836 B]\n","Get:16 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main amd64 Packages [913 kB]\n","Get:17 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [38.7 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,693 kB]\n","Get:19 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [533 kB]\n","Get:20 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,190 kB]\n","Get:21 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [44.1 kB]\n","Ign:23 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages\n","Get:23 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [679 kB]\n","Get:24 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [500 kB]\n","Get:25 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,420 kB]\n","Get:26 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [31.5 kB]\n","Get:27 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,257 kB]\n","Fetched 13.4 MB in 2s (7,132 kB/s)\n","Reading package lists... Done\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  autoconf autotools-dev libsigsegv2 m4\n","Suggested packages:\n","  autoconf-archive gnu-standards autoconf-doc libtool gettext m4-doc\n","The following NEW packages will be installed:\n","  autoconf automake autotools-dev libsigsegv2 m4\n","0 upgraded, 5 newly installed, 0 to remove and 76 not upgraded.\n","Need to get 1,082 kB of archives.\n","After this operation, 3,994 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 libsigsegv2 amd64 2.12-1 [14.7 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 m4 amd64 1.4.18-1 [197 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 autoconf all 2.69-11 [322 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 autotools-dev all 20180224.1 [39.6 kB]\n","Get:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 automake all 1:1.15.1-3ubuntu2 [509 kB]\n","Fetched 1,082 kB in 0s (9,947 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 5.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package libsigsegv2:amd64.\n","(Reading database ... 160837 files and directories currently installed.)\n","Preparing to unpack .../libsigsegv2_2.12-1_amd64.deb ...\n","Unpacking libsigsegv2:amd64 (2.12-1) ...\n","Selecting previously unselected package m4.\n","Preparing to unpack .../archives/m4_1.4.18-1_amd64.deb ...\n","Unpacking m4 (1.4.18-1) ...\n","Selecting previously unselected package autoconf.\n","Preparing to unpack .../autoconf_2.69-11_all.deb ...\n","Unpacking autoconf (2.69-11) ...\n","Selecting previously unselected package autotools-dev.\n","Preparing to unpack .../autotools-dev_20180224.1_all.deb ...\n","Unpacking autotools-dev (20180224.1) ...\n","Selecting previously unselected package automake.\n","Preparing to unpack .../automake_1%3a1.15.1-3ubuntu2_all.deb ...\n","Unpacking automake (1:1.15.1-3ubuntu2) ...\n","Setting up libsigsegv2:amd64 (2.12-1) ...\n","Setting up m4 (1.4.18-1) ...\n","Setting up autotools-dev (20180224.1) ...\n","Setting up autoconf (2.69-11) ...\n","Setting up automake (1:1.15.1-3ubuntu2) ...\n","update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode\n","Processing triggers for libc-bin (2.27-3ubuntu1.2) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Install mecab-ko-dic\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n","100 1381k  100 1381k    0     0   974k      0  0:00:01  0:00:01 --:--:-- 3213k\n","mecab-0.996-ko-0.9.2/\n","mecab-0.996-ko-0.9.2/example/\n","mecab-0.996-ko-0.9.2/example/example.cpp\n","mecab-0.996-ko-0.9.2/example/example_lattice.cpp\n","mecab-0.996-ko-0.9.2/example/example_lattice.c\n","mecab-0.996-ko-0.9.2/example/example.c\n","mecab-0.996-ko-0.9.2/example/thread_test.cpp\n","mecab-0.996-ko-0.9.2/mecab-config.in\n","mecab-0.996-ko-0.9.2/man/\n","mecab-0.996-ko-0.9.2/man/Makefile.am\n","mecab-0.996-ko-0.9.2/man/mecab.1\n","mecab-0.996-ko-0.9.2/man/Makefile.in\n","mecab-0.996-ko-0.9.2/mecab.iss.in\n","mecab-0.996-ko-0.9.2/config.guess\n","mecab-0.996-ko-0.9.2/README\n","mecab-0.996-ko-0.9.2/COPYING\n","mecab-0.996-ko-0.9.2/CHANGES.md\n","mecab-0.996-ko-0.9.2/README.md\n","mecab-0.996-ko-0.9.2/INSTALL\n","mecab-0.996-ko-0.9.2/config.sub\n","mecab-0.996-ko-0.9.2/configure.in\n","mecab-0.996-ko-0.9.2/swig/\n","mecab-0.996-ko-0.9.2/swig/Makefile\n","mecab-0.996-ko-0.9.2/swig/version.h.in\n","mecab-0.996-ko-0.9.2/swig/version.h\n","mecab-0.996-ko-0.9.2/swig/MeCab.i\n","mecab-0.996-ko-0.9.2/aclocal.m4\n","mecab-0.996-ko-0.9.2/LGPL\n","mecab-0.996-ko-0.9.2/Makefile.am\n","mecab-0.996-ko-0.9.2/configure\n","mecab-0.996-ko-0.9.2/tests/\n","mecab-0.996-ko-0.9.2/tests/autolink/\n","mecab-0.996-ko-0.9.2/tests/autolink/unk.def\n","mecab-0.996-ko-0.9.2/tests/autolink/dicrc\n","mecab-0.996-ko-0.9.2/tests/autolink/dic.csv\n","mecab-0.996-ko-0.9.2/tests/autolink/test\n","mecab-0.996-ko-0.9.2/tests/autolink/char.def\n","mecab-0.996-ko-0.9.2/tests/autolink/matrix.def\n","mecab-0.996-ko-0.9.2/tests/autolink/test.gld\n","mecab-0.996-ko-0.9.2/tests/t9/\n","mecab-0.996-ko-0.9.2/tests/t9/unk.def\n","mecab-0.996-ko-0.9.2/tests/t9/ipadic.pl\n","mecab-0.996-ko-0.9.2/tests/t9/dicrc\n","mecab-0.996-ko-0.9.2/tests/t9/dic.csv\n","mecab-0.996-ko-0.9.2/tests/t9/test\n","mecab-0.996-ko-0.9.2/tests/t9/char.def\n","mecab-0.996-ko-0.9.2/tests/t9/matrix.def\n","mecab-0.996-ko-0.9.2/tests/t9/mkdic.pl\n","mecab-0.996-ko-0.9.2/tests/t9/test.gld\n","mecab-0.996-ko-0.9.2/tests/cost-train/\n","mecab-0.996-ko-0.9.2/tests/cost-train/ipa.train\n","mecab-0.996-ko-0.9.2/tests/cost-train/ipa.test\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/rewrite.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/feature.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/unk.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/dicrc\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/dic.csv\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/char.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/matrix.def\n","mecab-0.996-ko-0.9.2/tests/run-eval.sh\n","mecab-0.996-ko-0.9.2/tests/run-cost-train.sh\n","mecab-0.996-ko-0.9.2/tests/Makefile.am\n","mecab-0.996-ko-0.9.2/tests/katakana/\n","mecab-0.996-ko-0.9.2/tests/katakana/unk.def\n","mecab-0.996-ko-0.9.2/tests/katakana/dicrc\n","mecab-0.996-ko-0.9.2/tests/katakana/dic.csv\n","mecab-0.996-ko-0.9.2/tests/katakana/test\n","mecab-0.996-ko-0.9.2/tests/katakana/char.def\n","mecab-0.996-ko-0.9.2/tests/katakana/matrix.def\n","mecab-0.996-ko-0.9.2/tests/katakana/test.gld\n","mecab-0.996-ko-0.9.2/tests/eval/\n","mecab-0.996-ko-0.9.2/tests/eval/answer\n","mecab-0.996-ko-0.9.2/tests/eval/system\n","mecab-0.996-ko-0.9.2/tests/eval/test.gld\n","mecab-0.996-ko-0.9.2/tests/shiin/\n","mecab-0.996-ko-0.9.2/tests/shiin/unk.def\n","mecab-0.996-ko-0.9.2/tests/shiin/dicrc\n","mecab-0.996-ko-0.9.2/tests/shiin/dic.csv\n","mecab-0.996-ko-0.9.2/tests/shiin/test\n","mecab-0.996-ko-0.9.2/tests/shiin/char.def\n","mecab-0.996-ko-0.9.2/tests/shiin/matrix.def\n","mecab-0.996-ko-0.9.2/tests/shiin/mkdic.pl\n","mecab-0.996-ko-0.9.2/tests/shiin/test.gld\n","mecab-0.996-ko-0.9.2/tests/latin/\n","mecab-0.996-ko-0.9.2/tests/latin/unk.def\n","mecab-0.996-ko-0.9.2/tests/latin/dicrc\n","mecab-0.996-ko-0.9.2/tests/latin/dic.csv\n","mecab-0.996-ko-0.9.2/tests/latin/test\n","mecab-0.996-ko-0.9.2/tests/latin/char.def\n","mecab-0.996-ko-0.9.2/tests/latin/matrix.def\n","mecab-0.996-ko-0.9.2/tests/latin/test.gld\n","mecab-0.996-ko-0.9.2/tests/chartype/\n","mecab-0.996-ko-0.9.2/tests/chartype/unk.def\n","mecab-0.996-ko-0.9.2/tests/chartype/dicrc\n","mecab-0.996-ko-0.9.2/tests/chartype/dic.csv\n","mecab-0.996-ko-0.9.2/tests/chartype/test\n","mecab-0.996-ko-0.9.2/tests/chartype/char.def\n","mecab-0.996-ko-0.9.2/tests/chartype/matrix.def\n","mecab-0.996-ko-0.9.2/tests/chartype/test.gld\n","mecab-0.996-ko-0.9.2/tests/run-dics.sh\n","mecab-0.996-ko-0.9.2/tests/ngram/\n","mecab-0.996-ko-0.9.2/tests/ngram/unk.def\n","mecab-0.996-ko-0.9.2/tests/ngram/dicrc\n","mecab-0.996-ko-0.9.2/tests/ngram/dic.csv\n","mecab-0.996-ko-0.9.2/tests/ngram/test\n","mecab-0.996-ko-0.9.2/tests/ngram/char.def\n","mecab-0.996-ko-0.9.2/tests/ngram/matrix.def\n","mecab-0.996-ko-0.9.2/tests/ngram/test.gld\n","mecab-0.996-ko-0.9.2/tests/Makefile.in\n","mecab-0.996-ko-0.9.2/ltmain.sh\n","mecab-0.996-ko-0.9.2/config.rpath\n","mecab-0.996-ko-0.9.2/config.h.in\n","mecab-0.996-ko-0.9.2/mecabrc.in\n","mecab-0.996-ko-0.9.2/GPL\n","mecab-0.996-ko-0.9.2/Makefile.train\n","mecab-0.996-ko-0.9.2/ChangeLog\n","mecab-0.996-ko-0.9.2/install-sh\n","mecab-0.996-ko-0.9.2/AUTHORS\n","mecab-0.996-ko-0.9.2/doc/\n","mecab-0.996-ko-0.9.2/doc/bindings.html\n","mecab-0.996-ko-0.9.2/doc/posid.html\n","mecab-0.996-ko-0.9.2/doc/unk.html\n","mecab-0.996-ko-0.9.2/doc/learn.html\n","mecab-0.996-ko-0.9.2/doc/format.html\n","mecab-0.996-ko-0.9.2/doc/libmecab.html\n","mecab-0.996-ko-0.9.2/doc/mecab.css\n","mecab-0.996-ko-0.9.2/doc/feature.html\n","mecab-0.996-ko-0.9.2/doc/Makefile.am\n","mecab-0.996-ko-0.9.2/doc/soft.html\n","mecab-0.996-ko-0.9.2/doc/en/\n","mecab-0.996-ko-0.9.2/doc/en/bindings.html\n","mecab-0.996-ko-0.9.2/doc/dic-detail.html\n","mecab-0.996-ko-0.9.2/doc/flow.png\n","mecab-0.996-ko-0.9.2/doc/mecab.html\n","mecab-0.996-ko-0.9.2/doc/index.html\n","mecab-0.996-ko-0.9.2/doc/result.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_a.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_eval.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Tagger-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions_vars.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/doxygen.css\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_r.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Lattice.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Tagger.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h_source.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/tabs.css\n","mecab-0.996-ko-0.9.2/doc/doxygen/nav_f.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_b.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/nav_h.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_h.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Model.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/closed.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_l.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__path__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_type.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Lattice-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__node__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_s.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__dictionary__info__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers_type.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Model-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__dictionary__info__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespaces.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespaceMeCab.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__path__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/files.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__node__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/index.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/annotated.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_defs.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classes.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h-source.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/doxygen.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_b.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/bc_s.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/open.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h.html\n","mecab-0.996-ko-0.9.2/doc/dic.html\n","mecab-0.996-ko-0.9.2/doc/partial.html\n","mecab-0.996-ko-0.9.2/doc/feature.png\n","mecab-0.996-ko-0.9.2/doc/Makefile.in\n","mecab-0.996-ko-0.9.2/missing\n","mecab-0.996-ko-0.9.2/BSD\n","mecab-0.996-ko-0.9.2/NEWS\n","mecab-0.996-ko-0.9.2/mkinstalldirs\n","mecab-0.996-ko-0.9.2/src/\n","mecab-0.996-ko-0.9.2/src/dictionary.h\n","mecab-0.996-ko-0.9.2/src/writer.h\n","mecab-0.996-ko-0.9.2/src/utils.h\n","mecab-0.996-ko-0.9.2/src/string_buffer.cpp\n","mecab-0.996-ko-0.9.2/src/tokenizer.cpp\n","mecab-0.996-ko-0.9.2/src/make.bat\n","mecab-0.996-ko-0.9.2/src/mecab.h\n","mecab-0.996-ko-0.9.2/src/freelist.h\n","mecab-0.996-ko-0.9.2/src/string_buffer.h\n","mecab-0.996-ko-0.9.2/src/learner_tagger.h\n","mecab-0.996-ko-0.9.2/src/dictionary_compiler.cpp\n","mecab-0.996-ko-0.9.2/src/eval.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-system-eval.cpp\n","mecab-0.996-ko-0.9.2/src/darts.h\n","mecab-0.996-ko-0.9.2/src/param.h\n","mecab-0.996-ko-0.9.2/src/char_property.h\n","mecab-0.996-ko-0.9.2/src/learner_node.h\n","mecab-0.996-ko-0.9.2/src/mecab-dict-gen.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-dict-index.cpp\n","mecab-0.996-ko-0.9.2/src/winmain.h\n","mecab-0.996-ko-0.9.2/src/thread.h\n","mecab-0.996-ko-0.9.2/src/context_id.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.am\n","mecab-0.996-ko-0.9.2/src/connector.h\n","mecab-0.996-ko-0.9.2/src/common.h\n","mecab-0.996-ko-0.9.2/src/dictionary_rewriter.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.msvc.in\n","mecab-0.996-ko-0.9.2/src/dictionary_rewriter.h\n","mecab-0.996-ko-0.9.2/src/feature_index.h\n","mecab-0.996-ko-0.9.2/src/iconv_utils.cpp\n","mecab-0.996-ko-0.9.2/src/char_property.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-test-gen.cpp\n","mecab-0.996-ko-0.9.2/src/tagger.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-cost-train.cpp\n","mecab-0.996-ko-0.9.2/src/learner.cpp\n","mecab-0.996-ko-0.9.2/src/dictionary.cpp\n","mecab-0.996-ko-0.9.2/src/lbfgs.cpp\n","mecab-0.996-ko-0.9.2/src/ucs.h\n","mecab-0.996-ko-0.9.2/src/writer.cpp\n","mecab-0.996-ko-0.9.2/src/learner_tagger.cpp\n","mecab-0.996-ko-0.9.2/src/lbfgs.h\n","mecab-0.996-ko-0.9.2/src/libmecab.cpp\n","mecab-0.996-ko-0.9.2/src/tokenizer.h\n","mecab-0.996-ko-0.9.2/src/mecab.cpp\n","mecab-0.996-ko-0.9.2/src/utils.cpp\n","mecab-0.996-ko-0.9.2/src/dictionary_generator.cpp\n","mecab-0.996-ko-0.9.2/src/param.cpp\n","mecab-0.996-ko-0.9.2/src/context_id.h\n","mecab-0.996-ko-0.9.2/src/mmap.h\n","mecab-0.996-ko-0.9.2/src/viterbi.h\n","mecab-0.996-ko-0.9.2/src/viterbi.cpp\n","mecab-0.996-ko-0.9.2/src/stream_wrapper.h\n","mecab-0.996-ko-0.9.2/src/feature_index.cpp\n","mecab-0.996-ko-0.9.2/src/nbest_generator.h\n","mecab-0.996-ko-0.9.2/src/ucstable.h\n","mecab-0.996-ko-0.9.2/src/nbest_generator.cpp\n","mecab-0.996-ko-0.9.2/src/iconv_utils.h\n","mecab-0.996-ko-0.9.2/src/connector.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.in\n","mecab-0.996-ko-0.9.2/src/scoped_ptr.h\n","mecab-0.996-ko-0.9.2/Makefile.in\n","checking for a BSD-compatible install... /usr/bin/install -c\n","checking whether build environment is sane... yes\n","checking for a thread-safe mkdir -p... /bin/mkdir -p\n","checking for gawk... no\n","checking for mawk... mawk\n","checking whether make sets $(MAKE)... yes\n","checking for gcc... gcc\n","checking whether the C compiler works... yes\n","checking for C compiler default output file name... a.out\n","checking for suffix of executables... \n","checking whether we are cross compiling... no\n","checking for suffix of object files... o\n","checking whether we are using the GNU C compiler... yes\n","checking whether gcc accepts -g... yes\n","checking for gcc option to accept ISO C89... none needed\n","checking for style of include used by make... GNU\n","checking dependency style of gcc... none\n","checking for g++... g++\n","checking whether we are using the GNU C++ compiler... yes\n","checking whether g++ accepts -g... yes\n","checking dependency style of g++... none\n","checking how to run the C preprocessor... gcc -E\n","checking for grep that handles long lines and -e... /bin/grep\n","checking for egrep... /bin/grep -E\n","checking whether gcc needs -traditional... no\n","checking whether make sets $(MAKE)... (cached) yes\n","checking build system type... x86_64-unknown-linux-gnu\n","checking host system type... x86_64-unknown-linux-gnu\n","checking how to print strings... printf\n","checking for a sed that does not truncate output... /bin/sed\n","checking for fgrep... /bin/grep -F\n","checking for ld used by gcc... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n","checking the name lister (/usr/bin/nm -B) interface... BSD nm\n","checking whether ln -s works... yes\n","checking the maximum length of command line arguments... 1572864\n","checking whether the shell understands some XSI constructs... yes\n","checking whether the shell understands \"+=\"... yes\n","checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format... func_convert_file_noop\n","checking how to convert x86_64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop\n","checking for /usr/bin/ld option to reload object files... -r\n","checking for objdump... objdump\n","checking how to recognize dependent libraries... pass_all\n","checking for dlltool... dlltool\n","checking how to associate runtime and link libraries... printf %s\\n\n","checking for ar... ar\n","checking for archiver @FILE support... @\n","checking for strip... strip\n","checking for ranlib... ranlib\n","checking command to parse /usr/bin/nm -B output from gcc object... ok\n","checking for sysroot... no\n","./configure: line 7378: /usr/bin/file: No such file or directory\n","checking for mt... no\n","checking if : is a manifest tool... no\n","checking for ANSI C header files... yes\n","checking for sys/types.h... yes\n","checking for sys/stat.h... yes\n","checking for stdlib.h... yes\n","checking for string.h... yes\n","checking for memory.h... yes\n","checking for strings.h... yes\n","checking for inttypes.h... yes\n","checking for stdint.h... yes\n","checking for unistd.h... yes\n","checking for dlfcn.h... yes\n","checking for objdir... .libs\n","checking if gcc supports -fno-rtti -fno-exceptions... no\n","checking for gcc option to produce PIC... -fPIC -DPIC\n","checking if gcc PIC flag -fPIC -DPIC works... yes\n","checking if gcc static flag -static works... yes\n","checking if gcc supports -c -o file.o... yes\n","checking if gcc supports -c -o file.o... (cached) yes\n","checking whether the gcc linker (/usr/bin/ld) supports shared libraries... yes\n","checking whether -lc should be explicitly linked in... no\n","checking dynamic linker characteristics... GNU/Linux ld.so\n","checking how to hardcode library paths into programs... immediate\n","checking whether stripping libraries is possible... yes\n","checking if libtool supports shared libraries... yes\n","checking whether to build shared libraries... yes\n","checking whether to build static libraries... yes\n","checking how to run the C++ preprocessor... g++ -E\n","checking for ld used by g++... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking whether the g++ linker (/usr/bin/ld) supports shared libraries... yes\n","checking for g++ option to produce PIC... -fPIC -DPIC\n","checking if g++ PIC flag -fPIC -DPIC works... yes\n","checking if g++ static flag -static works... yes\n","checking if g++ supports -c -o file.o... yes\n","checking if g++ supports -c -o file.o... (cached) yes\n","checking whether the g++ linker (/usr/bin/ld) supports shared libraries... yes\n","checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n","checking how to hardcode library paths into programs... immediate\n","checking for library containing strerror... none required\n","checking whether byte ordering is bigendian... no\n","checking for ld used by GCC... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking for shared library run path origin... done\n","checking for iconv... yes\n","checking for working iconv... yes\n","checking for iconv declaration... \n","         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n","checking for ANSI C header files... (cached) yes\n","checking for an ANSI C-conforming const... yes\n","checking whether byte ordering is bigendian... (cached) no\n","checking for string.h... (cached) yes\n","checking for stdlib.h... (cached) yes\n","checking for unistd.h... (cached) yes\n","checking fcntl.h usability... yes\n","checking fcntl.h presence... yes\n","checking for fcntl.h... yes\n","checking for stdint.h... (cached) yes\n","checking for sys/stat.h... (cached) yes\n","checking sys/mman.h usability... yes\n","checking sys/mman.h presence... yes\n","checking for sys/mman.h... yes\n","checking sys/times.h usability... yes\n","checking sys/times.h presence... yes\n","checking for sys/times.h... yes\n","checking for sys/types.h... (cached) yes\n","checking dirent.h usability... yes\n","checking dirent.h presence... yes\n","checking for dirent.h... yes\n","checking ctype.h usability... yes\n","checking ctype.h presence... yes\n","checking for ctype.h... yes\n","checking for sys/types.h... (cached) yes\n","checking io.h usability... no\n","checking io.h presence... no\n","checking for io.h... no\n","checking windows.h usability... no\n","checking windows.h presence... no\n","checking for windows.h... no\n","checking pthread.h usability... yes\n","checking pthread.h presence... yes\n","checking for pthread.h... yes\n","checking for off_t... yes\n","checking for size_t... yes\n","checking size of char... 1\n","checking size of short... 2\n","checking size of int... 4\n","checking size of long... 8\n","checking size of long long... 8\n","checking size of size_t... 8\n","checking for size_t... (cached) yes\n","checking for unsigned long long int... yes\n","checking for stdlib.h... (cached) yes\n","checking for unistd.h... (cached) yes\n","checking for sys/param.h... yes\n","checking for getpagesize... yes\n","checking for working mmap... yes\n","checking for main in -lstdc++... yes\n","checking for pthread_create in -lpthread... yes\n","checking for pthread_join in -lpthread... yes\n","checking for getenv... yes\n","checking for opendir... yes\n","checking whether make is GNU Make... yes\n","checking if g++ supports stl <vector> (required)... yes\n","checking if g++ supports stl <list> (required)... yes\n","checking if g++ supports stl <map> (required)... yes\n","checking if g++ supports stl <set> (required)... yes\n","checking if g++ supports stl <queue> (required)... yes\n","checking if g++ supports stl <functional> (required)... yes\n","checking if g++ supports stl <algorithm> (required)... yes\n","checking if g++ supports stl <string> (required)... yes\n","checking if g++ supports stl <iostream> (required)... yes\n","checking if g++ supports stl <sstream> (required)... yes\n","checking if g++ supports stl <fstream> (required)... yes\n","checking if g++ supports template <class T> (required)... yes\n","checking if g++ supports const_cast<> (required)... yes\n","checking if g++ supports static_cast<> (required)... yes\n","checking if g++ supports reinterpret_cast<> (required)... yes\n","checking if g++ supports namespaces (required) ... yes\n","checking if g++ supports __thread (optional)... yes\n","checking if g++ supports template <class T> (required)... yes\n","checking if g++ supports GCC native atomic operations (optional)... yes\n","checking if g++ supports OSX native atomic operations (optional)... no\n","checking if g++ environment provides all required features... yes\n","configure: creating ./config.status\n","config.status: creating Makefile\n","config.status: creating src/Makefile\n","config.status: creating src/Makefile.msvc\n","config.status: creating man/Makefile\n","config.status: creating doc/Makefile\n","config.status: creating tests/Makefile\n","config.status: creating swig/version.h\n","config.status: creating mecab.iss\n","config.status: creating mecab-config\n","config.status: creating mecabrc\n","config.status: creating config.h\n","config.status: executing depfiles commands\n","config.status: executing libtool commands\n","config.status: executing default commands\n","make  all-recursive\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making all in src\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o viterbi.lo viterbi.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c viterbi.cpp  -fPIC -DPIC -o .libs/viterbi.o\n","In file included from \u001b[01m\u001b[Kviterbi.cpp:14:0\u001b[m\u001b[K:\n","\u001b[01m\u001b[Kparam.h:30:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K'\u001b[01m\u001b[KTarget {anonymous}::lexical_cast(Source) [with Target = std::__cxx11::basic_string<char>; Source = std::__cxx11::basic_string<char>]\u001b[m\u001b[K' defined but not used [\u001b[01;35m\u001b[K-Wunused-function\u001b[m\u001b[K]\n"," std::string \u001b[01;35m\u001b[Klexical_cast<std::string, std::string>\u001b[m\u001b[K(std::string arg) {\n","             \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c viterbi.cpp -o viterbi.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o tagger.lo tagger.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tagger.cpp  -fPIC -DPIC -o .libs/tagger.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tagger.cpp -o tagger.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o utils.lo utils.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c utils.cpp  -fPIC -DPIC -o .libs/utils.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c utils.cpp -o utils.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o eval.lo eval.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c eval.cpp  -fPIC -DPIC -o .libs/eval.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c eval.cpp -o eval.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o iconv_utils.lo iconv_utils.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c iconv_utils.cpp  -fPIC -DPIC -o .libs/iconv_utils.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c iconv_utils.cpp -o iconv_utils.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_rewriter.lo dictionary_rewriter.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_rewriter.cpp  -fPIC -DPIC -o .libs/dictionary_rewriter.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_rewriter.cpp -o dictionary_rewriter.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_generator.lo dictionary_generator.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_generator.cpp  -fPIC -DPIC -o .libs/dictionary_generator.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_generator.cpp -o dictionary_generator.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_compiler.lo dictionary_compiler.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_compiler.cpp  -fPIC -DPIC -o .libs/dictionary_compiler.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_compiler.cpp -o dictionary_compiler.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o context_id.lo context_id.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c context_id.cpp  -fPIC -DPIC -o .libs/context_id.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c context_id.cpp -o context_id.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o connector.lo connector.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c connector.cpp  -fPIC -DPIC -o .libs/connector.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c connector.cpp -o connector.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o nbest_generator.lo nbest_generator.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c nbest_generator.cpp  -fPIC -DPIC -o .libs/nbest_generator.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c nbest_generator.cpp -o nbest_generator.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o writer.lo writer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c writer.cpp  -fPIC -DPIC -o .libs/writer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c writer.cpp -o writer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o string_buffer.lo string_buffer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c string_buffer.cpp  -fPIC -DPIC -o .libs/string_buffer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c string_buffer.cpp -o string_buffer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o param.lo param.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c param.cpp  -fPIC -DPIC -o .libs/param.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c param.cpp -o param.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o tokenizer.lo tokenizer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tokenizer.cpp  -fPIC -DPIC -o .libs/tokenizer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tokenizer.cpp -o tokenizer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o char_property.lo char_property.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c char_property.cpp  -fPIC -DPIC -o .libs/char_property.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c char_property.cpp -o char_property.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary.lo dictionary.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary.cpp  -fPIC -DPIC -o .libs/dictionary.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary.cpp -o dictionary.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o feature_index.lo feature_index.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c feature_index.cpp  -fPIC -DPIC -o .libs/feature_index.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c feature_index.cpp -o feature_index.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o lbfgs.lo lbfgs.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c lbfgs.cpp  -fPIC -DPIC -o .libs/lbfgs.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c lbfgs.cpp -o lbfgs.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o learner_tagger.lo learner_tagger.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner_tagger.cpp  -fPIC -DPIC -o .libs/learner_tagger.o\n","\u001b[01m\u001b[Klearner_tagger.cpp:25:7:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K'\u001b[01m\u001b[Kchar* MeCab::{anonymous}::mystrdup(const string&)\u001b[m\u001b[K' defined but not used [\u001b[01;35m\u001b[K-Wunused-function\u001b[m\u001b[K]\n"," char *\u001b[01;35m\u001b[Kmystrdup\u001b[m\u001b[K(const std::string &str) {\n","       \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner_tagger.cpp -o learner_tagger.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o learner.lo learner.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner.cpp  -fPIC -DPIC -o .libs/learner.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner.cpp -o learner.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o libmecab.lo libmecab.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c libmecab.cpp  -fPIC -DPIC -o .libs/libmecab.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c libmecab.cpp -o libmecab.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall  -no-undefined -version-info 2:0:0  -o libmecab.la -rpath /usr/local/lib viterbi.lo tagger.lo utils.lo eval.lo iconv_utils.lo dictionary_rewriter.lo dictionary_generator.lo dictionary_compiler.lo context_id.lo connector.lo nbest_generator.lo writer.lo string_buffer.lo param.lo tokenizer.lo char_property.lo dictionary.lo feature_index.lo lbfgs.lo learner_tagger.lo learner.lo libmecab.lo  -lpthread -lpthread  -lstdc++ \n","libtool: link: g++  -fPIC -DPIC -shared -nostdlib /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o  .libs/viterbi.o .libs/tagger.o .libs/utils.o .libs/eval.o .libs/iconv_utils.o .libs/dictionary_rewriter.o .libs/dictionary_generator.o .libs/dictionary_compiler.o .libs/context_id.o .libs/connector.o .libs/nbest_generator.o .libs/writer.o .libs/string_buffer.o .libs/param.o .libs/tokenizer.o .libs/char_property.o .libs/dictionary.o .libs/feature_index.o .libs/lbfgs.o .libs/learner_tagger.o .libs/learner.o .libs/libmecab.o   -lpthread -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/local/cuda/lib64/stubs -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. -lstdc++ -lm -lc -lgcc_s /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o  -O3   -Wl,-soname -Wl,libmecab.so.2 -o .libs/libmecab.so.2.0.0\n","libtool: link: (cd \".libs\" && rm -f \"libmecab.so.2\" && ln -s \"libmecab.so.2.0.0\" \"libmecab.so.2\")\n","libtool: link: (cd \".libs\" && rm -f \"libmecab.so\" && ln -s \"libmecab.so.2.0.0\" \"libmecab.so\")\n","libtool: link: ar cru .libs/libmecab.a  viterbi.o tagger.o utils.o eval.o iconv_utils.o dictionary_rewriter.o dictionary_generator.o dictionary_compiler.o context_id.o connector.o nbest_generator.o writer.o string_buffer.o param.o tokenizer.o char_property.o dictionary.o feature_index.o lbfgs.o learner_tagger.o learner.o libmecab.o\n","ar: `u' modifier ignored since `D' is the default (see `U')\n","libtool: link: ranlib .libs/libmecab.a\n","libtool: link: ( cd \".libs\" && rm -f \"libmecab.la\" && ln -s \"../libmecab.la\" \"libmecab.la\" )\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab.o mecab.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab mecab.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab mecab.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-dict-index.o mecab-dict-index.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-dict-index mecab-dict-index.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-dict-index mecab-dict-index.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-dict-gen.o mecab-dict-gen.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-dict-gen mecab-dict-gen.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-dict-gen mecab-dict-gen.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-cost-train.o mecab-cost-train.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-cost-train mecab-cost-train.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-cost-train mecab-cost-train.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-system-eval.o mecab-system-eval.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-system-eval mecab-system-eval.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-system-eval mecab-system-eval.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-test-gen.o mecab-test-gen.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-test-gen mecab-test-gen.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-test-gen mecab-test-gen.o  ./.libs/libmecab.so -lpthread -lstdc++\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making all in man\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making all in doc\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making all in tests\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making check in src\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making check in man\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making check in doc\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making check in tests\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make  check-TESTS\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 177\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 178x178\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 83\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 84x84\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 450\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 162\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 3x3\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 4\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 11\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 1\n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 1\n","reading ./matrix.def ... 1x1\n","\n","done!\n","PASS: run-dics.sh\n","PASS: run-eval.sh\n","seed/pos-id.def is not found. minimum setting is used\n","reading seed/unk.def ... 40\n","emitting double-array: 100% |###########################################| \n","seed/model.def is not found. skipped.\n","seed/pos-id.def is not found. minimum setting is used\n","reading seed/dic.csv ... 4335\n","emitting double-array: 100% |###########################################| \n","reading seed/matrix.def ... 1x1\n","\n","done!\n","reading corpus ...\n","Number of sentences: 34\n","Number of features:  64108\n","eta:                 0.00005\n","freq:                1\n","eval-size:           6\n","unk-eval-size:       4\n","threads:             1\n","charset:             EUC-JP\n","C(sigma^2):          1.00000\n","\n","iter=0 err=1.00000 F=0.35771 target=2406.28355 diff=1.00000\n","iter=1 err=0.97059 F=0.65652 target=1484.25231 diff=0.38318\n","iter=2 err=0.91176 F=0.79331 target=863.32765 diff=0.41834\n","iter=3 err=0.85294 F=0.89213 target=596.72480 diff=0.30881\n","iter=4 err=0.61765 F=0.95467 target=336.30744 diff=0.43641\n","iter=5 err=0.50000 F=0.96702 target=246.53039 diff=0.26695\n","iter=6 err=0.35294 F=0.95472 target=188.93963 diff=0.23361\n","iter=7 err=0.20588 F=0.99106 target=168.62665 diff=0.10751\n","iter=8 err=0.05882 F=0.99777 target=158.64865 diff=0.05917\n","iter=9 err=0.08824 F=0.99665 target=154.14530 diff=0.02839\n","iter=10 err=0.08824 F=0.99665 target=151.94257 diff=0.01429\n","iter=11 err=0.02941 F=0.99888 target=147.20825 diff=0.03116\n","iter=12 err=0.00000 F=1.00000 target=147.34956 diff=0.00096\n","iter=13 err=0.02941 F=0.99888 target=146.32592 diff=0.00695\n","iter=14 err=0.00000 F=1.00000 target=145.77299 diff=0.00378\n","iter=15 err=0.02941 F=0.99888 target=145.24641 diff=0.00361\n","iter=16 err=0.00000 F=1.00000 target=144.96490 diff=0.00194\n","iter=17 err=0.02941 F=0.99888 target=144.90246 diff=0.00043\n","iter=18 err=0.00000 F=1.00000 target=144.75959 diff=0.00099\n","iter=19 err=0.00000 F=1.00000 target=144.71727 diff=0.00029\n","iter=20 err=0.00000 F=1.00000 target=144.66337 diff=0.00037\n","iter=21 err=0.00000 F=1.00000 target=144.61349 diff=0.00034\n","iter=22 err=0.00000 F=1.00000 target=144.62987 diff=0.00011\n","iter=23 err=0.00000 F=1.00000 target=144.60060 diff=0.00020\n","iter=24 err=0.00000 F=1.00000 target=144.59125 diff=0.00006\n","iter=25 err=0.00000 F=1.00000 target=144.58619 diff=0.00004\n","iter=26 err=0.00000 F=1.00000 target=144.58219 diff=0.00003\n","iter=27 err=0.00000 F=1.00000 target=144.58059 diff=0.00001\n","\n","Done! writing model file ... \n","model-ipadic.c1.0.f1.model is not a binary model. reopen it as text mode...\n","reading seed/unk.def ... 40\n","reading seed/dic.csv ... 4335\n","emitting model-ipadic.c1.0.f1.dic/left-id.def/ model-ipadic.c1.0.f1.dic/right-id.def\n","emitting model-ipadic.c1.0.f1.dic/unk.def ... 40\n","emitting model-ipadic.c1.0.f1.dic/dic.csv ... 4335\n","emitting matrix      : 100% |###########################################| \n","copying seed/char.def to model-ipadic.c1.0.f1.dic/char.def\n","copying seed/rewrite.def to model-ipadic.c1.0.f1.dic/rewrite.def\n","copying seed/dicrc to model-ipadic.c1.0.f1.dic/dicrc\n","copying seed/feature.def to model-ipadic.c1.0.f1.dic/feature.def\n","copying model-ipadic.c1.0.f1.model to model-ipadic.c1.0.f1.dic/model.def\n","\n","done!\n","model-ipadic.c1.0.f1.dic/pos-id.def is not found. minimum setting is used\n","reading model-ipadic.c1.0.f1.dic/unk.def ... 40\n","emitting double-array: 100% |###########################################| \n","model-ipadic.c1.0.f1.dic/pos-id.def is not found. minimum setting is used\n","reading model-ipadic.c1.0.f1.dic/dic.csv ... 4335\n","emitting double-array: 100% |###########################################| \n","reading model-ipadic.c1.0.f1.dic/matrix.def ... 346x346\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","              precision          recall         F\n","LEVEL 0:    12.8959(57/442) 11.8998(57/479) 12.3779\n","LEVEL 1:    12.2172(54/442) 11.2735(54/479) 11.7264\n","LEVEL 2:    11.7647(52/442) 10.8559(52/479) 11.2921\n","LEVEL 4:    11.7647(52/442) 10.8559(52/479) 11.2921\n","PASS: run-cost-train.sh\n","==================\n","All 3 tests passed\n","==================\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making install in src\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","test -z \"/usr/local/lib\" || /bin/mkdir -p \"/usr/local/lib\"\n"," /bin/bash ../libtool   --mode=install /usr/bin/install -c   libmecab.la '/usr/local/lib'\n","libtool: install: /usr/bin/install -c .libs/libmecab.so.2.0.0 /usr/local/lib/libmecab.so.2.0.0\n","libtool: install: (cd /usr/local/lib && { ln -s -f libmecab.so.2.0.0 libmecab.so.2 || { rm -f libmecab.so.2 && ln -s libmecab.so.2.0.0 libmecab.so.2; }; })\n","libtool: install: (cd /usr/local/lib && { ln -s -f libmecab.so.2.0.0 libmecab.so || { rm -f libmecab.so && ln -s libmecab.so.2.0.0 libmecab.so; }; })\n","libtool: install: /usr/bin/install -c .libs/libmecab.lai /usr/local/lib/libmecab.la\n","libtool: install: /usr/bin/install -c .libs/libmecab.a /usr/local/lib/libmecab.a\n","libtool: install: chmod 644 /usr/local/lib/libmecab.a\n","libtool: install: ranlib /usr/local/lib/libmecab.a\n","libtool: finish: PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/sbin\" ldconfig -n /usr/local/lib\n","----------------------------------------------------------------------\n","Libraries have been installed in:\n","   /usr/local/lib\n","\n","If you ever happen to want to link against installed libraries\n","in a given directory, LIBDIR, you must either use libtool, and\n","specify the full pathname of the library, or use the `-LLIBDIR'\n","flag during linking and do at least one of the following:\n","   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n","     during execution\n","   - add LIBDIR to the `LD_RUN_PATH' environment variable\n","     during linking\n","   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n","   - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n","\n","See any operating system documentation about shared libraries for\n","more information, such as the ld(1) and ld.so(8) manual pages.\n","----------------------------------------------------------------------\n","test -z \"/usr/local/bin\" || /bin/mkdir -p \"/usr/local/bin\"\n","  /bin/bash ../libtool   --mode=install /usr/bin/install -c mecab '/usr/local/bin'\n","libtool: install: /usr/bin/install -c .libs/mecab /usr/local/bin/mecab\n","test -z \"/usr/local/libexec/mecab\" || /bin/mkdir -p \"/usr/local/libexec/mecab\"\n","  /bin/bash ../libtool   --mode=install /usr/bin/install -c mecab-dict-index mecab-dict-gen mecab-cost-train mecab-system-eval mecab-test-gen '/usr/local/libexec/mecab'\n","libtool: install: /usr/bin/install -c .libs/mecab-dict-index /usr/local/libexec/mecab/mecab-dict-index\n","libtool: install: /usr/bin/install -c .libs/mecab-dict-gen /usr/local/libexec/mecab/mecab-dict-gen\n","libtool: install: /usr/bin/install -c .libs/mecab-cost-train /usr/local/libexec/mecab/mecab-cost-train\n","libtool: install: /usr/bin/install -c .libs/mecab-system-eval /usr/local/libexec/mecab/mecab-system-eval\n","libtool: install: /usr/bin/install -c .libs/mecab-test-gen /usr/local/libexec/mecab/mecab-test-gen\n","test -z \"/usr/local/include\" || /bin/mkdir -p \"/usr/local/include\"\n"," /usr/bin/install -c -m 644 mecab.h '/usr/local/include'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making install in man\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","test -z \"/usr/local/share/man/man1\" || /bin/mkdir -p \"/usr/local/share/man/man1\"\n"," /usr/bin/install -c -m 644 mecab.1 '/usr/local/share/man/man1'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making install in doc\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","make[2]: Nothing to be done for 'install-data-am'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making install in tests\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","make[2]: Nothing to be done for 'install-data-am'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","test -z \"/usr/local/bin\" || /bin/mkdir -p \"/usr/local/bin\"\n"," /usr/bin/install -c mecab-config '/usr/local/bin'\n","test -z \"/usr/local/etc\" || /bin/mkdir -p \"/usr/local/etc\"\n"," /usr/bin/install -c -m 644 mecabrc '/usr/local/etc'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Install mecab-ko-dic\n","Install mecab-ko-dic\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n","100 47.4M  100 47.4M    0     0  16.4M      0  0:00:02  0:00:02 --:--:-- 30.5M\n","mecab-ko-dic-2.1.1-20180720/\n","mecab-ko-dic-2.1.1-20180720/configure\n","mecab-ko-dic-2.1.1-20180720/COPYING\n","mecab-ko-dic-2.1.1-20180720/autogen.sh\n","mecab-ko-dic-2.1.1-20180720/Place-station.csv\n","mecab-ko-dic-2.1.1-20180720/NNG.csv\n","mecab-ko-dic-2.1.1-20180720/README\n","mecab-ko-dic-2.1.1-20180720/EF.csv\n","mecab-ko-dic-2.1.1-20180720/MAG.csv\n","mecab-ko-dic-2.1.1-20180720/Preanalysis.csv\n","mecab-ko-dic-2.1.1-20180720/NNB.csv\n","mecab-ko-dic-2.1.1-20180720/Person-actor.csv\n","mecab-ko-dic-2.1.1-20180720/VV.csv\n","mecab-ko-dic-2.1.1-20180720/Makefile.in\n","mecab-ko-dic-2.1.1-20180720/matrix.def\n","mecab-ko-dic-2.1.1-20180720/EC.csv\n","mecab-ko-dic-2.1.1-20180720/NNBC.csv\n","mecab-ko-dic-2.1.1-20180720/clean\n","mecab-ko-dic-2.1.1-20180720/ChangeLog\n","mecab-ko-dic-2.1.1-20180720/J.csv\n","mecab-ko-dic-2.1.1-20180720/.keep\n","mecab-ko-dic-2.1.1-20180720/feature.def\n","mecab-ko-dic-2.1.1-20180720/Foreign.csv\n","mecab-ko-dic-2.1.1-20180720/XPN.csv\n","mecab-ko-dic-2.1.1-20180720/EP.csv\n","mecab-ko-dic-2.1.1-20180720/NR.csv\n","mecab-ko-dic-2.1.1-20180720/left-id.def\n","mecab-ko-dic-2.1.1-20180720/Place.csv\n","mecab-ko-dic-2.1.1-20180720/Symbol.csv\n","mecab-ko-dic-2.1.1-20180720/dicrc\n","mecab-ko-dic-2.1.1-20180720/NP.csv\n","mecab-ko-dic-2.1.1-20180720/ETM.csv\n","mecab-ko-dic-2.1.1-20180720/IC.csv\n","mecab-ko-dic-2.1.1-20180720/Place-address.csv\n","mecab-ko-dic-2.1.1-20180720/Group.csv\n","mecab-ko-dic-2.1.1-20180720/model.def\n","mecab-ko-dic-2.1.1-20180720/XSN.csv\n","mecab-ko-dic-2.1.1-20180720/INSTALL\n","mecab-ko-dic-2.1.1-20180720/rewrite.def\n","mecab-ko-dic-2.1.1-20180720/Inflect.csv\n","mecab-ko-dic-2.1.1-20180720/configure.ac\n","mecab-ko-dic-2.1.1-20180720/NNP.csv\n","mecab-ko-dic-2.1.1-20180720/CoinedWord.csv\n","mecab-ko-dic-2.1.1-20180720/XSV.csv\n","mecab-ko-dic-2.1.1-20180720/pos-id.def\n","mecab-ko-dic-2.1.1-20180720/Makefile.am\n","mecab-ko-dic-2.1.1-20180720/unk.def\n","mecab-ko-dic-2.1.1-20180720/missing\n","mecab-ko-dic-2.1.1-20180720/VCP.csv\n","mecab-ko-dic-2.1.1-20180720/install-sh\n","mecab-ko-dic-2.1.1-20180720/Hanja.csv\n","mecab-ko-dic-2.1.1-20180720/MAJ.csv\n","mecab-ko-dic-2.1.1-20180720/XSA.csv\n","mecab-ko-dic-2.1.1-20180720/Wikipedia.csv\n","mecab-ko-dic-2.1.1-20180720/tools/\n","mecab-ko-dic-2.1.1-20180720/tools/add-userdic.sh\n","mecab-ko-dic-2.1.1-20180720/tools/mecab-bestn.sh\n","mecab-ko-dic-2.1.1-20180720/tools/convert_for_using_store.sh\n","mecab-ko-dic-2.1.1-20180720/user-dic/\n","mecab-ko-dic-2.1.1-20180720/user-dic/nnp.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/place.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/person.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/README.md\n","mecab-ko-dic-2.1.1-20180720/NorthKorea.csv\n","mecab-ko-dic-2.1.1-20180720/VX.csv\n","mecab-ko-dic-2.1.1-20180720/right-id.def\n","mecab-ko-dic-2.1.1-20180720/VA.csv\n","mecab-ko-dic-2.1.1-20180720/char.def\n","mecab-ko-dic-2.1.1-20180720/NEWS\n","mecab-ko-dic-2.1.1-20180720/MM.csv\n","mecab-ko-dic-2.1.1-20180720/ETN.csv\n","mecab-ko-dic-2.1.1-20180720/AUTHORS\n","mecab-ko-dic-2.1.1-20180720/Person.csv\n","mecab-ko-dic-2.1.1-20180720/XR.csv\n","mecab-ko-dic-2.1.1-20180720/VCN.csv\n","Looking in current directory for macros.\n","configure.ac:2: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated.  For more info, see:\n","configure.ac:2: http://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation\n","checking for a BSD-compatible install... /usr/bin/install -c\n","checking whether build environment is sane... yes\n","/tmp/mecab-ko-dic-2.1.1-20180720/missing: Unknown `--is-lightweight' option\n","Try `/tmp/mecab-ko-dic-2.1.1-20180720/missing --help' for more information\n","configure: WARNING: 'missing' script is too old or missing\n","checking for a thread-safe mkdir -p... /bin/mkdir -p\n","checking for gawk... no\n","checking for mawk... mawk\n","checking whether make sets $(MAKE)... yes\n","checking whether make supports nested variables... yes\n","checking for mecab-config... /usr/local/bin/mecab-config\n","checking that generated files are newer than configure... done\n","configure: creating ./config.status\n","config.status: creating Makefile\n","/usr/local/lib\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","/usr/local/libexec/mecab/mecab-dict-index -d . -o . -f UTF-8 -t UTF-8\n","reading ./unk.def ... 13\n","emitting double-array: 100% |###########################################| \n","reading ./Preanalysis.csv ... 5\n","reading ./XSV.csv ... 23\n","reading ./MM.csv ... 453\n","reading ./Place-station.csv ... 1145\n","reading ./ETN.csv ... 14\n","reading ./MAG.csv ... 14242\n","reading ./XPN.csv ... 83\n","reading ./IC.csv ... 1305\n","reading ./EF.csv ... 1820\n","reading ./XSN.csv ... 124\n","reading ./CoinedWord.csv ... 148\n","reading ./ETM.csv ... 133\n","reading ./VCP.csv ... 9\n","reading ./Place.csv ... 30303\n","reading ./Person.csv ... 196459\n","reading ./NR.csv ... 482\n","reading ./Group.csv ... 3176\n","reading ./Person-actor.csv ... 99230\n","reading ./Foreign.csv ... 11690\n","reading ./EP.csv ... 51\n","reading ./XR.csv ... 3637\n","reading ./XSA.csv ... 19\n","reading ./NorthKorea.csv ... 3\n","reading ./J.csv ... 416\n","reading ./VX.csv ... 125\n","reading ./NNG.csv ... 208524\n","reading ./Wikipedia.csv ... 36762\n","reading ./Inflect.csv ... 44820\n","reading ./NNBC.csv ... 677\n","reading ./MAJ.csv ... 240\n","reading ./EC.csv ... 2547\n","reading ./VV.csv ... 7331\n","reading ./Symbol.csv ... 16\n","reading ./Place-address.csv ... 19301\n","reading ./NNP.csv ... 2371\n","reading ./NNB.csv ... 140\n","reading ./NP.csv ... 342\n","reading ./VCN.csv ... 7\n","reading ./Hanja.csv ... 125750\n","reading ./VA.csv ... 2360\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 3822x2693\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","echo To enable dictionary, rewrite /usr/local/etc/mecabrc as \\\"dicdir = /usr/local/lib/mecab/dic/mecab-ko-dic\\\"\n","To enable dictionary, rewrite /usr/local/etc/mecabrc as \"dicdir = /usr/local/lib/mecab/dic/mecab-ko-dic\"\n","make[1]: Entering directory '/tmp/mecab-ko-dic-2.1.1-20180720'\n","make[1]: Nothing to be done for 'install-exec-am'.\n"," /bin/mkdir -p '/usr/local/lib/mecab/dic/mecab-ko-dic'\n"," /usr/bin/install -c -m 644 model.bin matrix.bin char.bin sys.dic unk.dic left-id.def right-id.def rewrite.def pos-id.def dicrc '/usr/local/lib/mecab/dic/mecab-ko-dic'\n","make[1]: Leaving directory '/tmp/mecab-ko-dic-2.1.1-20180720'\n","Install mecab-python\n","/tmp /tmp/mecab-ko-dic-2.1.1-20180720\n","Cloning into 'mecab-python-0.996'...\n","Unpacking objects: 100% (17/17), done.\n","/tmp/mecab-ko-dic-2.1.1-20180720\n","Processing /tmp/mecab-python-0.996\n","\u001b[33m  DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n","   pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\u001b[0m\n","Building wheels for collected packages: mecab-python\n","  Building wheel for mecab-python (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mecab-python: filename=mecab_python-0.996_ko_0.9.2-cp37-cp37m-linux_x86_64.whl size=141816 sha256=deb60dffffa394c72c1042602e766b9d53ec921a459efea22c962ca763870288\n","  Stored in directory: /root/.cache/pip/wheels/40/7b/9f/2922869bef86c3354ae7034f7a3647c573ee1997c2dad0290a\n","\u001b[33m  WARNING: Built wheel for mecab-python is invalid: Metadata 1.2 mandates PEP 440 version, but '0.996-ko-0.9.2' is not\u001b[0m\n","Failed to build mecab-python\n","Installing collected packages: mecab-python\n","    Running setup.py install for mecab-python ... \u001b[?25l\u001b[?25hdone\n","\u001b[33m  DEPRECATION: mecab-python was installed using the legacy 'setup.py install' method, because a wheel could not be built for it. A possible replacement is to fix the wheel build issue reported above. You can find discussion regarding this at https://github.com/pypa/pip/issues/8368.\u001b[0m\n","Successfully installed mecab-python-0.996-ko-0.9.2\n","Done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"R5j0MOc6ScMU","executionInfo":{"status":"ok","timestamp":1626964445998,"user_tz":-540,"elapsed":10,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["import sys\n","sys.path.append('/content/drive/MyDrive/'+FOLDERNAME+LIB_PATH)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"iiSuaZwdshvJ","executionInfo":{"status":"ok","timestamp":1626964517139,"user_tz":-540,"elapsed":71150,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["from preprocess import get_tokenizer, post_processing\n","from bert.tokenization import FullTokenizer\n","import tensorflow as tf\n","import tensorflow.keras as k\n","import numpy as np\n","import sys, os, random, argparse, re, collections\n","from gensim.models import Word2Vec\n","from collections import defaultdict\n","from scipy.stats import truncnorm"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"x1n-Fa7HjDy_","executionInfo":{"status":"ok","timestamp":1626965181524,"user_tz":-540,"elapsed":919,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["class Tuner(object):\n","\n","    def __init__(self, train_corpus_fname=None, tokenized_train_corpus_fname=None,\n","                 test_corpus_fname=None, tokenized_test_corpus_fname=None,\n","                 model_name=\"bert\", model_save_path=None, vocab_fname=None, eval_every=1000,\n","                 batch_size=32, num_epochs=10, dropout_keep_prob_rate=0.9, model_ckpt_path=None,\n","                 sp_model_path=None, batch_verbose=True):\n","        # configurations\n","        self.model_name = model_name\n","        self.eval_every = eval_every\n","        self.model_ckpt_path = model_ckpt_path\n","        self.model_save_path = model_save_path\n","        self.batch_size = batch_size\n","        self.num_epochs = num_epochs\n","        self.dropout_keep_prob_rate = dropout_keep_prob_rate\n","        self.best_valid_score = 0.0\n","        if not os.path.exists(model_save_path):\n","            os.mkdir(model_save_path)\n","        # define tokenizer\n","        if self.model_name == \"bert\":\n","            self.tokenizer = FullTokenizer(vocab_file=vocab_fname, do_lower_case=False)\n","        elif self.model_name == \"xlnet\":\n","            sp = spm.SentencePieceProcessor()\n","            sp.Load(sp_model_path)\n","            self.tokenizer = sp\n","        else:\n","            self.tokenizer = get_tokenizer(\"mecab\")\n","        # load or tokenize corpus\n","        self.train_data, self.train_data_size = self.load_or_tokenize_corpus(train_corpus_fname, tokenized_train_corpus_fname)\n","        self.test_data, self.test_data_size = self.load_or_tokenize_corpus(test_corpus_fname, tokenized_test_corpus_fname)\n","\n","        self.batch_verbose = batch_verbose\n","        self.epoch_verbose = not self.batch_verbose\n","        self.nBatchLogger = self.NBatchLogger(self, self.eval_every, self.batch_verbose)\n","\n","    def load_or_tokenize_corpus(self, corpus_fname, tokenized_corpus_fname):\n","        data_set = []\n","        if os.path.exists(tokenized_corpus_fname):\n","            print(\"load tokenized corpus : \" + tokenized_corpus_fname)\n","            with open(tokenized_corpus_fname, 'r') as f1:\n","                for line in f1:\n","                    tokens, label = line.strip().split(\"\\u241E\")\n","                    if len(tokens) > 0:\n","                        data_set.append([tokens.split(\" \"), int(label)])\n","        else:\n","            print(\"tokenize corpus : \" + corpus_fname + \" > \" + tokenized_corpus_fname)\n","            with open(corpus_fname, 'r') as f2:\n","                next(f2)  # skip head line\n","                for line in f2:\n","                    sentence, label = line.strip().split(\"\\u241E\")\n","                    if self.model_name == \"bert\":\n","                        tokens = self.tokenizer.tokenize(sentence)\n","                    elif self.model_name == \"xlnet\":\n","                        normalized_sentence = preprocess_text(sentence, lower=False)\n","                        tokens = encode_pieces(self.tokenizer, normalized_sentence, return_unicode=False, sample=False)\n","                    else:\n","                        tokens = self.tokenizer.morphs(sentence)\n","                        tokens = post_processing(tokens)\n","                    if int(label) > 0.5:\n","                        int_label = 1\n","                    else:\n","                        int_label = 0\n","                    data_set.append([tokens, int_label])\n","            with open(tokenized_corpus_fname, 'w') as f3:\n","                for tokens, label in data_set:\n","                    f3.writelines(' '.join(tokens) + \"\\u241E\" + str(label) + \"\\n\")\n","        return data_set, len(data_set)\n","\n","    def train(self, optimizer, loss):\n","        saver = k.callbacks.ModelCheckpoint(\n","            filepath='ckpt/word-embedding.01-0.46.h5',\n","            save_weights_only=True)\n","\n","        train_batches = self.GetBatch(data=self.train_data, \n","                                      data_size=self.train_data_size,\n","                                      batch_size=self.batch_size,\n","                                      make_input=self.make_input)\n","        test_batches = self.GetBatch(data=self.test_data, \n","                                     data_size=self.test_data_size,\n","                                     batch_size=self.batch_size,\n","                                     make_input=self.make_input)\n","        self.model.compile(optimizer=optimizer,\n","                           loss=loss,\n","                           metrics=['acc'])\n","        self.history = self.model.fit(x=train_batches,\n","                       epochs=self.num_epochs,\n","                       validation_data=test_batches,\n","                       callbacks=[self.nBatchLogger, saver],\n","                       verbose=self.epoch_verbose)\n","\n","    def validation(self, model):\n","        eval = model.evaluate(self.train_data, verbose = self.batch_verbose)\n","        if eval['acc'] > self.best_valid_score:\n","            self.best_valid_score = eval['acc']\n","            path = self.model_save_path + '/' + f'{eval[\"acc\"]:.5f}'\n","            model.save(path)\n","\n","    class GetBatch(k.utils.Sequence):\n","        'Generates data for Keras'\n","        def __init__(self, data, data_size, batch_size, make_input):\n","            'Initialization'\n","            self.data = np.array(data, dtype=object)\n","            self.data_size = data_size\n","            self.batch_size = batch_size\n","            self.make_input = make_input\n","\n","            self.idx = np.arange(self.data_size)\n","            self.on_epoch_end()\n","\n","        def __len__(self):\n","            'Denotes the number of batches per epoch'\n","            return int(self.data_size / self.batch_size)\n","\n","        def __getitem__(self, i):\n","            'Generate one batch of data'\n","            # Generate indexes of the batch\n","            indexes = self.idx[i*self.batch_size:(i+1)*self.batch_size]\n","            \n","            # Generate data\n","            features = self.data[indexes]\n","            batch_sentences, batch_labels = features[:, 0], features[:, 1]\n","            X, y = self.make_input(batch_sentences, batch_labels)\n","            return X, y\n","\n","        def on_epoch_end(self):\n","            'Updates indexes after each epoch'\n","            np.random.shuffle(self.idx)\n","\n","\n","    class NBatchLogger(k.callbacks.Callback):\n","        def __init__(self, outer, eval_every, batch_verbose=False):\n","            self.outer = outer\n","            self._step = 0\n","            self._checkpoint_loss = 0\n","            self._eval_every = eval_every\n","            self._batch_verbose = batch_verbose\n","\n","        def on_batch_end(self, batch, logs=None):\n","            self._step += 1\n","            self._checkpoint_loss += logs['loss']\n","            if self._step % self._eval_every == 0:\n","                if self._batch_verbose:\n","                    print(\"global step %d train loss %.4f\" %\n","                                    (self._step, self._checkpoint_loss / self._eval_every))\n","            self._checkpoint_loss = 0\n","            #self.outer.validation(self.model)\n","\n","\n","    def make_input(self, sentences, labels, training):\n","        raise NotImplementedError\n","\n","    def tune(self):\n","        raise NotImplementedError\n","        raise NotImplementedError"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"id":"vhEE9IaNpyTs","executionInfo":{"status":"ok","timestamp":1626965183632,"user_tz":-540,"elapsed":365,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["class WordEmbeddingTuner(Tuner):\n","\n","    def __init__(self, train_corpus_fname, test_corpus_fname,\n","                 model_save_path, embedding_name, embedding_fname=None,\n","                 max_token_length = 100, embedding_size=100, batch_size=128, learning_rate=0.0001, num_labels=2, batch_verbose=True, num_epochs=10):\n","        # Load a corpus.\n","        super().__init__(train_corpus_fname=train_corpus_fname,\n","                         tokenized_train_corpus_fname=train_corpus_fname + \".word-embedding-tokenized\",\n","                         test_corpus_fname=test_corpus_fname, batch_size=batch_size,\n","                         tokenized_test_corpus_fname=test_corpus_fname + \".word-embedding-tokenized\",\n","                         model_name=embedding_name, model_save_path=model_save_path,\n","                         batch_verbose=batch_verbose, num_epochs=num_epochs)\n","        self.lr = learning_rate\n","        self.max_token_length = max_token_length\n","        self.embedding_size = embedding_size\n","        # Load Pretrained Word Embeddings.\n","        self.embeddings, self.vocab = self.load_embeddings(embedding_name, embedding_fname)\n","        self.unk_idx = len(self.vocab)\n","        self.pad_idx = len(self.vocab) + 1\n","        # build train model.\n","        self.model = self.make_word_embedding_model(num_labels, len(self.vocab) + 2, self.embedding_size)\n","\n","    def make_word_embedding_model(self, num_labels, vocab_size, embedding_size):\n","        dropout_rate = 1 - self.dropout_keep_prob_rate\n","\n","        input = k.layers.Input((None,), dtype='int32')\n","\n","        # shape : [batch_size, unroll_steps, dimension]\n","        embedding_layer = k.layers.Embedding(vocab_size,\n","                                       embedding_size,\n","                                       embeddings_initializer=k.initializers.Constant(self.embeddings),\n","                                       trainable=True)\n","        x = embedding_layer(input)\n","\n","        #input of fine tuning network\n","        features = k.layers.Dropout(dropout_rate)(x)\n","\n","        # Bidirectional LSTM Layer\n","        #lstm_cell_fw = k.layers.RNN(tf.compat.v1.nn.rnn_cell.LSTMCell(embedding_size, cell_clip=5), return_sequences=True)\n","        #lstm_cell_bw = k.layers.RNN(tf.compat.v1.nn.rnn_cell.LSTMCell(embedding_size, cell_clip=5), return_sequences=True, go_backwards=True)\n","        lstm_output = k.layers.Bidirectional(\n","            k.layers.LSTM(embedding_size, return_sequences=True),\n","            'sum',\n","            backward_layer = k.layers.LSTM(embedding_size, return_sequences=True, go_backwards=True),\n","            dtype=tf.float32\n","            )(features)\n","\n","        # Attention layer\n","        H = k.layers.Dense(256, activation='tanh', name=\"H\")(lstm_output)\n","        attention_score = k.layers.Dense(1)(H)\n","        attention_score = k.layers.Softmax(axis=1, name='attention_score')(attention_score)\n","        attention_output = tf.matmul(\n","            tf.transpose(H, [0,2,1]),\n","            attention_score\n","            )\n","        attention_output = tf.squeeze(attention_output, axis=-1)\n","        layer_output = k.layers.Dropout(dropout_rate)(attention_output)\n","\n","        # Feedforward Layer\n","        fc = k.layers.Dense(512, activation='relu')(layer_output)\n","        features_drop = k.layers.Dropout(dropout_rate)(fc)\n","        logits = k.layers.Dense(num_labels)(features_drop)\n","\n","        return k.Model(input, logits)\n","\n","    def tune(self):\n","        optimizer = k.optimizers.Adam(self.lr)\n","        loss = k.losses.SparseCategoricalCrossentropy(from_logits=True)\n","        self.train(optimizer, loss)\n","\n","    def make_input(self, sentences, labels):\n","        input_ids = []\n","        max_token_length = self.get_max_token_length_this_batch(sentences)\n","        for tokens in sentences:\n","            token_ids = []\n","            tokens_length = len(tokens)\n","            for token in tokens:\n","                if token in self.vocab:\n","                    token_ids.append(self.vocab[token])\n","                else:\n","                    token_ids.append(self.unk_idx)\n","            if len(tokens) < max_token_length:\n","                token_ids.extend(\n","                    [self.pad_idx] * (max_token_length - tokens_length))\n","            input_ids.append(token_ids)\n","        return np.asarray(input_ids).astype(np.int32), np.asarray(labels).astype(np.int32)\n","\n","    def get_max_token_length_this_batch(self, sentences):\n","        return max(len(sentence) for sentence in sentences)\n","\n","    def get_truncated_normal(self, mean=0, sd=1, low=-1, upp=1):\n","        return truncnorm(\n","            (low - mean) / sd, (upp - mean) / sd, loc=mean, scale=sd)\n","\n","    def load_embeddings(self, embedding_name, embedding_fname):\n","        random_generator = self.get_truncated_normal()\n","        if embedding_name in [\"fasttext\", \"glove\", \"swivel\"]:\n","            embeddings, words = [], []\n","            with open(embedding_fname, 'r') as f:\n","                if embedding_name == \"fasttext\":\n","                    next(f) # skip head line\n","                for line in f:\n","                    if embedding_name == \"swivel\":\n","                        splitedLine = line.strip().split(\"\\t\")\n","                    else:\n","                        splitedLine = line.strip().split()\n","                    word = splitedLine[0]\n","                    embedding = [float(el) for el in splitedLine[1:]]\n","                    words.append(word)\n","                    embeddings.append(embedding)\n","            embeddings = np.array(embeddings)\n","            vocab = {word:idx for idx, word in enumerate(words)}\n","        elif embedding_name == \"word2vec\":\n","            model = Word2Vec.load(embedding_fname)\n","            embeddings = model.wv.vectors\n","            vocab = {word:idx for idx, word in enumerate(model.wv.index2word)}\n","        else:\n","            words_count = defaultdict(int)\n","            for tokens, _ in self.train_data:\n","                for token in tokens:\n","                    words_count[token] += 1\n","            sorted_words = sorted(words_count.items(), key=lambda x: x[1], reverse=True)[:50000]\n","            words = [word for word, _ in sorted_words]\n","            vocab = {word:idx for idx, word in enumerate(words)}\n","            random_embeddings = random_generator.rvs(len(vocab) * self.embedding_size)\n","            embeddings = random_embeddings.reshape(len(vocab), self.embedding_size)\n","        # for UNK, PAD token\n","        added_embeddings = random_generator.rvs(self.embedding_size * 2)\n","        embeddings = np.append(embeddings, added_embeddings.reshape(2, self.embedding_size), axis=0)\n","        return embeddings, vocab"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UvwcrAFgaqlP","executionInfo":{"status":"ok","timestamp":1626965222594,"user_tz":-540,"elapsed":36176,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"95a4bf99-8f13-4d31-c786-a137b25a59bf"},"source":["embed='random'\n","embed_f = ''\n","wordEmbeddingTuner = WordEmbeddingTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt',\n","                                test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                                embedding_name=embed,\n","                                embedding_fname=DATA_PATH+f'word-embeddings/{embed}/{embed_f}',\n","                                model_save_path=DATA_PATH+f'word-embeddings/{embed}-tune',\n","                                batch_verbose=False, num_epochs=2)"],"execution_count":24,"outputs":[{"output_type":"stream","text":["load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ATxiHMgkqL7J","executionInfo":{"status":"ok","timestamp":1626965322691,"user_tz":-540,"elapsed":100127,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"f4f1d832-76dd-4a5e-957d-87add1c1bb93"},"source":["wordEmbeddingTuner.tune()"],"execution_count":25,"outputs":[{"output_type":"stream","text":["Epoch 1/2\n","1171/1171 [==============================] - 52s 42ms/step - loss: 0.5504 - acc: 0.7033 - val_loss: 0.4516 - val_acc: 0.7857\n","Epoch 2/2\n","1171/1171 [==============================] - 46s 40ms/step - loss: 0.4265 - acc: 0.8003 - val_loss: 0.4035 - val_acc: 0.8126\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8boW34V6qw4q","executionInfo":{"status":"ok","timestamp":1626965392675,"user_tz":-540,"elapsed":36774,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"dae5f3d1-72ca-4fae-c1be-8cedbafc5be7"},"source":["test_tuner = WordEmbeddingTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt',\n","                                test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                                embedding_name=embed,\n","                                embedding_fname=DATA_PATH+f'word-embeddings/{embed}/{embed_f}',\n","                                model_save_path=DATA_PATH+f'word-embeddings/{embed}-tune',\n","                                batch_verbose=False, num_epochs=2)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-xxQo91JsTmU","executionInfo":{"status":"ok","timestamp":1626965464567,"user_tz":-540,"elapsed":2378,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["test_tuner.model.load_weights('ckpt/word-embedding.01-0.46.h5')"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"id":"UKUk_ZJustg4","executionInfo":{"status":"ok","timestamp":1626965530039,"user_tz":-540,"elapsed":510,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["np.testing.assert_allclose(\n","    test_tuner.model(k.backend.ones((3, 30))),\n","    wordEmbeddingTuner.model(k.backend.ones((3, 30))))"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odowKgKaPhZ8","executionInfo":{"status":"ok","timestamp":1626522745235,"user_tz":-540,"elapsed":4357520,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"a8467ac7-3373-4a82-f471-a267eae03003"},"source":["import json\n","histories = {}\n","for embed, embed_f in [['random', ''], \n","              ['word2vec', 'word2vec'], \n","              ['fasttext', 'fasttext.vec'], \n","              ['glove', 'glove.txt'], \n","              ['swivel', 'row_embedding.tsv']]:\n","    wordEmbeddingTuner = WordEmbeddingTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt',\n","                                    test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                                    embedding_name=embed,\n","                                    embedding_fname=DATA_PATH+f'word-embeddings/{embed}/{embed_f}',\n","                                    model_save_path=DATA_PATH+f'word-embeddings/{embed}-tune',\n","                                    batch_verbose=False, num_epochs=10)\n","    wordEmbeddingTuner.tune()\n","    histories[embed] = wordEmbeddingTuner.history.history\n","\n","    with open('history.txt', 'w') as f:\n","        json.dump(histories, f)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","Epoch 1/10\n","1171/1171 [==============================] - 56s 46ms/step - loss: 0.5453 - acc: 0.7117 - val_loss: 0.4517 - val_acc: 0.7849\n","Epoch 2/10\n","1171/1171 [==============================] - 53s 45ms/step - loss: 0.4275 - acc: 0.7996 - val_loss: 0.4017 - val_acc: 0.8129\n","Epoch 3/10\n","1171/1171 [==============================] - 54s 46ms/step - loss: 0.3866 - acc: 0.8232 - val_loss: 0.3791 - val_acc: 0.8275\n","Epoch 4/10\n","1171/1171 [==============================] - 53s 46ms/step - loss: 0.3618 - acc: 0.8385 - val_loss: 0.3694 - val_acc: 0.8339\n","Epoch 5/10\n","1171/1171 [==============================] - 53s 45ms/step - loss: 0.3441 - acc: 0.8481 - val_loss: 0.3536 - val_acc: 0.8426\n","Epoch 6/10\n","1171/1171 [==============================] - 54s 46ms/step - loss: 0.3280 - acc: 0.8580 - val_loss: 0.3475 - val_acc: 0.8451\n","Epoch 7/10\n","1171/1171 [==============================] - 54s 46ms/step - loss: 0.3166 - acc: 0.8629 - val_loss: 0.3459 - val_acc: 0.8493\n","Epoch 8/10\n","1171/1171 [==============================] - 53s 46ms/step - loss: 0.3052 - acc: 0.8698 - val_loss: 0.3341 - val_acc: 0.8536\n","Epoch 9/10\n","1171/1171 [==============================] - 54s 46ms/step - loss: 0.2953 - acc: 0.8748 - val_loss: 0.3336 - val_acc: 0.8538\n","Epoch 10/10\n","1171/1171 [==============================] - 54s 46ms/step - loss: 0.2854 - acc: 0.8792 - val_loss: 0.3304 - val_acc: 0.8566\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","Epoch 1/10\n","1171/1171 [==============================] - 271s 229ms/step - loss: 0.4726 - acc: 0.7671 - val_loss: 0.3913 - val_acc: 0.8240\n","Epoch 2/10\n","1171/1171 [==============================] - 265s 226ms/step - loss: 0.3739 - acc: 0.8320 - val_loss: 0.3579 - val_acc: 0.8397\n","Epoch 3/10\n","1171/1171 [==============================] - 266s 227ms/step - loss: 0.3441 - acc: 0.8488 - val_loss: 0.3403 - val_acc: 0.8493\n","Epoch 4/10\n","1171/1171 [==============================] - 265s 226ms/step - loss: 0.3238 - acc: 0.8590 - val_loss: 0.3292 - val_acc: 0.8564\n","Epoch 5/10\n","1171/1171 [==============================] - 265s 226ms/step - loss: 0.3070 - acc: 0.8696 - val_loss: 0.3199 - val_acc: 0.8611\n","Epoch 6/10\n","1171/1171 [==============================] - 265s 226ms/step - loss: 0.2947 - acc: 0.8753 - val_loss: 0.3192 - val_acc: 0.8624\n","Epoch 7/10\n","1171/1171 [==============================] - 246s 210ms/step - loss: 0.2827 - acc: 0.8810 - val_loss: 0.3148 - val_acc: 0.8628\n","Epoch 8/10\n","1171/1171 [==============================] - 234s 200ms/step - loss: 0.2728 - acc: 0.8861 - val_loss: 0.3159 - val_acc: 0.8660\n","Epoch 9/10\n","1171/1171 [==============================] - 235s 201ms/step - loss: 0.2622 - acc: 0.8912 - val_loss: 0.3123 - val_acc: 0.8644\n","Epoch 10/10\n","1171/1171 [==============================] - 235s 201ms/step - loss: 0.2526 - acc: 0.8966 - val_loss: 0.3094 - val_acc: 0.8684\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","Epoch 1/10\n","1171/1171 [==============================] - 239s 201ms/step - loss: 0.4649 - acc: 0.7709 - val_loss: 0.3818 - val_acc: 0.8279\n","Epoch 2/10\n","1171/1171 [==============================] - 229s 196ms/step - loss: 0.3654 - acc: 0.8374 - val_loss: 0.3502 - val_acc: 0.8453\n","Epoch 3/10\n","1171/1171 [==============================] - 230s 196ms/step - loss: 0.3381 - acc: 0.8514 - val_loss: 0.3373 - val_acc: 0.8519\n","Epoch 4/10\n","1171/1171 [==============================] - 231s 197ms/step - loss: 0.3213 - acc: 0.8612 - val_loss: 0.3296 - val_acc: 0.8567\n","Epoch 5/10\n","1171/1171 [==============================] - 229s 196ms/step - loss: 0.3079 - acc: 0.8674 - val_loss: 0.3208 - val_acc: 0.8615\n","Epoch 6/10\n","1171/1171 [==============================] - 230s 196ms/step - loss: 0.2939 - acc: 0.8753 - val_loss: 0.3168 - val_acc: 0.8635\n","Epoch 7/10\n","1171/1171 [==============================] - 230s 197ms/step - loss: 0.2840 - acc: 0.8797 - val_loss: 0.3219 - val_acc: 0.8617\n","Epoch 8/10\n","1171/1171 [==============================] - 230s 196ms/step - loss: 0.2727 - acc: 0.8857 - val_loss: 0.3119 - val_acc: 0.8666\n","Epoch 9/10\n","1171/1171 [==============================] - 229s 196ms/step - loss: 0.2648 - acc: 0.8908 - val_loss: 0.3119 - val_acc: 0.8679\n","Epoch 10/10\n","1171/1171 [==============================] - 230s 196ms/step - loss: 0.2547 - acc: 0.8945 - val_loss: 0.3091 - val_acc: 0.8691\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","Epoch 1/10\n","1171/1171 [==============================] - 256s 214ms/step - loss: 0.4595 - acc: 0.7739 - val_loss: 0.3900 - val_acc: 0.8211\n","Epoch 2/10\n","1171/1171 [==============================] - 250s 213ms/step - loss: 0.3782 - acc: 0.8282 - val_loss: 0.3612 - val_acc: 0.8371\n","Epoch 3/10\n","1171/1171 [==============================] - 250s 213ms/step - loss: 0.3509 - acc: 0.8435 - val_loss: 0.3535 - val_acc: 0.8404\n","Epoch 4/10\n","1171/1171 [==============================] - 249s 213ms/step - loss: 0.3330 - acc: 0.8536 - val_loss: 0.3357 - val_acc: 0.8507\n","Epoch 5/10\n","1171/1171 [==============================] - 249s 213ms/step - loss: 0.3179 - acc: 0.8615 - val_loss: 0.3290 - val_acc: 0.8555\n","Epoch 6/10\n","1171/1171 [==============================] - 238s 204ms/step - loss: 0.3060 - acc: 0.8689 - val_loss: 0.3208 - val_acc: 0.8595\n","Epoch 7/10\n","1171/1171 [==============================] - 237s 202ms/step - loss: 0.2946 - acc: 0.8735 - val_loss: 0.3163 - val_acc: 0.8613\n","Epoch 8/10\n","1171/1171 [==============================] - 237s 202ms/step - loss: 0.2838 - acc: 0.8794 - val_loss: 0.3152 - val_acc: 0.8629\n","Epoch 9/10\n","1171/1171 [==============================] - 237s 203ms/step - loss: 0.2749 - acc: 0.8842 - val_loss: 0.3124 - val_acc: 0.8660\n","Epoch 10/10\n","1171/1171 [==============================] - 237s 203ms/step - loss: 0.2654 - acc: 0.8895 - val_loss: 0.3172 - val_acc: 0.8668\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","Epoch 1/10\n","1171/1171 [==============================] - 87s 72ms/step - loss: 0.4599 - acc: 0.7733 - val_loss: 0.3870 - val_acc: 0.8264\n","Epoch 2/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.3670 - acc: 0.8363 - val_loss: 0.3567 - val_acc: 0.8399\n","Epoch 3/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.3418 - acc: 0.8490 - val_loss: 0.3405 - val_acc: 0.8505\n","Epoch 4/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.3243 - acc: 0.8587 - val_loss: 0.3322 - val_acc: 0.8548\n","Epoch 5/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.3098 - acc: 0.8666 - val_loss: 0.3274 - val_acc: 0.8578\n","Epoch 6/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.2982 - acc: 0.8735 - val_loss: 0.3233 - val_acc: 0.8599\n","Epoch 7/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.2870 - acc: 0.8779 - val_loss: 0.3194 - val_acc: 0.8626\n","Epoch 8/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.2784 - acc: 0.8828 - val_loss: 0.3163 - val_acc: 0.8649\n","Epoch 9/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.2687 - acc: 0.8877 - val_loss: 0.3206 - val_acc: 0.8650\n","Epoch 10/10\n","1171/1171 [==============================] - 83s 71ms/step - loss: 0.2605 - acc: 0.8919 - val_loss: 0.3159 - val_acc: 0.8662\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0b_y-XPAGUC6"},"source":["import json\n","with open('history.txt', 'w') as f:\n","    json.dump(histories, f)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"cz2i0pJYR45A","executionInfo":{"status":"ok","timestamp":1626960685505,"user_tz":-540,"elapsed":267,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["import json\n","with open('history.txt', 'r') as f:\n","    histories = json.load(f)    "],"execution_count":49,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"zgVEwdVyuwHn","executionInfo":{"status":"ok","timestamp":1626947643014,"user_tz":-540,"elapsed":878,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"2ee8e1ca-cbcd-4ca5-fbee-382b6f251225"},"source":["import matplotlib.pyplot as plt\n","\n","history = histories['random']\n","\n","fig, axes = plt.subplots(1, 2, figsize=(10,6))\n","\n","for embedding, history in histories.items():\n","    axes[0].plot(history['val_acc'], label=embedding)\n","    axes[1].plot(history['val_loss'], label=embedding)\n","axes[0].legend(fontsize=12)\n","axes[1].legend(fontsize=12)\n","\n","fig.tight_layout()"],"execution_count":47,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z36WozhfV8IK","executionInfo":{"status":"ok","timestamp":1626480709192,"user_tz":-540,"elapsed":1702,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"d47e65aa-1727-4602-ca95-3228e3acb928"},"source":["test_data = wordEmbeddingTuner.GetBatch(wordEmbeddingTuner.test_data,\n","                                        wordEmbeddingTuner.test_data_size,\n","                                        wordEmbeddingTuner.batch_size,\n","                                        wordEmbeddingTuner.make_input)\n","shape = test_data[0][0].shape, test_data[0][1].shape\n","for data in test_data:\n","    if (shape[0], shape[1]) != (data[0].shape, data[1].shape):\n","        print(data)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(array([[   67,  1165,   153, ..., 50001, 50001, 50001],\n","       [50000,    69,     1, ..., 50001, 50001, 50001],\n","       [ 1744,    14,  8193, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1518,     6,     5, ..., 50001, 50001, 50001],\n","       [  770,     6,    16, ..., 50001, 50001, 50001],\n","       [  424,     7, 17498, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[ 6979,    45,     1, ..., 50001, 50001, 50001],\n","       [ 6085,    68,  3228, ..., 50001, 50001, 50001],\n","       [  279,   481,   114, ..., 50001, 50001, 50001],\n","       ...,\n","       [  424,     7,   199, ..., 50001, 50001, 50001],\n","       [  430,   613,  3220, ..., 50001, 50001, 50001],\n","       [ 2562,    27,    32, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  112,   421,     8, ..., 50001, 50001, 50001],\n","       [  869,    11,  1328, ..., 50001, 50001, 50001],\n","       [ 2025,    10,   101, ..., 50001, 50001, 50001],\n","       ...,\n","       [  388,    73,   934, ..., 50001, 50001, 50001],\n","       [   27,    45,     7, ..., 50001, 50001, 50001],\n","       [  531,     9,   262, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  107,   462,    21, ..., 50001, 50001, 50001],\n","       [ 1212,    14,     3, ..., 50001, 50001, 50001],\n","       [ 2125,     8,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  413,   102,     1, ..., 50001, 50001, 50001],\n","       [   61,    78,  1418, ..., 50001, 50001, 50001],\n","       [50000,   245,  1082, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[   13,     2,   231, ..., 50001, 50001, 50001],\n","       [  179,    18,   551, ..., 50001, 50001, 50001],\n","       [   27,   163,    50, ..., 50001, 50001, 50001],\n","       ...,\n","       [  182,   114,    22, ..., 50001, 50001, 50001],\n","       [ 9084,     6,     2, ..., 50001, 50001, 50001],\n","       [  207,   325,     8, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[   36,   151,    10, ..., 50001, 50001, 50001],\n","       [  106,     7,    23, ..., 50001, 50001, 50001],\n","       [ 1504,  1234,  1540, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3761,   527,   626, ..., 50001, 50001, 50001],\n","       [  589,    11,   602, ..., 50001, 50001, 50001],\n","       [ 2874,   615,    37, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[  495,   720,   309, ..., 50001, 50001, 50001],\n","       [   59,    59,   744, ..., 50001, 50001, 50001],\n","       [ 1939,   148,    69, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,  1629,    50, ..., 50001, 50001, 50001],\n","       [   65,     8,  1252, ..., 50001, 50001, 50001],\n","       [  208,    74,    32, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[ 9466,  2336,     1, ...,     0, 50001, 50001],\n","       [  142,   222,   142, ..., 50001, 50001, 50001],\n","       [    1,     3,    21, ..., 50001, 50001, 50001],\n","       ...,\n","       [13643, 22257,     9, ..., 50001, 50001, 50001],\n","       [  397,    34,    39, ..., 50001, 50001, 50001],\n","       [ 3211,     7,   160, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[ 3596,     9,    85, ..., 50001, 50001, 50001],\n","       [   87,    18,     1, ..., 50001, 50001, 50001],\n","       [  511,     8,   118, ..., 50001, 50001, 50001],\n","       ...,\n","       [  726,    87,   630, ..., 50001, 50001, 50001],\n","       [  896,  4146,     5, ..., 50001, 50001, 50001],\n","       [  139,   107, 26517, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[  381, 12318,     6, ..., 50001, 50001, 50001],\n","       [   59,    25,    10, ..., 50001, 50001, 50001],\n","       [  381,    46,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [  474,    10,    25, ..., 50001, 50001, 50001],\n","       [  181,   546,    34, ..., 50001, 50001, 50001],\n","       [ 1528,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[    3,    21,  1576, ..., 50001, 50001, 50001],\n","       [  191,    36,    43, ..., 50001, 50001, 50001],\n","       [  141,    10,   440, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2779,     2,   243, ..., 50001, 50001, 50001],\n","       [48814,     7,   607, ..., 50001, 50001, 50001],\n","       [  419,  3833,   224, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[ 5862,    17, 50000, ..., 50001, 50001, 50001],\n","       [ 1493,     9,    89, ..., 50001, 50001, 50001],\n","       [   31,    43,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4530,  5451,     9, ..., 50001, 50001, 50001],\n","       [ 8506,    64,    13, ..., 50001, 50001, 50001],\n","       [   41,  1686,    37, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[    1, 21287,     6, ..., 50001, 50001, 50001],\n","       [  459,    12,   977, ..., 50001, 50001, 50001],\n","       [   43,    38,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  153,    11,   134, ..., 50001, 50001, 50001],\n","       [  399,     7,    25, ..., 50001, 50001, 50001],\n","       [ 1218,     7,  1061, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[  161,  1183,   171, ..., 50001, 50001, 50001],\n","       [  997,   247,    67, ..., 50001, 50001, 50001],\n","       [   41,  1097,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  374,    14,  5699, ..., 50001, 50001, 50001],\n","       [ 1162,   813,   873, ..., 50001, 50001, 50001],\n","       [17121,    73, 50000, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[   31,     6,    42, ..., 50001, 50001, 50001],\n","       [ 1010, 50000, 50000, ...,     0,    15, 50001],\n","       [  635,   208,    96, ..., 50001, 50001, 50001],\n","       ...,\n","       [   73,     0,     0, ..., 50001, 50001, 50001],\n","       [   61,     1,   251, ..., 50001, 50001, 50001],\n","       [   27,    68,   112, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n","       0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  783,    73,     2, ..., 50001, 50001, 50001],\n","       [12118,     1,    31, ..., 50001, 50001, 50001],\n","       [ 5675,    21, 19741, ..., 50001, 50001, 50001],\n","       ...,\n","       [  419,    64,   737, ..., 50001, 50001, 50001],\n","       [   41,   897,     6, ..., 50001, 50001, 50001],\n","       [10158,    18,    41, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[   98,    20,    24, ..., 50001, 50001, 50001],\n","       [13321,   379,    12, ..., 50001, 50001, 50001],\n","       [  165,    36,   242, ..., 50001, 50001, 50001],\n","       ...,\n","       [15861,  4051,   426, ..., 50001, 50001, 50001],\n","       [  657,   719,  1086, ..., 50001, 50001, 50001],\n","       [   41,    48,     3, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[  655,   104,    86, ..., 50001, 50001, 50001],\n","       [14660,    98,     0, ..., 50001, 50001, 50001],\n","       [  210,    55,    30, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,  2422,   674, ..., 50001, 50001, 50001],\n","       [   65,     8,     3, ..., 50001, 50001, 50001],\n","       [   69,   258,   244, ...,     0,   701,   114]], dtype=int32), array([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[  110,    86,  3308, ..., 50001, 50001, 50001],\n","       [ 1466,     8,  2395, ..., 50001, 50001, 50001],\n","       [ 1984,    14,  1317, ..., 50001, 50001, 50001],\n","       ...,\n","       [  567,     5,  1230, ..., 50001, 50001, 50001],\n","       [  171,     0,    32, ..., 50001, 50001, 50001],\n","       [   31,    84,     6, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[ 5479,  2061,   127, ..., 50001, 50001, 50001],\n","       [12760,    60,    87, ..., 50001, 50001, 50001],\n","       [  522,    61,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [  811,     8,  3965, ..., 50001, 50001, 50001],\n","       [  243,   276,   121, ..., 50001, 50001, 50001],\n","       [  731,     4,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[  714,   118,   956, ..., 50001, 50001, 50001],\n","       [  222,   266,    16, ..., 50001, 50001, 50001],\n","       [   41,   865,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [  635,    27,   164, ..., 50001, 50001, 50001],\n","       [ 7685,   103,   177, ..., 50001, 50001, 50001],\n","       [   48,   115,    38, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 2156,     2,     3, ..., 50001, 50001, 50001],\n","       [ 9773,    19, 50001, ..., 50001, 50001, 50001],\n","       [   13,     5,    26, ..., 50001, 50001, 50001],\n","       ...,\n","       [  506,   362,   285, ..., 50001, 50001, 50001],\n","       [    0, 50001, 50001, ..., 50001, 50001, 50001],\n","       [ 4012,   251,   271, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[   73,     0,    48, ..., 50001, 50001, 50001],\n","       [  314,   173, 50001, ..., 50001, 50001, 50001],\n","       [20369, 11355,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [   91,    34,     1, ..., 50001, 50001, 50001],\n","       [50000,   246, 44378, ..., 50001, 50001, 50001],\n","       [ 1299,     0,    82, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[  202,    11,   337, ..., 50001, 50001, 50001],\n","       [  529,   153,   200, ..., 50001, 50001, 50001],\n","       [   35,    99,   195, ..., 50001, 50001, 50001],\n","       ...,\n","       [   97,   345,   369, ..., 50001, 50001, 50001],\n","       [ 2454,     6,     5, ..., 50001, 50001, 50001],\n","       [  679,    18,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  360,     9,   904, ..., 50001, 50001, 50001],\n","       [15696,     1,   771, ..., 50001, 50001, 50001],\n","       [  107,   109,    60, ..., 50001, 50001, 50001],\n","       ...,\n","       [   31,   253,    93, ..., 50001, 50001, 50001],\n","       [   91,    91,   188, ..., 50001, 50001, 50001],\n","       [   61,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[   31,     7,   127, ..., 50001, 50001, 50001],\n","       [ 4071,     8,    62, ..., 50001, 50001, 50001],\n","       [  216,    17,    62, ..., 50001, 50001, 50001],\n","       ...,\n","       [  770,     6,     5, ..., 50001, 50001, 50001],\n","       [   67,   241,    65, ..., 50001, 50001, 50001],\n","       [   94,    18,     8, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[  429,   257,  2996, ..., 50001, 50001, 50001],\n","       [44501, 27521,   103, ..., 50001, 50001, 50001],\n","       [ 2276,     1,   393, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2200, 50001, 50001, ..., 50001, 50001, 50001],\n","       [ 3143,   160,  2095, ..., 50001, 50001, 50001],\n","       [  232,   562,   562, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  537,  1545,     8, ..., 50001, 50001, 50001],\n","       [  107,    99,    29, ..., 50001, 50001, 50001],\n","       [   41,     0,    15, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1118,     1,     3, ..., 50001, 50001, 50001],\n","       [  230,    11,  2304, ..., 50001, 50001, 50001],\n","       [    4,   815,   121, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[   67,     9,    95, ..., 50001, 50001, 50001],\n","       [  259,    18,   197, ..., 50001, 50001, 50001],\n","       [ 4206,  1752,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [  165,   549,  1962, ..., 50001, 50001, 50001],\n","       [  216,     1,    51, ..., 50001, 50001, 50001],\n","       [  431,    50,   254, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[ 7927,   186, 13994, ..., 50001, 50001, 50001],\n","       [   67,   392,   109, ..., 50001, 50001, 50001],\n","       [   62,     9,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [   25,    38, 50001, ..., 50001, 50001, 50001],\n","       [   48,    43,    16, ..., 50001, 50001, 50001],\n","       [ 2723,    14,     3, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[   32,    45,    12, ..., 50001, 50001, 50001],\n","       [ 1066,    10,   567, ..., 50001, 50001, 50001],\n","       [ 1201,   779,   191, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2898,   165,    43, ..., 50001, 50001, 50001],\n","       [ 1066,     1,    52, ..., 50001, 50001, 50001],\n","       [   75,    61,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n","       0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[  409,    83,     0, ..., 50001, 50001, 50001],\n","       [  294,   195,  3286, ..., 50001, 50001, 50001],\n","       [  968,    67,   300, ..., 50001, 50001, 50001],\n","       ...,\n","       [   79,     7,    23, ..., 50001, 50001, 50001],\n","       [  241,   111,   306, ..., 50001, 50001, 50001],\n","       [ 8085,   271,    27, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[   31,    25,    10, ..., 50001, 50001, 50001],\n","       [  532,  1609,  7755, ..., 50001, 50001, 50001],\n","       [   65,     4, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  330,  8138,  1220, ..., 50001, 50001, 50001],\n","       [  127,   176,   440, ..., 50001, 50001, 50001],\n","       [  173,     0,    15, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0,\n","       0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  513,   117,     9, ..., 50001, 50001, 50001],\n","       [    3,    21,   571, ..., 50001, 50001, 50001],\n","       [ 1092,   159,    16, ..., 50001, 50001, 50001],\n","       ...,\n","       [  326,     0,     0, ..., 50001, 50001, 50001],\n","       [   36,   913,     3, ..., 50001, 50001, 50001],\n","       [ 2022,     4,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[  275,     1,  1348, ..., 50001, 50001, 50001],\n","       [ 1341,   145,   159, ..., 50001, 50001, 50001],\n","       [  169,     1,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [  261,    19,    19, ..., 50001, 50001, 50001],\n","       [    4,  3729,    78, ..., 50001, 50001, 50001],\n","       [   36,   110,     5, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  127,    13,     5, ..., 50001, 50001, 50001],\n","       [   32,    32,   220, ..., 50001, 50001, 50001],\n","       [  656,    12,    35, ...,    54,     6,    16],\n","       ...,\n","       [ 1580,  1880,   133, ..., 50001, 50001, 50001],\n","       [10939,   168,    94, ..., 50001, 50001, 50001],\n","       [17690, 13764,  2027, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n","       1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[  242,     2,   242, ..., 50001, 50001, 50001],\n","       [  439,    17,    17, ..., 50001, 50001, 50001],\n","       [   69,    12,    35, ..., 50001, 50001, 50001],\n","       ...,\n","       [  146,   110,     4, ..., 50001, 50001, 50001],\n","       [  704,    16,   167, ..., 50001, 50001, 50001],\n","       [  395,    79,    98, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[   69, 22203,  1513, ..., 50001, 50001, 50001],\n","       [ 1567,     6,     4, ..., 50001, 50001, 50001],\n","       [  158,    13,    58, ..., 50001, 50001, 50001],\n","       ...,\n","       [  115,    12,   132, ..., 50001, 50001, 50001],\n","       [  190,  4071,     0, ..., 50001, 50001, 50001],\n","       [   36,    43,    28, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[    1,     3,  9422, ..., 50001, 50001, 50001],\n","       [    3,     7,    31, ..., 50001, 50001, 50001],\n","       [  190, 12626,    19, ..., 50001, 50001, 50001],\n","       ...,\n","       [  158,  4219,    50, ..., 50001, 50001, 50001],\n","       [  888,    16,    13, ..., 50001, 50001, 50001],\n","       [  430,    13,    20, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  209,     4,   209, ..., 50001, 50001, 50001],\n","       [ 2167,    10,    13, ..., 50001, 50001, 50001],\n","       [  397,    34,    39, ..., 50001, 50001, 50001],\n","       ...,\n","       [   91,    34,     0, ..., 50001, 50001, 50001],\n","       [ 2475,     8,  5269, ..., 50001, 50001, 50001],\n","       [14588,   956,    70, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  878, 12621, 50000, ..., 50001, 50001, 50001],\n","       [30340,    48,   691, ..., 50001, 50001, 50001],\n","       [ 1390,     3,    46, ..., 50001, 50001, 50001],\n","       ...,\n","       [  185,     6,  1475, ..., 50001, 50001, 50001],\n","       [ 1878,    65,     8, ..., 50001, 50001, 50001],\n","       [ 1839,    37,   176, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[27323,  3110,   190, ..., 50001, 50001, 50001],\n","       [  973,     6,   125, ..., 50001, 50001, 50001],\n","       [ 1072,     6,    58, ..., 50001, 50001, 50001],\n","       ...,\n","       [  486,     8,  7611, ..., 50001, 50001, 50001],\n","       [  229,    84,    39, ..., 50001, 50001, 50001],\n","       [  589,   200, 10479, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[ 3942,   428,     1, ..., 50001, 50001, 50001],\n","       [ 3066,     1,   105, ..., 50001, 50001, 50001],\n","       [   26,    21,   580, ..., 50001, 50001, 50001],\n","       ...,\n","       [  573,     1,   147, ..., 50001, 50001, 50001],\n","       [  513,   479,    51, ..., 50001, 50001, 50001],\n","       [   26,     8,   372, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  107,  5281,    21, ..., 50001, 50001, 50001],\n","       [   65,   143,     0, ..., 50001, 50001, 50001],\n","       [   31,    43,    16, ..., 50001, 50001, 50001],\n","       ...,\n","       [  343,    50,    13, ..., 50001, 50001, 50001],\n","       [ 5307,    17,  2293, ..., 50001, 50001, 50001],\n","       [    1,     3,     9, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  651,   109,   414, ..., 50001, 50001, 50001],\n","       [   98,   123,   462, ..., 50001, 50001, 50001],\n","       [ 4124,   217,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [  165,   229,   208, ..., 50001, 50001, 50001],\n","       [ 1800,  3785,    18, ..., 50001, 50001, 50001],\n","       [  436,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n","       0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[   36,    36,    43, ..., 50001, 50001, 50001],\n","       [  202,     1,   117, ..., 50001, 50001, 50001],\n","       [  842,   302,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4090,     8,  8233, ..., 50001, 50001, 50001],\n","       [  190,    74,   163, ..., 50001, 50001, 50001],\n","       [  219,  3581,    41, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[ 1463,     7,    25, ..., 50001, 50001, 50001],\n","       [  158,   412,    11, ..., 50001, 50001, 50001],\n","       [ 9646,    21,   610, ..., 50001, 50001, 50001],\n","       ...,\n","       [15870, 35904,    10, ..., 50001, 50001, 50001],\n","       [39834,   930,   141, ..., 50001, 50001, 50001],\n","       [  855,   617,     6, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[   65,    11,   219, ..., 50001, 50001, 50001],\n","       [ 1182,    10,   408, ..., 50001, 50001, 50001],\n","       [ 2775,    98,   105, ..., 50001, 50001, 50001],\n","       ...,\n","       [  252,    27,   134, ..., 50001, 50001, 50001],\n","       [  144,   271,    33, ..., 50001, 50001, 50001],\n","       [22895,  8493,  1650, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[ 1641, 23787,    73, ..., 50001, 50001, 50001],\n","       [    1,   432,  1177, ..., 50001, 50001, 50001],\n","       [   31,   567,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1780,   840,   111, ..., 50001, 50001, 50001],\n","       [  106,     9,   131, ..., 50001, 50001, 50001],\n","       [ 9179,     7,   128, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n","       0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[  115,    44,     0, ..., 50001, 50001, 50001],\n","       [   43,     2,     3, ..., 50001, 50001, 50001],\n","       [   91,    34,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [  376,   518,    79, ..., 50001, 50001, 50001],\n","       [  638,   281,     3, ..., 50001, 50001, 50001],\n","       [  571,   302,     9, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[  107,    61,     1, ..., 50001, 50001, 50001],\n","       [    3,     2,   313, ..., 50001, 50001, 50001],\n","       [   76,   492,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  814, 50000,  1095, ..., 50001, 50001, 50001],\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       [  296,     7,  1466, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[21069, 50000,   245, ..., 50001, 50001, 50001],\n","       [13462,  2056,   616, ..., 50001, 50001, 50001],\n","       [  158,    13,    51, ..., 50001, 50001, 50001],\n","       ...,\n","       [  820,    14,   196, ..., 50001, 50001, 50001],\n","       [   21,   201,   148, ..., 50001, 50001, 50001],\n","       [   48,   210,    10, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[50000,  2088,    39, ..., 50001, 50001, 50001],\n","       [  114,    23,     5, ..., 50001, 50001, 50001],\n","       [    1,     3,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [  191,   159,    77, ..., 50001, 50001, 50001],\n","       [ 1645,    12,   512, ..., 50001, 50001, 50001],\n","       [  230,     1,   436, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[   15,    98,   311, ..., 50001, 50001, 50001],\n","       [  108,     6,     4, ..., 50001, 50001, 50001],\n","       [  165,    43,   265, ..., 50001, 50001, 50001],\n","       ...,\n","       [  191,   110,  4275, ..., 50001, 50001, 50001],\n","       [  959,    14,   474, ..., 50001, 50001, 50001],\n","       [26161,     8,    87, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[43883,   177,    48, ..., 50001, 50001, 50001],\n","       [50000,   103,    12, ..., 50001, 50001, 50001],\n","       [  275,   343,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [   81,    81,    81, ..., 50001, 50001, 50001],\n","       [  636,   175,     3, ..., 50001, 50001, 50001],\n","       [   69,     1,    31, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n","       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[15446,   104,   134, ..., 50001, 50001, 50001],\n","       [   36,    75,    61, ..., 50001, 50001, 50001],\n","       [ 8581,   375,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [16845,     0,    15, ..., 50001, 50001, 50001],\n","       [   41,    48,     0, ..., 50001, 50001, 50001],\n","       [13592, 27100,    21, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[ 1150,    75,   145, ..., 50001, 50001, 50001],\n","       [  634,    40,     7, ..., 50001, 50001, 50001],\n","       [50000,     6,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [   85,   449,   130, ..., 50001, 50001, 50001],\n","       [  657,    10,   497, ..., 50001, 50001, 50001],\n","       [  194,    78,     0, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[ 3042,   558,    39, ..., 50001, 50001, 50001],\n","       [  154,    60,   351, ..., 50001, 50001, 50001],\n","       [ 1412,     3,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3987,    34,    63, ..., 50001, 50001, 50001],\n","       [  233,     1,    31, ..., 50001, 50001, 50001],\n","       [   13,   156,  1049, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 7757,    17,  1308, ..., 50001, 50001, 50001],\n","       [50000, 50001, 50001, ..., 50001, 50001, 50001],\n","       [   76,   165,   171, ..., 50001, 50001, 50001],\n","       ...,\n","       [  314,  3075,    11, ..., 50001, 50001, 50001],\n","       [ 2588,     2,  4394, ..., 50001, 50001, 50001],\n","       [    3,   237,     9, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[   13,   156,  3749, ..., 50001, 50001, 50001],\n","       [  130,    43,   149, ..., 50001, 50001, 50001],\n","       [  372,     1,   500, ..., 50001, 50001, 50001],\n","       ...,\n","       [  373,    18,   342, ..., 50001, 50001, 50001],\n","       [  314,   108,     6, ..., 50001, 50001, 50001],\n","       [ 5799,    14,  2139, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[ 2786,     9,   192, ..., 50001, 50001, 50001],\n","       [ 2227,     8, 16653, ..., 50001, 50001, 50001],\n","       [   99,    92,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1568,   306,   113, ..., 50001, 50001, 50001],\n","       [  153,    74,    32, ..., 50001, 50001, 50001],\n","       [  374,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n","       1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[ 2556,   407,   297, ..., 50001, 50001, 50001],\n","       [    1,     3,    11, ..., 50001, 50001, 50001],\n","       [   36,   490,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [  943,  8449,     8, ..., 50001, 50001, 50001],\n","       [   41,  1666,    46, ..., 50001, 50001, 50001],\n","       [  533,     3, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[ 2877,    34,    63, ..., 50001, 50001, 50001],\n","       [ 1388,  1595,     6, ..., 50001, 50001, 50001],\n","       [  165,   229,     3, ..., 50001, 50001, 50001],\n","       ...,\n","       [15787,    21,  1684, ..., 50001, 50001, 50001],\n","       [15887,    21,   144, ..., 50001, 50001, 50001],\n","       [ 1201,    10,    70, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[   26,     2,  1785, ..., 50001, 50001, 50001],\n","       [ 3294, 50001, 50001, ..., 50001, 50001, 50001],\n","       [29009,     8,   584, ..., 50001, 50001, 50001],\n","       ...,\n","       [   26,     2,  3205, ..., 50001, 50001, 50001],\n","       [  449,   529,   570, ..., 50001, 50001, 50001],\n","       [ 6911,   246,   115, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[   25,    10,   129, ..., 50001, 50001, 50001],\n","       [   13,    58,  1249, ..., 50001, 50001, 50001],\n","       [   56,   349,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [  272,   428,  1730, ..., 50001, 50001, 50001],\n","       [  252,  1460,     7, ..., 50001, 50001, 50001],\n","       [ 3497,    12,   101, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,\n","       1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[10458,    37,   538, ..., 50001, 50001, 50001],\n","       [14492,    14,   818, ..., 50001, 50001, 50001],\n","       [ 3232,   537,   291, ..., 50001, 50001, 50001],\n","       ...,\n","       [   24, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  982,     9,  1002, ..., 50001, 50001, 50001],\n","       [ 4530,  4309,    25, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[   70,    54,    99, ..., 50001, 50001, 50001],\n","       [  361,   474,    29, ..., 50001, 50001, 50001],\n","       [ 1286,  6936,  1397, ..., 50001, 50001, 50001],\n","       ...,\n","       [  267,   809,    33, ..., 50001, 50001, 50001],\n","       [  507,  1002,  6661, ..., 50001, 50001, 50001],\n","       [ 1654,    11,  3052, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[ 6860, 15520,   576, ..., 50001, 50001, 50001],\n","       [41795,    63,    67, ..., 50001, 50001, 50001],\n","       [  112,    32,   113, ..., 50001, 50001, 50001],\n","       ...,\n","       [14291,    60,   726, ..., 50001, 50001, 50001],\n","       [  226,    60,   771, ..., 50001, 50001, 50001],\n","       [  481,    12,   100, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[   26,     8,   230, ..., 50001, 50001, 50001],\n","       [   41,   109,   152, ..., 50001, 50001, 50001],\n","       [ 1425, 11174,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,    21,  2039, ..., 50001, 50001, 50001],\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       [ 2987,    48,   115, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,\n","       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[ 1021,  2066,  6562, ..., 50001, 50001, 50001],\n","       [   62,     7,    79, ..., 50001, 50001, 50001],\n","       [ 1484,    60,  1225, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,   491,    62, ..., 50001, 50001, 50001],\n","       [  440,    14,    62, ..., 50001, 50001, 50001],\n","       [  130,   127,    33, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  275,     1,   312, ..., 50001, 50001, 50001],\n","       [   99,    29,    49, ..., 50001, 50001, 50001],\n","       [11594,  9309,    50, ..., 50001, 50001, 50001],\n","       ...,\n","       [  242,     3,  1940, ..., 50001, 50001, 50001],\n","       [   48,   222,   266, ..., 50001, 50001, 50001],\n","       [  176,   176,   187, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  261,    16,   206, ..., 50001, 50001, 50001],\n","       [  692,  4095,    27, ..., 50001, 50001, 50001],\n","       [ 1946,    29,    57, ..., 50001, 50001, 50001],\n","       ...,\n","       [  679,   147,    61, ..., 50001, 50001, 50001],\n","       [   36,    36,    75, ..., 50001, 50001, 50001],\n","       [ 3294, 50001, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[ 3416,   349,  9097, ..., 50001, 50001, 50001],\n","       [   48,   633,    22, ..., 50001, 50001, 50001],\n","       [  210,   249,    19, ..., 50001, 50001, 50001],\n","       ...,\n","       [  232, 50001, 50001, ..., 50001, 50001, 50001],\n","       [   65,     8,  1587, ..., 50001, 50001, 50001],\n","       [  493,     4,     0, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[    4,    25,    10, ..., 50001, 50001, 50001],\n","       [  371,   320,   570, ..., 50001, 50001, 50001],\n","       [50000,  1081,   915, ..., 50001, 50001, 50001],\n","       ...,\n","       [  233,     0,   734, ..., 50001, 50001, 50001],\n","       [   43,    30,     0, ..., 50001, 50001, 50001],\n","       [   48,   115,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[  829,     6,   292, ..., 50001, 50001, 50001],\n","       [  546,    92, 50000, ..., 50001, 50001, 50001],\n","       [ 6648,    95,    83, ..., 50001, 50001, 50001],\n","       ...,\n","       [22584,     0,     0, ..., 50001, 50001, 50001],\n","       [ 9874,     1, 15224, ..., 50001, 50001, 50001],\n","       [ 3005,  1442,     2, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[   65,     8,     3, ..., 50001, 50001, 50001],\n","       [  130,   546,    92, ..., 50001, 50001, 50001],\n","       [ 9039,  2087,  1022, ..., 50001, 50001, 50001],\n","       ...,\n","       [   36,    65,     8, ..., 50001, 50001, 50001],\n","       [    1,   431,     8, ..., 50001, 50001, 50001],\n","       [  377,   176,   173, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n","       1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[ 1440,    14,   483, ..., 50001, 50001, 50001],\n","       [   31,   816,     5, ..., 50001, 50001, 50001],\n","       [  272,    12,  1287, ..., 50001, 50001, 50001],\n","       ...,\n","       [   89,    18,     8, ..., 50001, 50001, 50001],\n","       [  759,   137,    11, ..., 50001, 50001, 50001],\n","       [   43,    71,    19, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[   69,     0,     0, ..., 50001, 50001, 50001],\n","       [  729,     1,    31, ..., 50001, 50001, 50001],\n","       [ 5746,   951,    46, ..., 50001, 50001, 50001],\n","       ...,\n","       [  192,   373,   224, ..., 50001, 50001, 50001],\n","       [   74,   126,   194, ..., 50001, 50001, 50001],\n","       [   31,   110,    16, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  474,   412,   464, ..., 50001, 50001, 50001],\n","       [ 3156,  1546,   585, ..., 50001, 50001, 50001],\n","       [ 1089, 26969,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,     3,    36, ..., 50001, 50001, 50001],\n","       [   67,   166,     0, ..., 50001, 50001, 50001],\n","       [   98,  1138,   329, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[  368, 12805,     6, ..., 50001, 50001, 50001],\n","       [18769,  5355,  6331, ..., 50001, 50001, 50001],\n","       [  432,   431,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1252,     3,   111, ..., 50001, 50001, 50001],\n","       [  253,     6,     5, ..., 50001, 50001, 50001],\n","       [  192,     9,    31, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[ 2674,   139,     3, ..., 50001, 50001, 50001],\n","       [   91,     1,    31, ..., 50001, 50001, 50001],\n","       [  139,    48,   826, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1946,    11,   220, ..., 50001, 50001, 50001],\n","       [  108,     6,     5, ..., 50001, 50001, 50001],\n","       [ 9997,   113,   180, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  207, 50000,     1, ..., 50001, 50001, 50001],\n","       [  635,    74,  4487, ..., 50001, 50001, 50001],\n","       [   98,     9,   920, ..., 50001, 50001, 50001],\n","       ...,\n","       [  114, 24487,  4275, ..., 50001, 50001, 50001],\n","       [   43,    71,  6409, ..., 50001, 50001, 50001],\n","       [   67,  1165,   343, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[  699,    69,     1, ..., 50001, 50001, 50001],\n","       [ 1893,  2401,   177, ..., 50001, 50001, 50001],\n","       [  554,   729,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [  109,   586,     3, ..., 50001, 50001, 50001],\n","       [   70,     3,    21, ..., 50001, 50001, 50001],\n","       [  483,   720,   309, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[  165,    76,   220, ..., 50001, 50001, 50001],\n","       [ 1889,   242,     3, ..., 50001, 50001, 50001],\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,    32,    45, ..., 50001, 50001, 50001],\n","       [  191,    13,     2, ..., 50001, 50001, 50001],\n","       [ 1924,    11,    65, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[   70,   187,    12, ..., 50001, 50001, 50001],\n","       [  253,     6,     5, ..., 50001, 50001, 50001],\n","       [ 1391,    17,  5400, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,     0,     0, ..., 50001, 50001, 50001],\n","       [  377,    13,     5, ..., 50001, 50001, 50001],\n","       [ 2924,    11,    29, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[   27,  1658,     2, ..., 50001, 50001, 50001],\n","       [ 1511,    37,    33, ..., 50001, 50001, 50001],\n","       [ 1728,   650,   410, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2560, 12008,    60, ..., 50001, 50001, 50001],\n","       [  208,    45,   155, ..., 50001, 50001, 50001],\n","       [  486,     8,    84, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[  110,    71,   223, ..., 50001, 50001, 50001],\n","       [  943,     3,    63, ..., 50001, 50001, 50001],\n","       [19056,     0,    15, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1313,  1890,     8, ..., 50001, 50001, 50001],\n","       [  518,   172,     1, ..., 50001, 50001, 50001],\n","       [ 2073,    68,    78, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[ 3990,  3092, 10777, ..., 50001, 50001, 50001],\n","       [50000,     8,   162, ..., 50001, 50001, 50001],\n","       [ 5559,    29,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1683,    83,  1241, ..., 50001, 50001, 50001],\n","       [ 1214,    25,    41, ..., 50001, 50001, 50001],\n","       [  469, 50001, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[   26,  2743, 17539, ..., 50001, 50001, 50001],\n","       [  210,    10,   103, ..., 50001, 50001, 50001],\n","       [  176,   176,    35, ..., 50001, 50001, 50001],\n","       ...,\n","       [  438,     7,  1851, ..., 50001, 50001, 50001],\n","       [  449,   229,   102, ..., 50001, 50001, 50001],\n","       [  371,   141,     3, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0,\n","       1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[14075,     1, 14046, ..., 50001, 50001, 50001],\n","       [   27,    45,     7, ..., 50001, 50001, 50001],\n","       [  171,  3668,    39, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1527,     5,   548, ..., 50001, 50001, 50001],\n","       [  215, 50001, 50001, ..., 50001, 50001, 50001],\n","       [   27,   174,   389, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[   31,    91,    22, ..., 50001, 50001, 50001],\n","       [  139,   289,     3, ..., 50001, 50001, 50001],\n","       [   83,    21,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [14170,     8,    87, ..., 50001, 50001, 50001],\n","       [  102,    10,   314, ..., 50001, 50001, 50001],\n","       [   13,     2,    26, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1,\n","       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[   48,  4640,    46, ..., 50001, 50001, 50001],\n","       [  150,   108,    49, ..., 50001, 50001, 50001],\n","       [  134,   808,   134, ..., 50001, 50001, 50001],\n","       ...,\n","       [11540,  5777,    23, ..., 50001, 50001, 50001],\n","       [   43,     4, 50001, ..., 50001, 50001, 50001],\n","       [  317,   210,    55, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  106,     2,  2569, ..., 50001, 50001, 50001],\n","       [  904,   160,  4460, ...,     2,   307,     0],\n","       [50000,  1177,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  574,   264,     1, ..., 50001, 50001, 50001],\n","       [   36,   896,    13, ..., 50001, 50001, 50001],\n","       [  142,     3,   140, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[  202,     8,   463, ..., 50001, 50001, 50001],\n","       [ 5755,   324,     1, ..., 50001, 50001, 50001],\n","       [13294,   224, 10051, ..., 50001, 50001, 50001],\n","       ...,\n","       [  904,   341,    10, ..., 50001, 50001, 50001],\n","       [ 5634,     2,  3817, ..., 50001, 50001, 50001],\n","       [  180,  1463,     8, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[50000, 50000, 50000, ..., 50001, 50001, 50001],\n","       [  272,   394,     0, ..., 50001, 50001, 50001],\n","       [   91,     7,   337, ..., 50001, 50001, 50001],\n","       ...,\n","       [  937,   801,   200, ..., 50001, 50001, 50001],\n","       [  888,     5,   493, ..., 50001, 50001, 50001],\n","       [50000,  3034, 50000, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n","       1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[17514,    18,     1, ..., 50001, 50001, 50001],\n","       [  146,   115,    80, ..., 50001, 50001, 50001],\n","       [ 1072,     6,    58, ..., 50001, 50001, 50001],\n","       ...,\n","       [19836,    27,    43, ..., 50001, 50001, 50001],\n","       [14196,  1949, 12219, ..., 50001, 50001, 50001],\n","       [    3,     8,   162, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n","       1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[   87,     8,  1051, ..., 50001, 50001, 50001],\n","       [   44,    24,   130, ..., 50001, 50001, 50001],\n","       [   98,    20,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [  357,     9,  2350, ..., 50001, 50001, 50001],\n","       [  528,  1377,     7, ..., 50001, 50001, 50001],\n","       [   27,   163,    74, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[   35,   505,  5866, ..., 50001, 50001, 50001],\n","       [   81,    81,    81, ..., 50001, 50001, 50001],\n","       [    1,     3,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 7030,  4687,  3653, ..., 50001, 50001, 50001],\n","       [  112,    32,    32, ..., 50001, 50001, 50001],\n","       [ 4342,    14,   970, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[  257,   718,  2870, ..., 50001, 50001, 50001],\n","       [  513,  1582,     3, ..., 50001, 50001, 50001],\n","       [   69,   693,  9144, ..., 50001, 50001, 50001],\n","       ...,\n","       [  314,    31,  6743, ..., 50001, 50001, 50001],\n","       [14640,   470,    31, ..., 50001, 50001, 50001],\n","       [   36,    43,    16, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[ 2305, 15857,    51, ..., 50001, 50001, 50001],\n","       [ 2950,    62,     2, ..., 50001, 50001, 50001],\n","       [  168,    34,    63, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 9561,  1565,     2, ..., 50001, 50001, 50001],\n","       [  346,     3,   122, ..., 50001, 50001, 50001],\n","       [   67,     9,   127, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n","       0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  361,   130,     3, ..., 50001, 50001, 50001],\n","       [  913,   182,   234, ..., 50001, 50001, 50001],\n","       [   48,   187,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [  622,   556,    50, ..., 50001, 50001, 50001],\n","       [  740,    19,    27, ..., 50001, 50001, 50001],\n","       [ 1973,    19,   207, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[  973,     6,   125, ..., 50001, 50001, 50001],\n","       [ 1220,     2,    16, ..., 50001, 50001, 50001],\n","       [ 1774,   204, 13981, ..., 50001, 50001, 50001],\n","       ...,\n","       [20323,    25,    10, ..., 50001, 50001, 50001],\n","       [  637,   130,    95, ..., 50001, 50001, 50001],\n","       [  377,   252,    74, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  241,    10,  2961, ..., 50001, 50001, 50001],\n","       [   70,     3,     2, ..., 50001, 50001, 50001],\n","       [ 4344,     6,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48, 13673,  1176, ..., 50001, 50001, 50001],\n","       [  853,    39,   138, ..., 50001, 50001, 50001],\n","       [  117,     0,    82, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n","       1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[ 1573,   352,    60, ..., 50001, 50001, 50001],\n","       [ 1357,  5584,   100, ..., 50001, 50001, 50001],\n","       [  390,     5, 20278, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1215,  1346,  5467, ..., 50001, 50001, 50001],\n","       [  381,    11,    31, ...,    39,     0,    15],\n","       [  612,    98,  1193, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[ 6011,    99,  2309, ..., 50001, 50001, 50001],\n","       [20088,  5729,    12, ..., 50001, 50001, 50001],\n","       [  139,   173, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  182,    25,    55, ..., 50001, 50001, 50001],\n","       [ 1024,   583,   194, ..., 50001, 50001, 50001],\n","       [ 2275,     6,     4, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[  108,    14,   180, ..., 50001, 50001, 50001],\n","       [50000,     8,  4784, ..., 50001, 50001, 50001],\n","       [    3,   341,    17, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5962, 10572,  9463, ..., 50001, 50001, 50001],\n","       [ 4609,     1,     3, ..., 50001, 50001, 50001],\n","       [  135,    18,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  874,    34,    63, ..., 50001, 50001, 50001],\n","       [ 8058,   104,    43, ..., 50001, 50001, 50001],\n","       [   48,   114,    26, ..., 50001, 50001, 50001],\n","       ...,\n","       [  518,    79,    11, ..., 50001, 50001, 50001],\n","       [   94,    18,    62, ..., 50001, 50001, 50001],\n","       [27686,    46,    10, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,\n","       1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  194,     6,    16, ..., 50001, 50001, 50001],\n","       [  279,   114,   279, ..., 50001, 50001, 50001],\n","       [   48,   134,   117, ..., 50001, 50001, 50001],\n","       ...,\n","       [  657,     1,   376, ..., 50001, 50001, 50001],\n","       [  239,    29,    25, ..., 50001, 50001, 50001],\n","       [ 3006,     3,   111, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[ 2229,   486,     8, ..., 50001, 50001, 50001],\n","       [  196,    11,    14, ..., 50001, 50001, 50001],\n","       [ 1020,     9,   376, ..., 50001, 50001, 50001],\n","       ...,\n","       [  990,    63,    54, ..., 50001, 50001, 50001],\n","       [ 1368,     1,   620, ..., 50001, 50001, 50001],\n","       [ 2306,  5278,  3990, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[ 1450,    14,  5865, ..., 50001, 50001, 50001],\n","       [  585,   110,     2, ..., 50001, 50001, 50001],\n","       [  385,   357,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [   98,    70,   930, ..., 50001, 50001, 50001],\n","       [  630,     1,  2447, ..., 50001, 50001, 50001],\n","       [ 3741,     1,    62, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[ 2746,   745, 50001, ..., 50001, 50001, 50001],\n","       [  604,    50,     2, ...,    64,    29,   941],\n","       [   76,   416,    36, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3967,    17, 50000, ..., 50001, 50001, 50001],\n","       [ 5236,    62,     2, ..., 50001, 50001, 50001],\n","       [ 1170,    41,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  279,   114,   279, ..., 50001, 50001, 50001],\n","       [50000,     9,   792, ..., 50001, 50001, 50001],\n","       [14663,   719,    28, ..., 50001, 50001, 50001],\n","       ...,\n","       [  501,   128,   743, ..., 50001, 50001, 50001],\n","       [    1,  6399,    12, ..., 50001, 50001, 50001],\n","       [  117, 50001, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[  361,   115,     4, ..., 50001, 50001, 50001],\n","       [  162,   134,    46, ..., 50001, 50001, 50001],\n","       [  108,    14,   276, ..., 50001, 50001, 50001],\n","       ...,\n","       [  893,    50,   128, ..., 50001, 50001, 50001],\n","       [  117,     3,    13, ..., 50001, 50001, 50001],\n","       [   91,     1,    23, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 1927,     8, 10864, ..., 50001, 50001, 50001],\n","       [  192,     8,  5882, ..., 50001, 50001, 50001],\n","       [   27,    27,    74, ..., 50001, 50001, 50001],\n","       ...,\n","       [  232,    19, 50001, ..., 50001, 50001, 50001],\n","       [  161,    17,    27, ..., 50001, 50001, 50001],\n","       [  166,   211,   348, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[   43,     2,   851, ..., 50001, 50001, 50001],\n","       [    1,   123,    68, ..., 50001, 50001, 50001],\n","       [  117, 50001, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  589,    54,   105, ..., 50001, 50001, 50001],\n","       [ 3965,   238,    50, ..., 50001, 50001, 50001],\n","       [  461,   313,  1957, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[  344,     5,   203, ..., 50001, 50001, 50001],\n","       [  107,  2497,    29, ..., 50001, 50001, 50001],\n","       [50000,  3866,    41, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1789, 16379,  6131, ..., 50001, 50001, 50001],\n","       [  686,   838,    37, ..., 50001, 50001, 50001],\n","       [  747,    10,     1, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  158,    13,    58, ..., 50001, 50001, 50001],\n","       [ 2870,     3,   212, ..., 50001, 50001, 50001],\n","       [  723,  1100,    34, ..., 50001, 50001, 50001],\n","       ...,\n","       [12160,    50,   201, ..., 50001, 50001, 50001],\n","       [ 4685, 11908,  8159, ..., 50001, 50001, 50001],\n","       [   36,    31,   110, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[   61,   625,    57, ..., 50001, 50001, 50001],\n","       [   65,   140, 50001, ..., 50001, 50001, 50001],\n","       [  118,    60,   456, ..., 50001, 50001, 50001],\n","       ...,\n","       [  158,   176,  1218, ..., 50001, 50001, 50001],\n","       [   69,     1,  1769, ..., 50001, 50001, 50001],\n","       [  928,    10,    49, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  513,    16,    83, ..., 50001, 50001, 50001],\n","       [  153, 18559,  3386, ..., 50001, 50001, 50001],\n","       [  529,   102,    63, ..., 50001, 50001, 50001],\n","       ...,\n","       [  725,    50,   284, ..., 50001, 50001, 50001],\n","       [ 1568,   687,   121, ..., 50001, 50001, 50001],\n","       [  778,    99,    29, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[  103,     1,   529, ..., 50001, 50001, 50001],\n","       [  153,   200,   138, ..., 50001, 50001, 50001],\n","       [   85,    76,   207, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1518,    14,  3055, ..., 50001, 50001, 50001],\n","       [  621,   197,    26, ..., 50001, 50001, 50001],\n","       [   83,     2,  3516, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[    3,    13,   125, ..., 50001, 50001, 50001],\n","       [    1,     3,    21, ..., 50001, 50001, 50001],\n","       [  144,    49,    72, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,    43,    16, ..., 50001, 50001, 50001],\n","       [ 6179,     7,    43, ..., 50001, 50001, 50001],\n","       [  130,    13,   122, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[ 6627,    27,   161, ..., 50001, 50001, 50001],\n","       [  984,   516,    12, ..., 50001, 50001, 50001],\n","       [  139,     3,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  196,     3,   965, ..., 50001, 50001, 50001],\n","       [  629,   458,     1, ..., 50001, 50001, 50001],\n","       [   74,    32,   113, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[  146,   304,    83, ..., 50001, 50001, 50001],\n","       [  381, 15401,     1, ..., 50001, 50001, 50001],\n","       [ 1514,  9859,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [  511,    73,   746, ..., 50001, 50001, 50001],\n","       [ 6503,   526,    29, ..., 50001, 50001, 50001],\n","       [   41,  1097,    68, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[   36,   270,  1515, ..., 50001, 50001, 50001],\n","       [   81,    59,    59, ..., 50001, 50001, 50001],\n","       [24668,   181,   114, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3083, 34172,     8, ..., 50001, 50001, 50001],\n","       [   91,   203,    55, ..., 50001, 50001, 50001],\n","       [ 9353,   203,    41, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[ 1654,    11,     1, ..., 50001, 50001, 50001],\n","       [  279,   114,     0, ..., 50001, 50001, 50001],\n","       [  173,   115,     4, ..., 50001, 50001, 50001],\n","       ...,\n","       [  685,    26,   197, ..., 50001, 50001, 50001],\n","       [   35,    33,   157, ..., 50001, 50001, 50001],\n","       [   48,    91,  5627, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,\n","       0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[  381,    83,   318, ..., 50001, 50001, 50001],\n","       [ 1043,    29,     8, ..., 50001, 50001, 50001],\n","       [ 1148, 50000,  4776, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3264,  1747,     2, ..., 50001, 50001, 50001],\n","       [  415,   399,   182, ..., 50001, 50001, 50001],\n","       [  325,   177,   631, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[  513,    16,    69, ..., 50001, 50001, 50001],\n","       [  141,     3,     8, ..., 50001, 50001, 50001],\n","       [ 1887, 41507,  2766, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,     0,    15, ..., 50001, 50001, 50001],\n","       [ 2963,  2496,    13, ..., 50001, 50001, 50001],\n","       [ 1766,    29,   390, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[50000,    65,   147, ..., 50001, 50001, 50001],\n","       [   35,    13,     2, ..., 50001, 50001, 50001],\n","       [ 2887,    50,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       [  696,    18,  1845, ..., 50001, 50001, 50001],\n","       [   73,   252,     1, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0,\n","       1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[  261,    25,  4221, ..., 50001, 50001, 50001],\n","       [ 1422,    37,    69, ..., 50001, 50001, 50001],\n","       [  167,   140, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  139,    61,  4129, ..., 50001, 50001, 50001],\n","       [    1,     3,    76, ..., 50001, 50001, 50001],\n","       [  419,  2770,    14, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  202,   192,     2, ..., 50001, 50001, 50001],\n","       [ 4459,   511,    21, ..., 50001, 50001, 50001],\n","       [    1,    83,    48, ..., 50001, 50001, 50001],\n","       ...,\n","       [   97,   546,    92, ..., 50001, 50001, 50001],\n","       [  562,   794,    76, ..., 50001, 50001, 50001],\n","       [   76,  1647,  4989, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[ 2236,   821,  2496, ..., 50001, 50001, 50001],\n","       [ 6851,    14,  1286, ..., 50001, 50001, 50001],\n","       [ 5371,     9,   229, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4675,  3730,  3332, ..., 50001, 50001, 50001],\n","       [   67,     9,   138, ..., 50001, 50001, 50001],\n","       [  164,  1323,    18, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[50000,   319, 50000, ..., 50001, 50001, 50001],\n","       [ 5438,     0,    15, ..., 50001, 50001, 50001],\n","       [    3,    69,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [  645,   117, 50001, ..., 50001, 50001, 50001],\n","       [  740,    19,   534, ..., 50001, 50001, 50001],\n","       [  139,    85,     4, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[17740,    43,    80, ..., 50001, 50001, 50001],\n","       [   69,     1,    76, ..., 50001, 50001, 50001],\n","       [   87,   412,    21, ..., 50001, 50001, 50001],\n","       ...,\n","       [  192,    18,   218, ..., 50001, 50001, 50001],\n","       [ 3380,   147,   630, ..., 50001, 50001, 50001],\n","       [  306,   113,   180, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[ 2486,  3944,     9, ..., 50001, 50001, 50001],\n","       [  106,   302,     7, ..., 50001, 50001, 50001],\n","       [   62,    21,   144, ..., 50001, 50001, 50001],\n","       ...,\n","       [   36,   691,     5, ..., 50001, 50001, 50001],\n","       [ 2988,    39,  1046, ..., 50001, 50001, 50001],\n","       [ 3862,   170,   541, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[ 1816,   179,    21, ..., 50001, 50001, 50001],\n","       [  161,    27,   113, ..., 50001, 50001, 50001],\n","       [ 1118,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  414,   160,   479, ..., 50001, 50001, 50001],\n","       [ 3062,   109,    12, ..., 50001, 50001, 50001],\n","       [  365,    20,     7, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[ 1822,   104,   235, ..., 50001, 50001, 50001],\n","       [11462,     8,   144, ..., 50001, 50001, 50001],\n","       [  164,  2382,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,   115,   433, ..., 50001, 50001, 50001],\n","       [ 2488,   511,     9, ..., 50001, 50001, 50001],\n","       [ 8313,   128,     2, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[ 1227,    21,  1087, ..., 50001, 50001, 50001],\n","       [  544,    26,     8, ..., 50001, 50001, 50001],\n","       [   59, 50000,    59, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,  1364,   129, ..., 50001, 50001, 50001],\n","       [24376,     6,     2, ..., 50001, 50001, 50001],\n","       [ 1908,   255,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[   74,   174,   148, ..., 50001, 50001, 50001],\n","       [  385,    83,     2, ..., 50001, 50001, 50001],\n","       [   48,  1160,   279, ..., 50001, 50001, 50001],\n","       ...,\n","       [24021,     1,    76, ..., 50001, 50001, 50001],\n","       [   94,    18,     8, ..., 50001, 50001, 50001],\n","       [ 1083,   342,   697, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n","       0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[    3,     9,   687, ..., 50001, 50001, 50001],\n","       [  498,  6826,    93, ..., 50001, 50001, 50001],\n","       [  316,  4279,    67, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2629,    50,   303, ..., 50001, 50001, 50001],\n","       [25362,    68, 50000, ..., 50001, 50001, 50001],\n","       [  233,    48,  6568, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  162,  6673,  1481, ..., 50001, 50001, 50001],\n","       [  395,    22,     5, ..., 50001, 50001, 50001],\n","       [   41,   139,    36, ..., 50001, 50001, 50001],\n","       ...,\n","       [   86,  6264,    32, ..., 50001, 50001, 50001],\n","       [   69,    76,   578, ..., 50001, 50001, 50001],\n","       [  114,    23,    38, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[12873,    23,     2, ..., 50001, 50001, 50001],\n","       [ 3717,   234,     2, ..., 50001, 50001, 50001],\n","       [   94,     8,  2081, ..., 50001, 50001, 50001],\n","       ...,\n","       [    3,  7250,  1000, ..., 50001, 50001, 50001],\n","       [ 1665,    43,  1055, ..., 50001, 50001, 50001],\n","       [   62,   314,   210, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  345,  2122,   542, ..., 50001, 50001, 50001],\n","       [  416,   985,  4143, ..., 50001, 50001, 50001],\n","       [  190,  1837,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  134,  6541,   200, ..., 50001, 50001, 50001],\n","       [ 6723,    76,   422, ..., 50001, 50001, 50001],\n","       [  893,  1250,     9, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  188,    91,     8, ..., 50001, 50001, 50001],\n","       [10266,     1,   147, ..., 50001, 50001, 50001],\n","       [    1,     3,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [  432,  7064,     8, ..., 50001, 50001, 50001],\n","       [  992,     9,  2139, ..., 50001, 50001, 50001],\n","       [ 2362,   321,     1, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  275,     1,   162, ..., 50001, 50001, 50001],\n","       [ 1025,     8,  1161, ..., 50001, 50001, 50001],\n","       [16783,   427,   722, ..., 50001, 50001, 50001],\n","       ...,\n","       [  897,     6,  3287, ..., 50001, 50001, 50001],\n","       [  106,     9,   576, ..., 50001, 50001, 50001],\n","       [   98,   105,    75, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,\n","       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n","       0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  222,   266,   682, ..., 50001, 50001, 50001],\n","       [  114,    26,    42, ..., 50001, 50001, 50001],\n","       [  486,    12,   349, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2775,     0,    15, ..., 50001, 50001, 50001],\n","       [  436,     6,     5, ..., 50001, 50001, 50001],\n","       [   67,   118,    12, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n","       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[  165,    87,   976, ..., 50001, 50001, 50001],\n","       [   69,    32,    45, ..., 50001, 50001, 50001],\n","       [  868,    14,     3, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2775,     3,    21, ..., 50001, 50001, 50001],\n","       [   25,    10,     3, ..., 50001, 50001, 50001],\n","       [ 6121,    62,   323, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[  131,     7,    35, ..., 50001, 50001, 50001],\n","       [ 5920,   103,     8, ..., 50001, 50001, 50001],\n","       [ 2528,     3,   111, ..., 50001, 50001, 50001],\n","       ...,\n","       [   14,   432,   126, ..., 50001, 50001, 50001],\n","       [  165,   220,    45, ..., 50001, 50001, 50001],\n","       [ 6523,     2,   952, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n","       1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n","       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  190,    26,   116, ..., 50001, 50001, 50001],\n","       [  291,     9,    26, ..., 50001, 50001, 50001],\n","       [15712, 15712, 15712, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1441,  1191,  3591, ..., 50001, 50001, 50001],\n","       [  530,     0,    15, ..., 50001, 50001, 50001],\n","       [  102,     1,    31, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[   79,  1303,   318, ..., 50001, 50001, 50001],\n","       [  360,     9,    95, ..., 50001, 50001, 50001],\n","       [  385,   343,   128, ..., 50001, 50001, 50001],\n","       ...,\n","       [  351,  2532,    36, ..., 50001, 50001, 50001],\n","       [ 1011,   166,   392, ..., 50001, 50001, 50001],\n","       [24655,     6,   261, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[  354,    14,   187, ..., 50001, 50001, 50001],\n","       [  294,    58,    50, ..., 50001, 50001, 50001],\n","       [   73,  1259,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,   104,   984, ..., 50001, 50001, 50001],\n","       [ 8238,     6,    16, ..., 50001, 50001, 50001],\n","       [  257,     3,    64, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  306,   126,    12, ..., 50001, 50001, 50001],\n","       [  182,    43,   763, ..., 50001, 50001, 50001],\n","       [   67,     9,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 6072,    73,     8, ..., 50001, 50001, 50001],\n","       [23470,   635,   112, ..., 50001, 50001, 50001],\n","       [  395,     7,    23, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[  520,     3,     8, ..., 50001, 50001, 50001],\n","       [   69,     1,    31, ..., 50001, 50001, 50001],\n","       [ 3637,    10,   135, ..., 50001, 50001, 50001],\n","       ...,\n","       [  230,    11,  2304, ..., 50001, 50001, 50001],\n","       [  694,     9, 50000, ..., 50001, 50001, 50001],\n","       [ 1496,     6,    20, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1,\n","       1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n","       0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[  419,   802,  5336, ..., 50001, 50001, 50001],\n","       [ 2224,  1032,    63, ..., 50001, 50001, 50001],\n","       [  403,    10,  4202, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3597,    18,     8, ..., 50001, 50001, 50001],\n","       [   73,    59,  1074, ..., 50001, 50001, 50001],\n","       [    3,    37,   101, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[   13,   156,  1941, ..., 50001, 50001, 50001],\n","       [  796,    94,    18, ..., 50001, 50001, 50001],\n","       [   86,   932,   217, ..., 50001, 50001, 50001],\n","       ...,\n","       [  190,   957,     7, ..., 50001, 50001, 50001],\n","       [ 6318,    95,     3, ..., 50001, 50001, 50001],\n","       [    1,     3,    48, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[ 9793,   189,  2830, ..., 50001, 50001, 50001],\n","       [  146,   110,    38, ..., 50001, 50001, 50001],\n","       [  597,    14,   326, ..., 50001, 50001, 50001],\n","       ...,\n","       [  232, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  255,    12,   119, ..., 50001, 50001, 50001],\n","       [   79,   712,   967, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[22477,     8, 14920, ..., 50001, 50001, 50001],\n","       [   65,     8,    83, ..., 50001, 50001, 50001],\n","       [   15,  2298,    17, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2395, 50000,   381, ..., 50001, 50001, 50001],\n","       [  858,     9,  1416, ..., 50001, 50001, 50001],\n","       [  415,    50,   329, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  853,   853,   452, ..., 50001, 50001, 50001],\n","       [50000,  3604,     9, ..., 50001, 50001, 50001],\n","       [   98,   122,    75, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,    43,    38, ..., 50001, 50001, 50001],\n","       [    1,     3,   222, ..., 50001, 50001, 50001],\n","       [  173,   140,  4870, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  832,  1698,     6, ..., 50001, 50001, 50001],\n","       [36645,   264,  1305, ..., 50001, 50001, 50001],\n","       [  626,    37,   576, ..., 50001, 50001, 50001],\n","       ...,\n","       [  661,  6377,    34, ..., 50001, 50001, 50001],\n","       [  103,     8,  1344, ..., 50001, 50001, 50001],\n","       [   41,   343,    50, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[ 9382,    50,  1045, ..., 50001, 50001, 50001],\n","       [  160,  1233,     6, ..., 50001, 50001, 50001],\n","       [   81,  1518,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000, 50000,  9856, ..., 50001, 50001, 50001],\n","       [   73,     0,    15, ..., 50001, 50001, 50001],\n","       [ 7007,     8,  2754, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[ 5105,    34,   316, ..., 50001, 50001, 50001],\n","       [  346,     3,   122, ..., 50001, 50001, 50001],\n","       [  255,   131,    29, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,     0,    15, ..., 50001, 50001, 50001],\n","       [   43,  3648,    19, ..., 50001, 50001, 50001],\n","       [  546,  2385,   222, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[   36,   295,    64, ..., 50001, 50001, 50001],\n","       [  898,   524,   167, ..., 50001, 50001, 50001],\n","       [ 7153,  1898, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2194,     8,  2088, ..., 50001, 50001, 50001],\n","       [  219,  1909,  4679, ..., 50001, 50001, 50001],\n","       [  190,  1566,    23, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[ 2213,    23,     5, ..., 50001, 50001, 50001],\n","       [   35,  2230,     0, ..., 50001, 50001, 50001],\n","       [  374,     6,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [  259,    18,     1, ..., 50001, 50001, 50001],\n","       [   13,   125,   419, ..., 50001, 50001, 50001],\n","       [ 5283,     6,    16, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  848,  2369,    50, ..., 50001, 50001, 50001],\n","       [  115,     4,     0, ..., 50001, 50001, 50001],\n","       [  615,    50, 16864, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,   128,  1347, ..., 50001, 50001, 50001],\n","       [   86,   194,    61, ..., 50001, 50001, 50001],\n","       [   65,     8,     3, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[   67,     9,    41, ..., 50001, 50001, 50001],\n","       [   73,    48,     3, ..., 50001, 50001, 50001],\n","       [   73,     0,    82, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2742,    34,    63, ..., 50001, 50001, 50001],\n","       [  726,    60,  3998, ..., 50001, 50001, 50001],\n","       [  103,   177,    17, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n","       1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[ 2197,    18,     8, ..., 50001, 50001, 50001],\n","       [  395,    12,   730, ..., 50001, 50001, 50001],\n","       [ 1209,    50,    33, ..., 50001, 50001, 50001],\n","       ...,\n","       [  128,     2,   294, ..., 50001, 50001, 50001],\n","       [  207,   325,   604, ..., 50001, 50001, 50001],\n","       [ 4430,  2071,     9, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[ 2572,     0,     0, ..., 50001, 50001, 50001],\n","       [   41,  4740,  6667, ..., 50001, 50001, 50001],\n","       [ 3170,    12, 12779, ..., 50001, 50001, 50001],\n","       ...,\n","       [   65,     8,   332, ..., 50001, 50001, 50001],\n","       [  990,   115,    42, ..., 50001, 50001, 50001],\n","       [  784,   285,     3, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[   97,   345,     0, ..., 50001, 50001, 50001],\n","       [ 2328,   956,    17, ..., 50001, 50001, 50001],\n","       [  102,     7,    62, ..., 50001, 50001, 50001],\n","       ...,\n","       [   43,     4, 50001, ..., 50001, 50001, 50001],\n","       [  361,    39,   426, ..., 50001, 50001, 50001],\n","       [ 4308,   104,    74, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  673,   137,    11, ..., 50001, 50001, 50001],\n","       [  966,    68,   102, ..., 50001, 50001, 50001],\n","       [   76,   160,   202, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,   109,    74, ..., 50001, 50001, 50001],\n","       [30734,  2117,    60, ..., 50001, 50001, 50001],\n","       [  130,   696,    92, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[   69,     1,    76, ..., 50001, 50001, 50001],\n","       [ 3883,     9,   234, ..., 50001, 50001, 50001],\n","       [   56,   151,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3344,   124,     0, ..., 50001, 50001, 50001],\n","       [ 1716,    14,   316, ..., 50001, 50001, 50001],\n","       [ 2863,  8115,     8, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  725,    50,    33, ..., 50001, 50001, 50001],\n","       [  811,    21,    13, ..., 50001, 50001, 50001],\n","       [   79,     2,   833, ..., 50001, 50001, 50001],\n","       ...,\n","       [  150,    43,    16, ..., 50001, 50001, 50001],\n","       [  613,   203,     2, ..., 50001, 50001, 50001],\n","       [   81,    81,    59, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  812,   110,    16, ..., 50001, 50001, 50001],\n","       [    3,    34,   973, ..., 50001, 50001, 50001],\n","       [  153,    11,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [  108,     6,     5, ..., 50001, 50001, 50001],\n","       [  107, 50000,   106, ..., 50001, 50001, 50001],\n","       [   94,   487,  1610, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  108,    49,    47, ..., 50001, 50001, 50001],\n","       [50000,  2086,    37, ..., 50001, 50001, 50001],\n","       [50000,    46,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,    76,   160, ..., 50001, 50001, 50001],\n","       [  165,   243,  3450, ..., 50001, 50001, 50001],\n","       [ 2756,   587,  2091, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[ 7737,  7387,     7, ..., 50001, 50001, 50001],\n","       [  419,    48,   210, ..., 50001, 50001, 50001],\n","       [   36,  9163,  5514, ..., 50001, 50001, 50001],\n","       ...,\n","       [   43,    16,    64, ..., 50001, 50001, 50001],\n","       [19381,   161,    27, ..., 50001, 50001, 50001],\n","       [ 8512,   147,   784, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[ 7487,    11,   713, ..., 50001, 50001, 50001],\n","       [   27,    45,     7, ..., 50001, 50001, 50001],\n","       [ 2526,  1949,  2434, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4865,     1,   105, ..., 50001, 50001, 50001],\n","       [  103,     1,  1514, ..., 50001, 50001, 50001],\n","       [   65,   866,     0, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[   69,   258,    16, ...,    91,     1,   912],\n","       [   48,  4067,    23, ..., 50001, 50001, 50001],\n","       [   73,   215,   182, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3064,    10,   173, ..., 50001, 50001, 50001],\n","       [  257,    10,    70, ..., 50001, 50001, 50001],\n","       [   25,    10,     3, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[  247,    26,     2, ..., 50001, 50001, 50001],\n","       [  161,    32,   667, ..., 50001, 50001, 50001],\n","       [  252,  1460,     7, ..., 50001, 50001, 50001],\n","       ...,\n","       [  381,  1302,     6, ..., 50001, 50001, 50001],\n","       [   64,   737,   156, ..., 50001, 50001, 50001],\n","       [  420,    20,     7, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[   74,  1163,    12, ..., 50001, 50001, 50001],\n","       [  191, 13733, 50000, ..., 50001, 50001, 50001],\n","       [  589,    11,   373, ..., 50001, 50001, 50001],\n","       ...,\n","       [  222,   266,    28, ..., 50001, 50001, 50001],\n","       [14095,   103,   677, ..., 50001, 50001, 50001],\n","       [  242,    21,   239, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n","       0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[  210,   433,     0, ..., 50001, 50001, 50001],\n","       [  153,   200,   138, ..., 50001, 50001, 50001],\n","       [   81,   114,  2004, ..., 50001, 50001, 50001],\n","       ...,\n","       [  207,  1229,    60, ..., 50001, 50001, 50001],\n","       [  103,  4110, 43331, ..., 50001, 50001, 50001],\n","       [ 3294, 50001, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[ 1951,   160,     4, ..., 50001, 50001, 50001],\n","       [  868,    14,     3, ..., 50001, 50001, 50001],\n","       [ 1204,    26, 15055, ..., 50001, 50001, 50001],\n","       ...,\n","       [  784,   312,  8131, ..., 50001, 50001, 50001],\n","       [  107,   107,   107, ..., 50001, 50001, 50001],\n","       [ 2497,    94,    31, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[ 2323,     1,  1829, ..., 50001, 50001, 50001],\n","       [  158,   176,   354, ..., 50001, 50001, 50001],\n","       [ 2800,  3644,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [   43,    71,   188, ..., 50001, 50001, 50001],\n","       [   61,     1,   251, ..., 50001, 50001, 50001],\n","       [    3,     9,   301, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[50000,   902, 25011, ..., 50001, 50001, 50001],\n","       [ 3886,    13,    16, ..., 50001, 50001, 50001],\n","       [  220,    45,     7, ..., 50001, 50001, 50001],\n","       ...,\n","       [   99,    29,    14, ..., 50001, 50001, 50001],\n","       [ 3383,     8,  5019, ..., 50001, 50001, 50001],\n","       [ 9106,   953,    43, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[   76,   160,   102, ..., 50001, 50001, 50001],\n","       [ 2410,     1,   199, ..., 50001, 50001, 50001],\n","       [  381,    70,     3, ..., 50001, 50001, 50001],\n","       ...,\n","       [   26,     8,  1024, ..., 50001, 50001, 50001],\n","       [50000,     1,   136, ..., 50001, 50001, 50001],\n","       [   98,   123, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  483,     8,    83, ..., 50001, 50001, 50001],\n","       [ 1357,  5584,  2816, ..., 50001, 50001, 50001],\n","       [   13,  1347,    86, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1067,   408,     8, ..., 50001, 50001, 50001],\n","       [   67,     9,    33, ..., 50001, 50001, 50001],\n","       [   69,    76,   160, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[  146,    43,    38, ..., 50001, 50001, 50001],\n","       [  461,   267,  1494, ..., 50001, 50001, 50001],\n","       [  507,  1212,   133, ..., 50001, 50001, 50001],\n","       ...,\n","       [    3,    13,     5, ..., 50001, 50001, 50001],\n","       [   73,   357,  1825, ..., 50001, 50001, 50001],\n","       [ 3723,   128,     2, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[  127,   176,    91, ..., 50001, 50001, 50001],\n","       [  530,    97,  7868, ..., 50001, 50001, 50001],\n","       [ 3591,    46,    47, ..., 50001, 50001, 50001],\n","       ...,\n","       [  959,     6,     4, ..., 50001, 50001, 50001],\n","       [ 8407,     8,  5263, ..., 50001, 50001, 50001],\n","       [   14,    27,   113, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n","       1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[ 1754,     2,    23, ..., 50001, 50001, 50001],\n","       [ 3330,  1809,   200, ..., 50001, 50001, 50001],\n","       [  160,  3278,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  532,   176,   139, ..., 50001, 50001, 50001],\n","       [ 2161,     2,  1992, ..., 50001, 50001, 50001],\n","       [   67,     9,   411, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[ 1547,    11,    13, ..., 50001, 50001, 50001],\n","       [ 2408,    20,   649, ..., 50001, 50001, 50001],\n","       [  347,  1196,   279, ..., 50001, 50001, 50001],\n","       ...,\n","       [  138,   352,   799, ..., 50001, 50001, 50001],\n","       [ 2272, 12055,    12, ..., 50001, 50001, 50001],\n","       [   67,     9,   112, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[   32,   134,     2, ..., 50001, 50001, 50001],\n","       [   91,    23,     2, ..., 50001, 50001, 50001],\n","       [  207,     7,   118, ..., 50001, 50001, 50001],\n","       ...,\n","       [  613,   203,     4, ..., 50001, 50001, 50001],\n","       [  191,    78,     6, ..., 50001, 50001, 50001],\n","       [  522,   159,    72, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 1719,    14, 50000, ..., 50001, 50001, 50001],\n","       [  397,    34,    39, ..., 50001, 50001, 50001],\n","       [ 4012,  3793,   271, ..., 50001, 50001, 50001],\n","       ...,\n","       [    6,     0,    15, ..., 50001, 50001, 50001],\n","       [  196,     3,   280, ..., 50001, 50001, 50001],\n","       [  374,     6,     4, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n","       1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[    3,   681,    34, ..., 50001, 50001, 50001],\n","       [    3,     2,   694, ..., 50001, 50001, 50001],\n","       [  812,    91,    49, ..., 50001, 50001, 50001],\n","       ...,\n","       [  714,   154,   200, ..., 50001, 50001, 50001],\n","       [50000,  1300,   162, ..., 50001, 50001, 50001],\n","       [  360, 26121,     8, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[   43,    44,     0, ..., 50001, 50001, 50001],\n","       [  520,   261, 50000, ..., 50001, 50001, 50001],\n","       [ 5429, 50000,   154, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 9248,     1,    68, ..., 50001, 50001, 50001],\n","       [  239,   466,     6, ..., 50001, 50001, 50001],\n","       [   75,   164,    23, ...,  2694,     4,    93]], dtype=int32), array([1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[ 2781,   114,  4680, ..., 50001, 50001, 50001],\n","       [  955,   137,   262, ..., 50001, 50001, 50001],\n","       [  346,  2912,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [  589,  2467,     0, ..., 50001, 50001, 50001],\n","       [   43,    80,   374, ..., 50001, 50001, 50001],\n","       [  270,     1,  4520, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[   76,   725,   803, ..., 50001, 50001, 50001],\n","       [  137,   154,    50, ..., 50001, 50001, 50001],\n","       [  282, 10371,    99, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 6941,     3,  2125, ..., 50001, 50001, 50001],\n","       [ 1422,    37,    43, ..., 50001, 50001, 50001],\n","       [  937,    10,   289, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n","       1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n","       1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[   67,   541,   750, ..., 50001, 50001, 50001],\n","       [11811,    19,    19, ..., 50001, 50001, 50001],\n","       [  520,   212,   158, ..., 50001, 50001, 50001],\n","       ...,\n","       [10745, 13926,     8, ..., 50001, 50001, 50001],\n","       [14275,     3,   111, ..., 50001, 50001, 50001],\n","       [  907,    34,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[   69,     1,   273, ..., 50001, 50001, 50001],\n","       [   74,    32,   113, ..., 50001, 50001, 50001],\n","       [   78,  8001,   229, ..., 50001, 50001, 50001],\n","       ...,\n","       [   73,     0,     0, ..., 50001, 50001, 50001],\n","       [  233,     1,   230, ..., 50001, 50001, 50001],\n","       [  696,    18,  6397, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  520,  3597,  7121, ..., 50001, 50001, 50001],\n","       [  134,  1002,    28, ..., 50001, 50001, 50001],\n","       [ 1198,   631,   204, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2615,     8,    62, ..., 50001, 50001, 50001],\n","       [  644,   173,    35, ..., 50001, 50001, 50001],\n","       [  381,   128,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[  282,   540, 50001, ..., 50001, 50001, 50001],\n","       [   36,    64,   201, ..., 50001, 50001, 50001],\n","       [ 1582,    10, 19573, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,   103,   630, ..., 50001, 50001, 50001],\n","       [  474,    79,     9, ..., 50001, 50001, 50001],\n","       [21381,  8323,    62, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[   48,   222,   266, ..., 50001, 50001, 50001],\n","       [46832,   154,    50, ..., 50001, 50001, 50001],\n","       [  415,    13,   427, ..., 50001, 50001, 50001],\n","       ...,\n","       [   65,   111,     8, ..., 50001, 50001, 50001],\n","       [    3,   110,    28, ..., 50001, 50001, 50001],\n","       [ 5824,  6420,  1025, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[  513,     3,     9, ..., 50001, 50001, 50001],\n","       [ 1473,     6,    16, ..., 50001, 50001, 50001],\n","       [ 3272,     9, 50000, ..., 50001, 50001, 50001],\n","       ...,\n","       [  346,    76,   368, ..., 50001, 50001, 50001],\n","       [ 2860,    84,    12, ..., 50001, 50001, 50001],\n","       [ 1326,    14,   379, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  259,    18,    12, ..., 50001, 50001, 50001],\n","       [   67,   241,    65, ..., 50001, 50001, 50001],\n","       [ 2723,     6,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [  701,   114,     0, ..., 50001, 50001, 50001],\n","       [ 1626,    34,     1, ..., 50001, 50001, 50001],\n","       [   25,    10,     3, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[   32,    45,   119, ..., 50001, 50001, 50001],\n","       [ 8190, 11182,   136, ..., 50001, 50001, 50001],\n","       [ 3947,   369,   190, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,   222,   266, ..., 50001, 50001, 50001],\n","       [  341,     1,  2039, ..., 50001, 50001, 50001],\n","       [   65,    52,    74, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[11550,     7,     3, ..., 50001, 50001, 50001],\n","       [   70,     3,   488, ..., 50001, 50001, 50001],\n","       [  127,    13,   124, ..., 50001, 50001, 50001],\n","       ...,\n","       [  830,   575, 50001, ..., 50001, 50001, 50001],\n","       [   67,  4228,    10, ..., 50001, 50001, 50001],\n","       [ 1535,   355,   121, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[14640,   470,     8, ..., 50001, 50001, 50001],\n","       [  942,  3534,  2001, ..., 50001, 50001, 50001],\n","       [  795,     9,    98, ..., 50001, 50001, 50001],\n","       ...,\n","       [  222,  8075,    29, ..., 50001, 50001, 50001],\n","       [50000,   180,  1923, ..., 50001, 50001, 50001],\n","       [  869,  1328,    75, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[   31,  6285,    23, ..., 50001, 50001, 50001],\n","       [  253,    17,   863, ..., 50001, 50001, 50001],\n","       [  139,     3,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [25289,   105, 50000, ..., 50001, 50001, 50001],\n","       [  636,   175,    40, ..., 50001, 50001, 50001],\n","       [ 1644,     1,   105, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 2654,  1241,    60, ..., 50001, 50001, 50001],\n","       [   98,     6,  1273, ..., 50001, 50001, 50001],\n","       [ 1544,    14,  3067, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,    32,   113, ..., 50001, 50001, 50001],\n","       [  158,    96,    95, ..., 50001, 50001, 50001],\n","       [    1,   416,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n","       0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[   65, 50001, 50001, ..., 50001, 50001, 50001],\n","       [ 1083,    18,     8, ..., 50001, 50001, 50001],\n","       [  741,    37,   232, ..., 50001, 50001, 50001],\n","       ...,\n","       [   26,   546,    34, ..., 50001, 50001, 50001],\n","       [   74,   756,  2698, ..., 50001, 50001, 50001],\n","       [  806, 19820, 35660, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  107,    83,    26, ..., 50001, 50001, 50001],\n","       [  208,  1623,   353, ..., 50001, 50001, 50001],\n","       [   41,    43,     4, ..., 50001, 50001, 50001],\n","       ...,\n","       [  314,   279,   114, ..., 50001, 50001, 50001],\n","       [50000,  3293,    11, ..., 50001, 50001, 50001],\n","       [   87,  5018, 13485, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[  357, 17912,  3116, ..., 50001, 50001, 50001],\n","       [  320,     8,   434, ..., 50001, 50001, 50001],\n","       [   41,   349,    19, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,    32,    45, ..., 50001, 50001, 50001],\n","       [  692,     9,  1220, ..., 50001, 50001, 50001],\n","       [ 3497,    19, 43422, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1,\n","       0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[   69,    98,    20, ..., 50001, 50001, 50001],\n","       [  449,   229,   102, ..., 50001, 50001, 50001],\n","       [  146,  1811,    34, ..., 50001, 50001, 50001],\n","       ...,\n","       [  141,     7,   301, ..., 50001, 50001, 50001],\n","       [  365,    51,     7, ..., 50001, 50001, 50001],\n","       [  153,   200,   138, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n","       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[ 7455,    18,    24, ..., 50001, 50001, 50001],\n","       [   84,   104, 33156, ..., 50001, 50001, 50001],\n","       [ 1010,    18,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1425,    51, 50001, ..., 50001, 50001, 50001],\n","       [  869,    35,   175, ..., 50001, 50001, 50001],\n","       [  473,    12, 14479, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[  959,    14,   239, ..., 50001, 50001, 50001],\n","       [  167,     0,   434, ..., 50001, 50001, 50001],\n","       [   98,    20,   139, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 7440,   479,    51, ..., 50001, 50001, 50001],\n","       [ 1785,    23,     5, ..., 50001, 50001, 50001],\n","       [20049,    73,  7485, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[ 4067,    22,    16, ..., 50001, 50001, 50001],\n","       [ 1073,    50,   123, ..., 50001, 50001, 50001],\n","       [ 1310,  2634,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [   31,  9392,    30, ..., 50001, 50001, 50001],\n","       [  242,    24, 50001, ..., 50001, 50001, 50001],\n","       [  497,   603,    23, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[ 6156,   375,     8, ..., 50001, 50001, 50001],\n","       [10714,   103,    60, ..., 50001, 50001, 50001],\n","       [ 1799,    78,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,   112,    45, ..., 50001, 50001, 50001],\n","       [  114,    23,     4, ..., 50001, 50001, 50001],\n","       [ 1445,     8,  4578, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[ 7715,    10,    67, ..., 50001, 50001, 50001],\n","       [ 1271,  3399,   997, ..., 50001, 50001, 50001],\n","       [  223,  1147,   957, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1111,  9943,    11, ..., 50001, 50001, 50001],\n","       [ 4260,   560,  1175, ..., 50001, 50001, 50001],\n","       [  760,   687,   211, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[    3,     9,     4, ..., 50001, 50001, 50001],\n","       [   43,     2,  2610, ..., 50001, 50001, 50001],\n","       [ 1527,     5,   253, ..., 50001, 50001, 50001],\n","       ...,\n","       [  600,    96,  9635, ..., 50001, 50001, 50001],\n","       [ 2007, 14882,    18, ..., 50001, 50001, 50001],\n","       [  385, 27563,     6, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n","       1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[  100,   348,    85, ..., 50001, 50001, 50001],\n","       [  533,   308,   384, ..., 50001, 50001, 50001],\n","       [  193,   787,   522, ..., 50001, 50001, 50001],\n","       ...,\n","       [  365,    20,     7, ..., 50001, 50001, 50001],\n","       [  383,   383,    11, ..., 50001, 50001, 50001],\n","       [   59,   130,  1493, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[    3,   238,   629, ..., 50001, 50001, 50001],\n","       [  103, 50000,   185, ..., 50001, 50001, 50001],\n","       [17761,    66,    58, ..., 50001, 50001, 50001],\n","       ...,\n","       [  658,    10,    85, ..., 50001, 50001, 50001],\n","       [ 7489,  2796,    73, ..., 50001, 50001, 50001],\n","       [   67,     9,   213, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  139,   913,     3, ..., 50001, 50001, 50001],\n","       [  614,    21,   335, ..., 50001, 50001, 50001],\n","       [  294,   851,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  130,   114,    22, ..., 50001, 50001, 50001],\n","       [ 9807,  1466,     3, ..., 50001, 50001, 50001],\n","       [ 4735,    62,   481, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0,\n","       0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  146,    43,    38, ..., 50001, 50001, 50001],\n","       [   59,  4035,     0, ..., 50001, 50001, 50001],\n","       [ 1654,  2521,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [   98,   120,     0, ..., 50001, 50001, 50001],\n","       [ 7082,    10, 50000, ..., 50001, 50001, 50001],\n","       [   27,   113,  1423, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[  167,   252,  1460, ..., 50001, 50001, 50001],\n","       [   48,   792,   126, ..., 50001, 50001, 50001],\n","       [  110,    28,    71, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,    43,    71, ..., 50001, 50001, 50001],\n","       [  171,   112,   166, ..., 50001, 50001, 50001],\n","       [   52,   209,   259, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1,\n","       0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[    1,   136,    58, ..., 50001, 50001, 50001],\n","       [  296,    96,     7, ..., 50001, 50001, 50001],\n","       [ 1025,   553,   521, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1971,   353,    49, ..., 50001, 50001, 50001],\n","       [    3,     9,   548, ..., 50001, 50001, 50001],\n","       [  436,    14,   233, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n","       1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[ 2951,    35,   393, ..., 50001, 50001, 50001],\n","       [ 1447,    65,     8, ..., 50001, 50001, 50001],\n","       [  927,  8521,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [   26,     2,   459, ..., 50001, 50001, 50001],\n","       [ 1579,   197,     2, ..., 50001, 50001, 50001],\n","       [ 8022,     8,  1235, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[   99,    29,    14, ..., 50001, 50001, 50001],\n","       [ 1712,    19,   181, ..., 50001, 50001, 50001],\n","       [   35,    50,  1144, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4861,   146,   110, ..., 50001, 50001, 50001],\n","       [  137,   262,    10, ..., 50001, 50001, 50001],\n","       [ 6746,    60, 15043, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n","       0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[ 8712,   375,    10, ..., 50001, 50001, 50001],\n","       [  406,  1977,     6, ..., 50001, 50001, 50001],\n","       [ 3386,     0,    65, ..., 50001, 50001, 50001],\n","       ...,\n","       [36626,    34,    63, ..., 50001, 50001, 50001],\n","       [   14,   109,    35, ..., 50001, 50001, 50001],\n","       [   89,  1779,   364, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[ 2253,   187,     0, ..., 50001, 50001, 50001],\n","       [  304,   219,  1909, ..., 50001, 50001, 50001],\n","       [ 9436,   138,    96, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,   136,    58, ..., 50001, 50001, 50001],\n","       [  605,     9,    98, ..., 50001, 50001, 50001],\n","       [  118,     6,    20, ...,     4,  5603, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[ 2195,    97,   199, ..., 50001, 50001, 50001],\n","       [   76,    69,    11, ..., 50001, 50001, 50001],\n","       [ 1834,    12,  2010, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1465,    57,     2, ..., 50001, 50001, 50001],\n","       [21914,    18,    29, ..., 50001, 50001, 50001],\n","       [  962,    46,    10, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0,\n","       1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  602,    37,  5342, ..., 50001, 50001, 50001],\n","       [    6,  2033,  1749, ..., 50001, 50001, 50001],\n","       [ 2846,   806,    62, ..., 50001, 50001, 50001],\n","       ...,\n","       [  107,     0,     0, ..., 50001, 50001, 50001],\n","       [50000,   366,     2, ..., 50001, 50001, 50001],\n","       [  139,  2949,  3245, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[  314,   174,    45, ..., 50001, 50001, 50001],\n","       [    1,   136,     3, ..., 50001, 50001, 50001],\n","       [   41,  1097,    27, ..., 50001, 50001, 50001],\n","       ...,\n","       [  112,    45,   136, ..., 50001, 50001, 50001],\n","       [  329,    21,    61, ..., 50001, 50001, 50001],\n","       [  333,   108,     6, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 1130,  2036,  1033, ..., 50001, 50001, 50001],\n","       [ 4637,     8,   679, ..., 50001, 50001, 50001],\n","       [ 2411,   128,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,     3,   103, ..., 50001, 50001, 50001],\n","       [ 1432,     7,   173, ..., 50001, 50001, 50001],\n","       [  127,    13,    30, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[  546,    34,    11, ..., 50001, 50001, 50001],\n","       [  489,    39,  6923, ..., 50001, 50001, 50001],\n","       [  692,     9,   449, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4713,  7988,    12, ..., 50001, 50001, 50001],\n","       [  222,   266,    42, ..., 50001, 50001, 50001],\n","       [  191,    43,    16, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[  109,   586, 50001, ..., 50001, 50001, 50001],\n","       [ 1025,     8,  1766, ..., 50001, 50001, 50001],\n","       [    1,     3,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3985,    17,  1447, ..., 50001, 50001, 50001],\n","       [ 1011,    25,    10, ..., 50001, 50001, 50001],\n","       [  165,  2281,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[   41,     0,     0, ..., 50001, 50001, 50001],\n","       [   25,    10,  1420, ..., 50001, 50001, 50001],\n","       [  241,     8,  5300, ..., 50001, 50001, 50001],\n","       ...,\n","       [  483,   720,    42, ..., 50001, 50001, 50001],\n","       [  141,     7,   210, ..., 50001, 50001, 50001],\n","       [  723,   289,    17, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  173,    68, 50001, ..., 50001, 50001, 50001],\n","       [ 2060,   325,     9, ..., 50001, 50001, 50001],\n","       [  239,     2,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [12365,   175,    16, ..., 50001, 50001, 50001],\n","       [  825,   192,     8, ..., 50001, 50001, 50001],\n","       [   89,    60,    89, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[ 4791,    16,   847, ..., 50001, 50001, 50001],\n","       [ 1016,   365,     2, ..., 50001, 50001, 50001],\n","       [   48, 50000,  3076, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1301,    11,  1588, ..., 50001, 50001, 50001],\n","       [   25,    10,     3, ..., 50001, 50001, 50001],\n","       [ 9757, 10917,  1130, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[50000,     8,   196, ..., 50001, 50001, 50001],\n","       [   67,     9,  5576, ..., 50001, 50001, 50001],\n","       [50000,  7458,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,   865,    37, ..., 50001, 50001, 50001],\n","       [   69,    11,   238, ..., 50001, 50001, 50001],\n","       [  190,  2633,    62, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[39222,    14,   616, ..., 50001, 50001, 50001],\n","       [  604,    36,    25, ..., 50001, 50001, 50001],\n","       [    1,   179,   124, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1676,    43,    16, ..., 50001, 50001, 50001],\n","       [ 1115,   718,    10, ..., 50001, 50001, 50001],\n","       [   67,   241,    65, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[  672,    11,  2468, ..., 50001, 50001, 50001],\n","       [  164,  1323,    50, ..., 50001, 50001, 50001],\n","       [15052,   246,  4434, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,   209,   125, ..., 50001, 50001, 50001],\n","       [  164,   421,   117, ..., 50001, 50001, 50001],\n","       [  107,  4758,     1, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 2439,   718,  6062, ..., 50001, 50001, 50001],\n","       [  507,  1313,     5, ..., 50001, 50001, 50001],\n","       [  296,     7,   790, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1923,     0,     0, ..., 50001, 50001, 50001],\n","       [50000,   553,    26, ..., 50001, 50001, 50001],\n","       [  455,  7072,     0, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[ 5717,     7,  5717, ..., 50001, 50001, 50001],\n","       [50000,     1,   147, ..., 50001, 50001, 50001],\n","       [   27,    45,     7, ..., 50001, 50001, 50001],\n","       ...,\n","       [  633,    17,   242, ..., 50001, 50001, 50001],\n","       [  167,    87,   302, ..., 50001, 50001, 50001],\n","       [ 3497,   101,   186, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[ 4166,     3,    50, ..., 50001, 50001, 50001],\n","       [   46,    10,   235, ..., 50001, 50001, 50001],\n","       [ 3450,   112,  2359, ..., 50001, 50001, 50001],\n","       ...,\n","       [20709,     0,     0, ..., 50001, 50001, 50001],\n","       [    1,   104,    86, ..., 50001, 50001, 50001],\n","       [ 7642,   355,    26, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[ 5763,  3821,     5, ..., 50001, 50001, 50001],\n","       [  219,  1909,    95, ..., 50001, 50001, 50001],\n","       [ 3689,   138,    96, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,     3,     2, ..., 50001, 50001, 50001],\n","       [  715,    12,    92, ..., 50001, 50001, 50001],\n","       [ 4506,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[ 1029,     0,    15, ..., 50001, 50001, 50001],\n","       [   31,    31,   554, ..., 50001, 50001, 50001],\n","       [   48,   187,   111, ..., 50001, 50001, 50001],\n","       ...,\n","       [  109,     1,  1231, ..., 50001, 50001, 50001],\n","       [ 2305, 50000, 50000, ..., 50001, 50001, 50001],\n","       [  207,   325,    48, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n","       1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[  513,   195,    76, ..., 50001, 50001, 50001],\n","       [  770,    49,    72, ..., 50001, 50001, 50001],\n","       [ 3791,   332,   369, ..., 50001, 50001, 50001],\n","       ...,\n","       [  516,  1434,   313, ...,   957,  1737,    24],\n","       [  190, 13386, 18293, ..., 50001, 50001, 50001],\n","       [   69,     1,   182, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[12414,  3789,  7611, ..., 50001, 50001, 50001],\n","       [  813,    11,     7, ..., 50001, 50001, 50001],\n","       [  179,    18,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,     3,     2, ..., 50001, 50001, 50001],\n","       [  107,    27,    45, ..., 50001, 50001, 50001],\n","       [   48,   114,  1835, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1,\n","       1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1,\n","       1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[ 2887,     9,   767, ..., 50001, 50001, 50001],\n","       [  252,    48,   234, ...,   236,    19,   188],\n","       [  314,   114,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [10182,    62,    36, ..., 50001, 50001, 50001],\n","       [  631,   204,     0, ..., 50001, 50001, 50001],\n","       [  150,  1085,     6, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  222,   266,   596, ..., 50001, 50001, 50001],\n","       [   13,   125,   231, ..., 50001, 50001, 50001],\n","       [10619, 10526,    21, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1451,     1,   147, ..., 50001, 50001, 50001],\n","       [  107,    99,    29, ..., 50001, 50001, 50001],\n","       [  948,   104,   675, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  187,     1,     4, ..., 50001, 50001, 50001],\n","       [  102,     1,   371, ..., 50001, 50001, 50001],\n","       [  180,    11,     7, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1195,  1426,   240, ..., 50001, 50001, 50001],\n","       [    1,     3,   602, ..., 50001, 50001, 50001],\n","       [  942,    17,   257, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[50000, 50000,     0, ..., 50001, 50001, 50001],\n","       [  296,     7,   119, ..., 50001, 50001, 50001],\n","       [  207,   325,   167, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5966,  1382,    12, ..., 50001, 50001, 50001],\n","       [   38,     0,    82, ..., 50001, 50001, 50001],\n","       [  229,   102,   269, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n","       1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[  735,    92,    95, ..., 50001, 50001, 50001],\n","       [  585,   460,  1126, ..., 50001, 50001, 50001],\n","       [  207,   325,     3, ..., 50001, 50001, 50001],\n","       ...,\n","       [  715,    12,  1053, ..., 50001, 50001, 50001],\n","       [  242,     7,    85, ..., 50001, 50001, 50001],\n","       [  307,    10,   150, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[ 8276,   245,   182, ..., 50001, 50001, 50001],\n","       [   31,    43,   178, ..., 50001, 50001, 50001],\n","       [  621,    26,    14, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1280,    16,   114, ..., 50001, 50001, 50001],\n","       [ 2633,    36,    25, ..., 50001, 50001, 50001],\n","       [11839,    99,     0, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,\n","       0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  165,   306,  1202, ..., 50001, 50001, 50001],\n","       [  345,  2023,     2, ..., 50001, 50001, 50001],\n","       [ 6298,   614,    73, ..., 50001, 50001, 50001],\n","       ...,\n","       [  206,   235,     8, ..., 50001, 50001, 50001],\n","       [19281,     4,     0, ..., 50001, 50001, 50001],\n","       [ 9172,   200,   487, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[  206,   134,     8, ..., 50001, 50001, 50001],\n","       [ 1193,   147,    54, ..., 50001, 50001, 50001],\n","       [ 4704,    10,   222, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2409,   116,    51, ..., 50001, 50001, 50001],\n","       [50000, 18436, 11664, ..., 50001, 50001, 50001],\n","       [   94,    18,     8, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[   61,     1,   251, ..., 50001, 50001, 50001],\n","       [   83, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  177,    18,   130, ..., 50001, 50001, 50001],\n","       ...,\n","       [  234,  1018,    19, ..., 50001, 50001, 50001],\n","       [  740, 50001, 50001, ..., 50001, 50001, 50001],\n","       [ 9162,    56,   271, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0], dtype=int32))\n","(array([[15097, 14002,     0, ..., 50001, 50001, 50001],\n","       [    6,     4,     6, ..., 50001, 50001, 50001],\n","       [  481,     1,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [   84,     6,    16, ..., 50001, 50001, 50001],\n","       [   41,    48,    31, ..., 50001, 50001, 50001],\n","       [  107,    13,    20, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0], dtype=int32))\n","(array([[  798,    11,   148, ..., 50001, 50001, 50001],\n","       [  716,   408,     3, ..., 50001, 50001, 50001],\n","       [  690,   131,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [  783,  2369,    21, ..., 50001, 50001, 50001],\n","       [ 3170,   112,    17, ..., 50001, 50001, 50001],\n","       [  127,     4,   203, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  728,    13,    30, ..., 50001, 50001, 50001],\n","       [ 1604,     1,   147, ..., 50001, 50001, 50001],\n","       [    3,  4980,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [   25,    10,     3, ..., 50001, 50001, 50001],\n","       [  901,   272, 12023, ..., 50001, 50001, 50001],\n","       [ 5221,  4414,   179, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[  139,    98,   103, ..., 50001, 50001, 50001],\n","       [    1,   462,   240, ..., 50001, 50001, 50001],\n","       [  106,     7,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 6345, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  102,     1,    25, ..., 50001, 50001, 50001],\n","       [  440,    14,     3, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[   91,    17,   499, ..., 50001, 50001, 50001],\n","       [ 4338,  1221,  5963, ..., 50001, 50001, 50001],\n","       [   89,    18,     1, ..., 50001, 50001, 50001],\n","       ...,\n","       [  637,   206,   103, ..., 50001, 50001, 50001],\n","       [  191,    43,    30, ..., 50001, 50001, 50001],\n","       [   36,  4111,    19, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,\n","       1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 7364,     9,   135, ..., 50001, 50001, 50001],\n","       [  104,    13,  1347, ..., 50001, 50001, 50001],\n","       [  102,     1,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [  167,     1,    76, ..., 50001, 50001, 50001],\n","       [   73,     0,    15, ..., 50001, 50001, 50001],\n","       [ 2201,    27,    32, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[  458,     7,   458, ..., 50001, 50001, 50001],\n","       [   98,   120,    24, ..., 50001, 50001, 50001],\n","       [   35,    33,    47, ..., 50001, 50001, 50001],\n","       ...,\n","       [  633,   405,    38, ..., 50001, 50001, 50001],\n","       [ 1906,  1497,    52, ..., 50001, 50001, 50001],\n","       [  700,    37,  5948, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n","       1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[   36,   565,   143, ..., 50001, 50001, 50001],\n","       [  795,     6,     2, ..., 50001, 50001, 50001],\n","       [   67,   241,   167, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1359,     0, 50000, ..., 50001, 50001, 50001],\n","       [   73,    68,    48, ..., 50001, 50001, 50001],\n","       [ 3218,     7,   264, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0,\n","       0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  117,   278,   227, ..., 50001, 50001, 50001],\n","       [   27,    32,   113, ..., 50001, 50001, 50001],\n","       [ 8764,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3052,    12,   367, ..., 50001, 50001, 50001],\n","       [  304,  3368, 40798, ..., 50001, 50001, 50001],\n","       [   13,     5,    88, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0,\n","       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[ 8477, 50000,  8605, ..., 50001, 50001, 50001],\n","       [ 8577,    12,  1358, ..., 50001, 50001, 50001],\n","       [   27,    32,    45, ..., 50001, 50001, 50001],\n","       ...,\n","       [  144,   194,    59, ..., 50001, 50001, 50001],\n","       [  638,   281,     3, ..., 50001, 50001, 50001],\n","       [  243,   195,     4, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","       1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  321,     1,   636, ..., 50001, 50001, 50001],\n","       [ 1568,   112,    32, ..., 50001, 50001, 50001],\n","       [ 3875,   299,  2116, ..., 50001, 50001, 50001],\n","       ...,\n","       [  725,    50, 27317, ..., 50001, 50001, 50001],\n","       [   69,  1415,     0, ..., 50001, 50001, 50001],\n","       [   65,    19,  1167, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1,\n","       0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[   79,     7,   864, ..., 50001, 50001, 50001],\n","       [   65,    65,   143, ..., 50001, 50001, 50001],\n","       [   65,     8,   187, ..., 50001, 50001, 50001],\n","       ...,\n","       [  436,    14,   698, ..., 50001, 50001, 50001],\n","       [ 2379,     1,    57, ..., 50001, 50001, 50001],\n","       [  118,    10,   355, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[  449,  3543,     9, ..., 50001, 50001, 50001],\n","       [  106, 50001, 50001, ..., 50001, 50001, 50001],\n","       [    0,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4012,     1,   251, ..., 50001, 50001, 50001],\n","       [  314,   419,    43, ..., 50001, 50001, 50001],\n","       [ 2038,     8,  3565, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[  109,     1,  4453, ..., 50001, 50001, 50001],\n","       [  134,   921, 14330, ..., 50001, 50001, 50001],\n","       [  476,   212,  2010, ..., 50001, 50001, 50001],\n","       ...,\n","       [    3,     9,   138, ..., 50001, 50001, 50001],\n","       [29604,     8,   739, ..., 50001, 50001, 50001],\n","       [  989,    29,    13, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[  158,   176,   490, ..., 50001, 50001, 50001],\n","       [   27,   161,   174, ..., 50001, 50001, 50001],\n","       [   73,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  360,   230,  1149, ..., 50001, 50001, 50001],\n","       [ 6740,    62,    48, ..., 50001, 50001, 50001],\n","       [  173,     4,   243, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[  989,    12,    13, ..., 50001, 50001, 50001],\n","       [  165,   242,     3, ..., 50001, 50001, 50001],\n","       [   95,     3,   111, ..., 50001, 50001, 50001],\n","       ...,\n","       [  836,    14,    40, ..., 50001, 50001, 50001],\n","       [   32,    45,     7, ..., 50001, 50001, 50001],\n","       [  318,     9,  1600, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  962,    39,  5378, ..., 50001, 50001, 50001],\n","       [  896,   193,    13, ..., 50001, 50001, 50001],\n","       [  638,   281,  2685, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 6682,  4247,     0, ..., 50001, 50001, 50001],\n","       [  343,     9,   121, ..., 50001, 50001, 50001],\n","       [  115,     4, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[   87,    73,   811, ..., 50001, 50001, 50001],\n","       [ 6218, 50000,    17, ..., 50001, 50001, 50001],\n","       [  341,    39,   832, ..., 50001, 50001, 50001],\n","       ...,\n","       [  294,     3,  4980, ..., 50001, 50001, 50001],\n","       [  130,   114,    22, ..., 50001, 50001, 50001],\n","       [  146,   110,    71, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[ 1909,    33,    72, ..., 50001, 50001, 50001],\n","       [  962,   183,   106, ..., 50001, 50001, 50001],\n","       [ 2383, 50000,    73, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 7843,     8,  1246, ..., 50001, 50001, 50001],\n","       [  106,     7,  1050, ..., 50001, 50001, 50001],\n","       [ 8300,  3002,   224, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  103,     8,   511, ..., 50001, 50001, 50001],\n","       [  242,     3,     9, ..., 50001, 50001, 50001],\n","       [  173,   115,    52, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1914,    56,     9, ..., 50001, 50001, 50001],\n","       [ 2941,   515,     1, ..., 50001, 50001, 50001],\n","       [  346,     3,   122, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0,\n","       0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[    3,    11,    14, ..., 50001, 50001, 50001],\n","       [   64,    13,     5, ..., 50001, 50001, 50001],\n","       [   75,   164,    23, ..., 50001, 50001, 50001],\n","       ...,\n","       [   31,   108,     6, ..., 50001, 50001, 50001],\n","       [  337,     6,    51, ..., 50001, 50001, 50001],\n","       [ 2540, 10418, 10448, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,\n","       1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[   13,     2,    54, ..., 50001, 50001, 50001],\n","       [ 6964,     3,     9, ..., 50001, 50001, 50001],\n","       [    3,   238,    11, ..., 50001, 50001, 50001],\n","       ...,\n","       [16702,     1,   161, ..., 50001, 50001, 50001],\n","       [ 2887,    50,  2972, ..., 50001, 50001, 50001],\n","       [  656,    60,   243, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n","       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0,\n","       0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[   84,   104,    43, ..., 50001, 50001, 50001],\n","       [   43,   682,    69, ..., 50001, 50001, 50001],\n","       [   67,    34,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1021,    11, 50000, ..., 50001, 50001, 50001],\n","       [ 4398,   293,   425, ..., 50001, 50001, 50001],\n","       [    1,   129,   217, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[  341,    29,    13, ..., 50001, 50001, 50001],\n","       [ 1450,    14,  4792, ..., 50001, 50001, 50001],\n","       [  112,   389,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 8987, 10667,    21, ..., 50001, 50001, 50001],\n","       [  262,    12, 28765, ..., 50001, 50001, 50001],\n","       [  191,  1011,   882, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  173,   116,    71, ..., 50001, 50001, 50001],\n","       [ 1839,    37,   284, ..., 50001, 50001, 50001],\n","       [  130,   615,    21, ..., 50001, 50001, 50001],\n","       ...,\n","       [   48,  3346,  2009, ..., 50001, 50001, 50001],\n","       [ 2987,     0,     0, ..., 50001, 50001, 50001],\n","       [   35,    13,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,\n","       0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[   84,   104,   173, ..., 50001, 50001, 50001],\n","       [ 2732,     3,    13, ..., 50001, 50001, 50001],\n","       [ 2783,  2203,    50, ..., 50001, 50001, 50001],\n","       ...,\n","       [  115,    38,     0, ..., 50001, 50001, 50001],\n","       [  115,     5,    91, ..., 50001, 50001, 50001],\n","       [    1,   537,    11, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[  307,   619,    20, ..., 50001, 50001, 50001],\n","       [ 3108,    16,    33, ..., 50001, 50001, 50001],\n","       [  324,     1,    35, ..., 50001, 50001, 50001],\n","       ...,\n","       [  144,   104,   778, ..., 50001, 50001, 50001],\n","       [   65,     8,  9125, ..., 50001, 50001, 50001],\n","       [ 1745,   264,     8, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0], dtype=int32))\n","(array([[   48,  2135,    34, ..., 50001, 50001, 50001],\n","       [  495,   720,    16, ..., 50001, 50001, 50001],\n","       [ 1823,    66,   228, ..., 50001, 50001, 50001],\n","       ...,\n","       [  191,  1291, 17719, ..., 50001, 50001, 50001],\n","       [  850,  1412,     9, ..., 50001, 50001, 50001],\n","       [   79,     9,    23, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[   41,    27,   112, ..., 50001, 50001, 50001],\n","       [  209,   211,  3914, ..., 50001, 50001, 50001],\n","       [  385,   351,  1505, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5213, 14413,     8, ..., 50001, 50001, 50001],\n","       [  230,     1,    31, ..., 50001, 50001, 50001],\n","       [ 1011,   127,    33, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,\n","       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[   69,  2205,    51, ..., 50001, 50001, 50001],\n","       [11456, 11476,   104, ..., 50001, 50001, 50001],\n","       [   76,   160,   253, ..., 50001, 50001, 50001],\n","       ...,\n","       [  160, 11176,    56, ..., 50001, 50001, 50001],\n","       [   65,   293, 50001, ..., 50001, 50001, 50001],\n","       [  232,   232,  7638, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[ 2523,     2,  1454, ..., 50001, 50001, 50001],\n","       [   76,    32,    45, ..., 50001, 50001, 50001],\n","       [   36,   517,    14, ..., 50001, 50001, 50001],\n","       ...,\n","       [  464,     3,  5035, ..., 50001, 50001, 50001],\n","       [   48,   704,    16, ..., 50001, 50001, 50001],\n","       [20804,   750,  1543, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[   36,    91,    34, ..., 50001, 50001, 50001],\n","       [   41,    70,    54, ..., 50001, 50001, 50001],\n","       [ 1529,     0,    15, ..., 50001, 50001, 50001],\n","       ...,\n","       [  229,    61,     1, ..., 50001, 50001, 50001],\n","       [  107,   313,     0, ..., 50001, 50001, 50001],\n","       [    3,    21,    13, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[  216,     1, 13369, ..., 50001, 50001, 50001],\n","       [   27,    32,    45, ..., 50001, 50001, 50001],\n","       [  130,   560, 18469, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,    83,    13, ..., 50001, 50001, 50001],\n","       [  130,    69,     1, ..., 50001, 50001, 50001],\n","       [   36,    61,   662, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n","       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[ 1295,    17,  2131, ..., 50001, 50001, 50001],\n","       [  179,    18,     1, ..., 50001, 50001, 50001],\n","       [  583,  9798,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [  118,    10,    70, ..., 50001, 50001, 50001],\n","       [ 3789,  4749,   961, ..., 50001, 50001, 50001],\n","       [  127,   176,   182, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[  108,    14,  2032, ..., 50001, 50001, 50001],\n","       [  314,     0,     0, ..., 50001, 50001, 50001],\n","       [   61,     1,   251, ..., 50001, 50001, 50001],\n","       ...,\n","       [  158,    13,   427, ..., 50001, 50001, 50001],\n","       [  376,   180,    11, ..., 50001, 50001, 50001],\n","       [ 1280,    16,  1212, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[    3,  3898,     6, ..., 50001, 50001, 50001],\n","       [ 1362,    41,   750, ..., 50001, 50001, 50001],\n","       [  191,   106,    29, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,    10,   430, ..., 50001, 50001, 50001],\n","       [ 2480,    29,    23, ..., 50001, 50001, 50001],\n","       [  137,  5499,   154, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[  233,     1,   366, ..., 50001, 50001, 50001],\n","       [  103,    12, 23336, ..., 50001, 50001, 50001],\n","       [   61,    78,    98, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,   136,    69, ..., 50001, 50001, 50001],\n","       [ 5518, 50000, 50000, ..., 50001, 50001, 50001],\n","       [   25,    80,   780, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[  511,   316,     2, ..., 50001, 50001, 50001],\n","       [  130,   735,   711, ..., 50001, 50001, 50001],\n","       [ 5330,     8,  4754, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,    39,   144, ..., 50001, 50001, 50001],\n","       [18595,    11,  6528, ..., 50001, 50001, 50001],\n","       [   13,    58,  1125, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[  165,  3309,     1, ..., 50001, 50001, 50001],\n","       [11666,    41,   530, ..., 50001, 50001, 50001],\n","       [   70,   195,    98, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,   163,    10, ..., 50001, 50001, 50001],\n","       [   61,   662,   162, ..., 50001, 50001, 50001],\n","       [22732,    19,   534, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,\n","       1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], dtype=int32))\n","(array([[ 2811,    14,   196, ..., 50001, 50001, 50001],\n","       [  598,     6,    16, ..., 50001, 50001, 50001],\n","       [  109,     9,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2354, 50001, 50001, ..., 50001, 50001, 50001],\n","       [20315,     2,   603, ..., 50001, 50001, 50001],\n","       [  314,   102,    10, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[    1,   136,    58, ..., 50001, 50001, 50001],\n","       [  144,    35,     6, ..., 50001, 50001, 50001],\n","       [  106,     7,    22, ..., 50001, 50001, 50001],\n","       ...,\n","       [  349,    41,     3, ..., 50001, 50001, 50001],\n","       [ 1188, 15121,   394, ..., 50001, 50001, 50001],\n","       [  192,    21,   580, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[  192,  1372,    13, ..., 50001, 50001, 50001],\n","       [    3,    11,  2301, ..., 50001, 50001, 50001],\n","       [ 1504, 25898,   607, ..., 50001, 50001, 50001],\n","       ...,\n","       [  493,    47,   465, ..., 50001, 50001, 50001],\n","       [  741,    37,  6958, ..., 50001, 50001, 50001],\n","       [  558,    94,    18, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0,\n","       1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[   76,    33,   288, ..., 50001, 50001, 50001],\n","       [ 2119,   572,     2, ..., 50001, 50001, 50001],\n","       [  182,    17,    91, ..., 50001, 50001, 50001],\n","       ...,\n","       [   13,   156,   733, ..., 50001, 50001, 50001],\n","       [  153,    39,     3, ..., 50001, 50001, 50001],\n","       [  992,     9,  4848, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[11665,    12,  2741, ..., 50001, 50001, 50001],\n","       [  106,     2,    22, ..., 50001, 50001, 50001],\n","       [15045,  3711,  4257, ..., 50001, 50001, 50001],\n","       ...,\n","       [  153,    11,   220, ..., 50001, 50001, 50001],\n","       [  162,   565,   379, ..., 50001, 50001, 50001],\n","       [   48,    62,    18, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[  424,   104,    86, ..., 50001, 50001, 50001],\n","       [   27,   515,     0, ..., 50001, 50001, 50001],\n","       [   27,    32,    32, ..., 50001, 50001, 50001],\n","       ...,\n","       [  190, 18155,    10, ..., 50001, 50001, 50001],\n","       [ 3055,     0,     0, ..., 50001, 50001, 50001],\n","       [  134,  1349,   344, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1,\n","       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1,\n","       0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[ 1045,    13,    16, ..., 50001, 50001, 50001],\n","       [  171,     0,   171, ..., 50001, 50001, 50001],\n","       [   94,    18,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 7356,     7,  1111, ..., 50001, 50001, 50001],\n","       [ 4458,   332,   111, ..., 50001, 50001, 50001],\n","       [   26,     8,  4800, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n","       0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 3604,  1078,   187, ..., 50001, 50001, 50001],\n","       [ 2945,    26,     2, ..., 50001, 50001, 50001],\n","       [  878,  3450,   332, ..., 50001, 50001, 50001],\n","       ...,\n","       [  114,   433,     0, ..., 50001, 50001, 50001],\n","       [ 2412,    35,    13, ..., 50001, 50001, 50001],\n","       [ 2643, 11514,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1,\n","       0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  544, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  260,  3841,    14, ..., 50001, 50001, 50001],\n","       [  566,     7, 12215, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,   390,     5, ..., 50001, 50001, 50001],\n","       [ 4086,     9,     6, ..., 50001, 50001, 50001],\n","       [   36,  1099,    14, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0,\n","       1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[  694,  1675,    27, ..., 50001, 50001, 50001],\n","       [   83,    21,   973, ..., 50001, 50001, 50001],\n","       [  503,     4, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [27700,  3063,   774, ...,    65,   143,    19],\n","       [   97,   253, 50001, ..., 50001, 50001, 50001],\n","       [  403,    60,  1971, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0,\n","       1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[   94,    18,    13, ..., 50001, 50001, 50001],\n","       [  589,    11,    33, ..., 50001, 50001, 50001],\n","       [  108,   133,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [  222,   266,  7639, ..., 50001, 50001, 50001],\n","       [ 8394,     0,    15, ..., 50001, 50001, 50001],\n","       [   74,    32,    27, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[  207,   325,   994, ..., 50001, 50001, 50001],\n","       [  345,     8,    62, ..., 50001, 50001, 50001],\n","       [ 1450,    14, 12030, ..., 50001, 50001, 50001],\n","       ...,\n","       [  655,    12,  4531, ..., 50001, 50001, 50001],\n","       [   43,    71,    19, ..., 50001, 50001, 50001],\n","       [  257,     3,    11, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n","       1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[   70,   648,     8, ..., 50001, 50001, 50001],\n","       [50000,  7488,   342, ..., 50001, 50001, 50001],\n","       [10400,     2,   207, ..., 50001, 50001, 50001],\n","       ...,\n","       [   59,  1241,   166, ...,    78, 15886,  1241],\n","       [  144,     6,   236, ..., 50001, 50001, 50001],\n","       [ 2740,    11,   219, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 3025,     1,    83, ..., 50001, 50001, 50001],\n","       [ 1010,   103,    60, ..., 50001, 50001, 50001],\n","       [ 1890,    18,   140, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1718,    60,   512, ..., 50001, 50001, 50001],\n","       [  165,    76,   220, ..., 50001, 50001, 50001],\n","       [ 1030,  1168,    50, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[  428,  1196,   544, ..., 50001, 50001, 50001],\n","       [ 1772, 50000,  6686, ..., 50001, 50001, 50001],\n","       [  960, 50001, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  109,     1,  4013, ..., 50001, 50001, 50001],\n","       [  117, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  130,    13,   124, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[  583, 29199,   141, ..., 50001, 50001, 50001],\n","       [ 6890,    50,     8, ..., 50001, 50001, 50001],\n","       [   65,    91,    65, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1373,  2828,     6, ..., 50001, 50001, 50001],\n","       [ 2614,    29,  1144, ..., 50001, 50001, 50001],\n","       [  190,  7915, 23010, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,\n","       1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[  238,     1,     4, ..., 50001, 50001, 50001],\n","       [  704,    16,   115, ..., 50001, 50001, 50001],\n","       [ 1707,    68,  3882, ..., 50001, 50001, 50001],\n","       ...,\n","       [  416,    11,     2, ..., 50001, 50001, 50001],\n","       [  764,   171,   113, ..., 50001, 50001, 50001],\n","       [   41,   165,  3602, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  337,     9,     2, ..., 50001, 50001, 50001],\n","       [ 1473,   524, 50000, ..., 50001, 50001, 50001],\n","       [  174,   209,  2086, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1785,    23,     2, ..., 50001, 50001, 50001],\n","       [  207,     2,  1066, ..., 50001, 50001, 50001],\n","       [ 1807,    11,   923, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1,\n","       0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[  882,    10,   109, ..., 50001, 50001, 50001],\n","       [  426,    11,   230, ..., 50001, 50001, 50001],\n","       [  242,   553,  1362, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 4118,  8762,    62, ..., 50001, 50001, 50001],\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       [   48,    13,     2, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[ 6792,  1644,   264, ..., 50001, 50001, 50001],\n","       [  221,  1939,   193, ..., 50001, 50001, 50001],\n","       [ 3081,    46,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [  139,    98,    20, ..., 50001, 50001, 50001],\n","       [  106,    23,    44, ..., 50001, 50001, 50001],\n","       [ 2428,   120,   637, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n","       0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[   36,   731,  2824, ..., 50001, 50001, 50001],\n","       [   48,   242,    42, ..., 50001, 50001, 50001],\n","       [  279,   114,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [  182,   115,    44, ..., 50001, 50001, 50001],\n","       [  176,   176,   127, ..., 50001, 50001, 50001],\n","       [    1,    83,    36, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[  118,    12,   508, ..., 50001, 50001, 50001],\n","       [  191,   146,   114, ..., 50001, 50001, 50001],\n","       [   94,     9,   152, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 9893,  2948,    12, ..., 50001, 50001, 50001],\n","       [  130,   123,   543, ..., 50001, 50001, 50001],\n","       [17685,   193,   181, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[ 3679,     9,   392, ..., 50001, 50001, 50001],\n","       [  388,  3279,   921, ..., 50001, 50001, 50001],\n","       [   79,    37,    64, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 2950,    17,  3306, ..., 50001, 50001, 50001],\n","       [  253,     6,     5, ..., 50001, 50001, 50001],\n","       [ 1022,    23,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1,\n","       1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0,\n","       1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], dtype=int32))\n","(array([[  466,    14,  7256, ..., 50001, 50001, 50001],\n","       [50000, 50000, 50000, ..., 50001, 50001, 50001],\n","       [  927,    21,  1900, ..., 50001, 50001, 50001],\n","       ...,\n","       [  696,    18,   218, ..., 50001, 50001, 50001],\n","       [   27,   163,    60, ..., 50001, 50001, 50001],\n","       [  191,   115,    28, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1,\n","       0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[ 2293,    11,   558, ..., 50001, 50001, 50001],\n","       [ 1800,   190,  9952, ..., 50001, 50001, 50001],\n","       [  185,     6,    51, ..., 50001, 50001, 50001],\n","       ...,\n","       [15569,    23,     2, ..., 50001, 50001, 50001],\n","       [ 1655,    16, 12546, ..., 50001, 50001, 50001],\n","       [   67,     9,    95, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[   13,    58,  3284, ..., 50001, 50001, 50001],\n","       [ 3034,   221,  1761, ..., 50001, 50001, 50001],\n","       [  146,    43,    38, ..., 50001, 50001, 50001],\n","       ...,\n","       [  476,   801,   212, ..., 50001, 50001, 50001],\n","       [   31,  1207,     6, ..., 50001, 50001, 50001],\n","       [50000,     1,     9, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1,\n","       1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[    3,    11,   128, ..., 50001, 50001, 50001],\n","       [  298,    45,    66, ..., 50001, 50001, 50001],\n","       [50000,    34, 50000, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3226,   173,    35, ..., 50001, 50001, 50001],\n","       [  179,  7458,   405, ..., 50001, 50001, 50001],\n","       [  176,   176,    31, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1,\n","       0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[ 1218,    36,   535, ..., 50001, 50001, 50001],\n","       [  100,   348,    31, ..., 50001, 50001, 50001],\n","       [   41,  1097,  1594, ..., 50001, 50001, 50001],\n","       ...,\n","       [  102,     1,    86, ..., 50001, 50001, 50001],\n","       [   76,  1470,    33, ..., 50001, 50001, 50001],\n","       [  259,  2178,     7, ...,  1075,   407, 10850]], dtype=int32), array([1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 7881, 50000,  4835, ..., 50001, 50001, 50001],\n","       [31061,    43,    38, ..., 50001, 50001, 50001],\n","       [    3,     4,    13, ..., 50001, 50001, 50001],\n","       ...,\n","       [  247,   540,    17, ..., 50001, 50001, 50001],\n","       [ 1224,     1, 44488, ..., 50001, 50001, 50001],\n","       [    1,   103,     8, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n","       1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0,\n","       1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[  127,    13,     5, ..., 50001, 50001, 50001],\n","       [   13,   125,  2175, ..., 50001, 50001, 50001],\n","       [  232, 50001, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  982,    29,    25, ..., 50001, 50001, 50001],\n","       [  385,   186,   125, ..., 50001, 50001, 50001],\n","       [  196,   680,    50, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,\n","       0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n","       0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[  319,    27,    32, ..., 50001, 50001, 50001],\n","       [   48,    43,  6040, ..., 50001, 50001, 50001],\n","       [ 1555,   725,    92, ..., 50001, 50001, 50001],\n","       ...,\n","       [  191,     1,     3, ..., 50001, 50001, 50001],\n","       [    3,   101,   156, ..., 50001, 50001, 50001],\n","       [ 1785,    22,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[  139,    61,     1, ..., 50001, 50001, 50001],\n","       [11588,  1426,     2, ..., 50001, 50001, 50001],\n","       [   70,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1008,   943,    25, ...,     1,   755,     0],\n","       [  104,    61,    55, ..., 50001, 50001, 50001],\n","       [ 2572,   138,   665, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n","       1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0,\n","       1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0,\n","       1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[  397,    34,    39, ..., 50001, 50001, 50001],\n","       [    1,     3,  1743, ..., 50001, 50001, 50001],\n","       [   25,    41,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [11845, 50000, 43686, ..., 50001, 50001, 50001],\n","       [14143, 25851,   246, ..., 50001, 50001, 50001],\n","       [  770,     6,     5, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], dtype=int32))\n","(array([[  252,   106,     2, ..., 50001, 50001, 50001],\n","       [ 2227,    60,   697, ..., 50001, 50001, 50001],\n","       [  479,    51,   134, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,  2330,     8, ..., 50001, 50001, 50001],\n","       [ 2298,     0,    15, ..., 50001, 50001, 50001],\n","       [50000,    18,   111, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n","       1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1,\n","       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[   13,     5,   193, ..., 50001, 50001, 50001],\n","       [ 2557, 21843,  3081, ..., 50001, 50001, 50001],\n","       [    1,     3,    14, ..., 50001, 50001, 50001],\n","       ...,\n","       [    1,     0,    15, ..., 50001, 50001, 50001],\n","       [  118,    39, 26070, ..., 50001, 50001, 50001],\n","       [  781,   749,    20, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[15683, 11864,    10, ..., 50001, 50001, 50001],\n","       [  397,    34,    39, ..., 50001, 50001, 50001],\n","       [ 2077, 50001, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  487,     1,  1675, ..., 50001, 50001, 50001],\n","       [  227,   247,   540, ..., 50001, 50001, 50001],\n","       [  253,  9148,    68, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1,\n","       1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  397,    34,    39, ..., 50001, 50001, 50001],\n","       [   48,    65,     4, ..., 50001, 50001, 50001],\n","       [  476,   212,    36, ..., 50001, 50001, 50001],\n","       ...,\n","       [    4,    95,   326, ..., 50001, 50001, 50001],\n","       [  385,  1788,     1, ...,   197,   142,   385],\n","       [  187,    63,    90, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  289,   607,    91, ..., 50001, 50001, 50001],\n","       [ 5495,    74,     0, ..., 50001, 50001, 50001],\n","       [  632,     0,     0, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,     1,    31, ...,    80,     0, 50001],\n","       [ 7427,    26,  1354, ..., 50001, 50001, 50001],\n","       [13725,    39,    13, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0], dtype=int32))\n","(array([[  990, 50001, 50001, ..., 50001, 50001, 50001],\n","       [ 1488,     7,    70, ..., 50001, 50001, 50001],\n","       [ 7511,  2202,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [   69,   624,  3269, ..., 50001, 50001, 50001],\n","       [ 1479,     2,  6871, ..., 50001, 50001, 50001],\n","       [ 2676,  2501,   974, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,\n","       1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1], dtype=int32))\n","(array([[  314,   110,   347, ..., 50001, 50001, 50001],\n","       [ 1013,    13,    16, ..., 50001, 50001, 50001],\n","       [  830,   417, 50001, ..., 50001, 50001, 50001],\n","       ...,\n","       [  704,    16,   115, ..., 50001, 50001, 50001],\n","       [  112,   163,    96, ..., 50001, 50001, 50001],\n","       [    6,     5,    88, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n","       1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0,\n","       0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[50000,     8,     3, ..., 50001, 50001, 50001],\n","       [  314,   130,   114, ..., 50001, 50001, 50001],\n","       [  602,  4707,    21, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,   285,  6636, ..., 50001, 50001, 50001],\n","       [  252,    27,   134, ..., 50001, 50001, 50001],\n","       [   94,     9,  1231, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1,\n","       0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0], dtype=int32))\n","(array([[ 1326,     6,     5, ..., 50001, 50001, 50001],\n","       [ 1541,     1,   370, ..., 50001, 50001, 50001],\n","       [13601,   224,  8364, ..., 50001, 50001, 50001],\n","       ...,\n","       [  191,   419,   802, ..., 50001, 50001, 50001],\n","       [  206,   109,   625, ..., 50001, 50001, 50001],\n","       [  102,    12,   815, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,\n","       1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,\n","       0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[  146,  1915,  2255, ..., 50001, 50001, 50001],\n","       [   43,    16, 35904, ..., 50001, 50001, 50001],\n","       [   79,     2,  1061, ..., 50001, 50001, 50001],\n","       ...,\n","       [   83,    34,   851, ..., 50001, 50001, 50001],\n","       [  465,    14,   483, ..., 50001, 50001, 50001],\n","       [ 6429,    89, 14096, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1,\n","       0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1,\n","       1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1,\n","       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1,\n","       1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0], dtype=int32))\n","(array([[  138,    11,    27, ..., 50001, 50001, 50001],\n","       [  953,    19, 50001, ..., 50001, 50001, 50001],\n","       [  272,    12,    64, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1297,  1234,   285, ..., 50001, 50001, 50001],\n","       [  104,  1232,    38, ..., 50001, 50001, 50001],\n","       [ 1139,   208,   208, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0,\n","       1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[   27,   161,   220, ..., 50001, 50001, 50001],\n","       [  171,    68,   174, ..., 50001, 50001, 50001],\n","       [   69,   258,    16, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1010,   975,   820, ..., 50001, 50001, 50001],\n","       [ 9907, 17488,     2, ..., 50001, 50001, 50001],\n","       [  146,   114,    22, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1,\n","       1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,\n","       1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1,\n","       0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1], dtype=int32))\n","(array([[   36,  1928,     6, ..., 50001, 50001, 50001],\n","       [50000,     8, 20616, ..., 50001, 50001, 50001],\n","       [  747,    18,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1016,  4186,  1513, ..., 50001, 50001, 50001],\n","       [  530,  1886,   425, ..., 50001, 50001, 50001],\n","       [ 5540,  5541,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,\n","       1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  139,    97,     0, ..., 50001, 50001, 50001],\n","       [  527,   872,     2, ..., 50001, 50001, 50001],\n","       [  223,   370,    75, ..., 50001, 50001, 50001],\n","       ...,\n","       [  317,   636,   180, ..., 50001, 50001, 50001],\n","       [ 2534,  1157,    22, ..., 50001, 50001, 50001],\n","       [  153,    95,    89, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0,\n","       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0,\n","       1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], dtype=int32))\n","(array([[   73,    70,    40, ..., 50001, 50001, 50001],\n","       [   82, 50001, 50001, ..., 50001, 50001, 50001],\n","       [   94,    18,     8, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,    68,    69, ..., 50001, 50001, 50001],\n","       [   59,    70,     3, ..., 50001, 50001, 50001],\n","       [  259,    18,   351, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0,\n","       1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,\n","       0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], dtype=int32))\n","(array([[  573,     3,    70, ..., 50001, 50001, 50001],\n","       [  272,   656,    12, ..., 50001, 50001, 50001],\n","       [50000,    46,    10, ...,    77,     4,     0],\n","       ...,\n","       [50000,     1,    44, ..., 50001, 50001, 50001],\n","       [   67,     9,   735, ..., 50001, 50001, 50001],\n","       [ 3068,     6,   236, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0,\n","       1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,\n","       0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0,\n","       0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[   98,  1692,   139, ..., 50001, 50001, 50001],\n","       [   13,     5,    26, ..., 50001, 50001, 50001],\n","       [  272,    12,   609, ..., 50001, 50001, 50001],\n","       ...,\n","       [  165,  1510,  2106, ..., 50001, 50001, 50001],\n","       [   95,   332,     2, ..., 50001, 50001, 50001],\n","       [15825,    19,  1741, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,\n","       1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,\n","       0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[  254,   110,    72, ..., 50001, 50001, 50001],\n","       [  199,   267,     5, ..., 50001, 50001, 50001],\n","       [  462,    46,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3355,     9,    31, ..., 50001, 50001, 50001],\n","       [   31,  1031,   519, ..., 50001, 50001, 50001],\n","       [  942,    73,   658, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0,\n","       0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1,\n","       0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1], dtype=int32))\n","(array([[ 1973,   130,     4, ..., 50001, 50001, 50001],\n","       [  259,    18,     1, ..., 50001, 50001, 50001],\n","       [ 3032,    27,   560, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5920,    29,     1, ..., 50001, 50001, 50001],\n","       [ 6859,   319,  9328, ..., 50001, 50001, 50001],\n","       [  134,   117, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0,\n","       0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[  603,     9,   206, ..., 50001, 50001, 50001],\n","       [  532,  9710,     1, ..., 50001, 50001, 50001],\n","       [  673,    98,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1417,    95,     3, ..., 50001, 50001, 50001],\n","       [  874,    34,    63, ..., 50001, 50001, 50001],\n","       [  658,  1130,     3, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1,\n","       1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0,\n","       0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1,\n","       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0,\n","       0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1], dtype=int32))\n","(array([[ 1736,     7,   585, ..., 50001, 50001, 50001],\n","       [   27,    27,    27, ..., 50001, 50001, 50001],\n","       [   99,    29,     6, ..., 50001, 50001, 50001],\n","       ...,\n","       [17799,    94,    18, ..., 50001, 50001, 50001],\n","       [   48,   353,     6, ..., 50001, 50001, 50001],\n","       [ 5195,     3,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0,\n","       0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,\n","       1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  103,    10,  8141, ..., 50001, 50001, 50001],\n","       [   27,    45,    66, ..., 50001, 50001, 50001],\n","       [  206,    61,    75, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1503,    28,     4, ..., 50001, 50001, 50001],\n","       [ 3294, 50001, 50001, ..., 50001, 50001, 50001],\n","       [   31,  1692,    55, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[  699,    69,    12, ..., 50001, 50001, 50001],\n","       [   98,   123,    68, ..., 50001, 50001, 50001],\n","       [   70,     3,    36, ..., 50001, 50001, 50001],\n","       ...,\n","       [  382,   979,     6, ..., 50001, 50001, 50001],\n","       [  275,     1,   147, ..., 50001, 50001, 50001],\n","       [ 1074,  2899,    42, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0,\n","       1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0,\n","       0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], dtype=int32))\n","(array([[ 2800,  1511,   116, ..., 50001, 50001, 50001],\n","       [   69,  1769,    11, ..., 50001, 50001, 50001],\n","       [   43,    28,    71, ..., 50001, 50001, 50001],\n","       ...,\n","       [11149,    37,   750, ..., 50001, 50001, 50001],\n","       [25736,   134,   588, ..., 50001, 50001, 50001],\n","       [ 1744,     6,   124, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0,\n","       0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1], dtype=int32))\n","(array([[10047,  2041,     2, ..., 50001, 50001, 50001],\n","       [ 1373,   109,    10, ..., 50001, 50001, 50001],\n","       [  699,    69,    10, ..., 50001, 50001, 50001],\n","       ...,\n","       [  926,    12,    13, ..., 50001, 50001, 50001],\n","       [  193,    13,     5, ..., 50001, 50001, 50001],\n","       [  955,    24, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1,\n","       0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1,\n","       1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1], dtype=int32))\n","(array([[  672,     0,     0, ..., 50001, 50001, 50001],\n","       [  158,     0,   551, ..., 50001, 50001, 50001],\n","       [  551,     6,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5561,  3559,     1, ..., 50001, 50001, 50001],\n","       [ 1957,   183,    76, ..., 50001, 50001, 50001],\n","       [ 1531,  1398,   170, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1,\n","       0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0,\n","       0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1,\n","       0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1,\n","       0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], dtype=int32))\n","(array([[ 1723,    29,    22, ..., 50001, 50001, 50001],\n","       [  173,     4,   173, ..., 50001, 50001, 50001],\n","       [ 1521,   200,   272, ..., 50001, 50001, 50001],\n","       ...,\n","       [  784,    18,    10, ..., 50001, 50001, 50001],\n","       [   70,  1587,   317, ..., 50001, 50001, 50001],\n","       [  165,    76,  2672, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], dtype=int32))\n","(array([[  621,    26, 13829, ..., 50001, 50001, 50001],\n","       [ 5495,  5625,   450, ..., 50001, 50001, 50001],\n","       [ 1288,     7,    22, ..., 50001, 50001, 50001],\n","       ...,\n","       [    3,   115,    28, ..., 50001, 50001, 50001],\n","       [ 3607,   279,    61, ..., 50001, 50001, 50001],\n","       [  213,    11,   135, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,\n","       1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1,\n","       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n","       1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0,\n","       0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0], dtype=int32))\n","(array([[   48,   115,    38, ..., 50001, 50001, 50001],\n","       [   25,    55,    71, ..., 50001, 50001, 50001],\n","       [  117,     3, 13871, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 5738,   103,     3, ..., 50001, 50001, 50001],\n","       [  191,    27,    32, ..., 50001, 50001, 50001],\n","       [  573,    34,  2915, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,\n","       0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0,\n","       0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1,\n","       1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[ 2706,    20,    53, ..., 50001, 50001, 50001],\n","       [ 3567,     0,  1914, ..., 50001, 50001, 50001],\n","       [   70,    54,  1068, ..., 50001, 50001, 50001],\n","       ...,\n","       [   94,     9,   152, ..., 50001, 50001, 50001],\n","       [ 3060,   840,    10, ..., 50001, 50001, 50001],\n","       [  320,     3,    37, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,\n","       1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n","       0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1,\n","       1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0,\n","       0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1,\n","       0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], dtype=int32))\n","(array([[ 6890,    17,  6636, ..., 50001, 50001, 50001],\n","       [  210,    47,    31, ..., 50001, 50001, 50001],\n","       [   36,    64,   201, ..., 50001, 50001, 50001],\n","       ...,\n","       [   27,    32,    27, ..., 50001, 50001, 50001],\n","       [10975, 26026,    37, ..., 50001, 50001, 50001],\n","       [ 6237,     8,   103, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1,\n","       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0,\n","       1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n","       1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[ 3851,    33,    38, ..., 50001, 50001, 50001],\n","       [ 1008,     3,    58, ..., 50001, 50001, 50001],\n","       [ 2013,    96,   556, ..., 50001, 50001, 50001],\n","       ...,\n","       [  190,  3652, 15606, ..., 50001, 50001, 50001],\n","       [  107,  4278,    24, ..., 50001, 50001, 50001],\n","       [41321,     8, 50000, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,\n","       0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[   61,     6,     5, ..., 50001, 50001, 50001],\n","       [  257,   212,    94, ..., 50001, 50001, 50001],\n","       [    3,     9,    25, ..., 50001, 50001, 50001],\n","       ...,\n","       [  165,    98,     9, ..., 50001, 50001, 50001],\n","       [  139,    48,  1754, ..., 50001, 50001, 50001],\n","       [  240,   183,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0,\n","       1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,\n","       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], dtype=int32))\n","(array([[  314,   173,   260, ..., 50001, 50001, 50001],\n","       [ 2561,    11,   597, ..., 50001, 50001, 50001],\n","       [    1,     3,     9, ..., 50001, 50001, 50001],\n","       ...,\n","       [  106,   886,    19, ..., 50001, 50001, 50001],\n","       [ 2381,    21,     6, ...,    80, 50001, 50001],\n","       [  272,    11,   119, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,\n","       1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,\n","       1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,\n","       1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[ 1373,    99,    29, ..., 50001, 50001, 50001],\n","       [  835,   757,   410, ..., 50001, 50001, 50001],\n","       [  329,    13,     2, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,  1097,   654, ..., 50001, 50001, 50001],\n","       [ 2028,     3,    25, ..., 50001, 50001, 50001],\n","       [ 1923,   285,    97, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1,\n","       0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,\n","       1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], dtype=int32))\n","(array([[  585,    43,    16, ..., 50001, 50001, 50001],\n","       [ 2563,    16,  1246, ..., 50001, 50001, 50001],\n","       [ 4956,     8,   174, ..., 50001, 50001, 50001],\n","       ...,\n","       [  108,     6,     5, ..., 50001, 50001, 50001],\n","       [19378,   192,     8, ..., 50001, 50001, 50001],\n","       [  112,   488,   862, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0,\n","       0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0,\n","       1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1,\n","       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0,\n","       0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1,\n","       1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0], dtype=int32))\n","(array([[16199,  1163,  3227, ..., 50001, 50001, 50001],\n","       [   84,   104,   114, ..., 50001, 50001, 50001],\n","       [11238,    29,  2161, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 3623, 11333,    67, ..., 50001, 50001, 50001],\n","       [ 1246,   238,    50, ..., 50001, 50001, 50001],\n","       [    3,    37,     2, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n","       1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0,\n","       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1,\n","       0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0,\n","       1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], dtype=int32))\n","(array([[  115,    38,     0, ..., 50001, 50001, 50001],\n","       [ 4468,    34,    63, ..., 50001, 50001, 50001],\n","       [   48,    48,   240, ..., 50001, 50001, 50001],\n","       ...,\n","       [  153,    27,    32, ..., 50001, 50001, 50001],\n","       [   36,  3887,  1838, ..., 50001, 50001, 50001],\n","       [  422,    40,    29, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1,\n","       0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0,\n","       0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0,\n","       1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1,\n","       1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], dtype=int32))\n","(array([[ 1029,     0,    15, ..., 50001, 50001, 50001],\n","       [   70,    16,   109, ..., 50001, 50001, 50001],\n","       [  179,    18,  1727, ..., 50001, 50001, 50001],\n","       ...,\n","       [  141,    65,    99, ..., 50001, 50001, 50001],\n","       [   69,     1,    31, ..., 50001, 50001, 50001],\n","       [  740,    19, 50001, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n","       1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0,\n","       0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,\n","       0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], dtype=int32))\n","(array([[  110,    16,    33, ..., 50001, 50001, 50001],\n","       [50000,   209,  7344, ..., 50001, 50001, 50001],\n","       [   36,    43,     4, ..., 50001, 50001, 50001],\n","       ...,\n","       [ 1950,    87,    18, ..., 50001, 50001, 50001],\n","       [ 1209,    50,  1045, ..., 50001, 50001, 50001],\n","       [ 2861,    93,     1, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0,\n","       0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,\n","       0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1,\n","       0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1,\n","       1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1,\n","       0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[  374,    14,   478, ..., 50001, 50001, 50001],\n","       [  166,   203,     5, ..., 50001, 50001, 50001],\n","       [   13,     2,   231, ..., 50001, 50001, 50001],\n","       ...,\n","       [50000,     1,  6159, ..., 50001, 50001, 50001],\n","       [  221,  2336, 17608, ..., 50001, 50001, 50001],\n","       [  144,     6,    20, ..., 50001, 50001, 50001]], dtype=int32), array([1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,\n","       0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,\n","       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0,\n","       1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1], dtype=int32))\n","(array([[ 2387, 50000,    69, ..., 50001, 50001, 50001],\n","       [ 1095, 50001, 50001, ..., 50001, 50001, 50001],\n","       [  360,     9,   600, ..., 50001, 50001, 50001],\n","       ...,\n","       [   32,    45,    23, ..., 50001, 50001, 50001],\n","       [22457,   456,    87, ..., 50001, 50001, 50001],\n","       [26050,     0,     0, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,\n","       1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1,\n","       1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1,\n","       0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,\n","       1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1], dtype=int32))\n","(array([[  532,  1021,     1, ..., 50001, 50001, 50001],\n","       [ 6050,    48,    64, ..., 50001, 50001, 50001],\n","       [   26,   486,    12, ..., 50001, 50001, 50001],\n","       ...,\n","       [   41,     0,    15, ..., 50001, 50001, 50001],\n","       [  107,    73,   934, ..., 50001, 50001, 50001],\n","       [ 1042,     8,  5616, ..., 50001, 50001, 50001]], dtype=int32), array([0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1,\n","       0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,\n","       0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1,\n","       0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1,\n","       0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0], dtype=int32))\n","(array([[ 1249,   247,    29, ..., 50001, 50001, 50001],\n","       [    3,     9,    97, ..., 50001, 50001, 50001],\n","       [  654,     1,    31, ..., 50001, 50001, 50001],\n","       ...,\n","       [  137,    11,   495, ..., 50001, 50001, 50001],\n","       [  598,     6,     5, ..., 50001, 50001, 50001],\n","       [  106,     7,    23, ..., 50001, 50001, 50001]], dtype=int32), array([0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,\n","       0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n","       0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1,\n","       1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,\n","       1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,\n","       1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0], dtype=int32))\n","(array([[   41,   107,   358, ..., 50001, 50001, 50001],\n","       [ 2555,    68,   208, ..., 50001, 50001, 50001],\n","       [  346,   101,     5, ..., 50001, 50001, 50001],\n","       ...,\n","       [   26,     7,   952, ..., 50001, 50001, 50001],\n","       [  247,    26,    16, ..., 50001, 50001, 50001],\n","       [24172,    17,   474, ..., 50001, 50001, 50001]], dtype=int32), array([1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1,\n","       1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1,\n","       1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1,\n","       0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1,\n","       1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,\n","       1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1], dtype=int32))\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"preH1SHhD2D_","executionInfo":{"status":"ok","timestamp":1626434697538,"user_tz":-540,"elapsed":255,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"63c53b74-4cb6-4ef6-d893-c79d1ff14ee8"},"source":["get_batch[0][0].shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(128, 69)"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A-tHBloKB8zi","executionInfo":{"status":"ok","timestamp":1626434968346,"user_tz":-540,"elapsed":1945,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"95c98b97-a47f-4529-d23d-7ec0bfef25f4"},"source":["input = np.array([list(range(100))]).astype(np.int32)\n","\n","times = []\n","for t in range(10):\n","    tick = time.time()\n","    for n in range(1):\n","        _ = wordEmbeddingTuner.model(get_batch[0][0])\n","    times.append(time.time() - tick)\n","print(sum(times) / len(times))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0.1687422513961792\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Il9flwyqyY1L","executionInfo":{"status":"ok","timestamp":1626952660207,"user_tz":-540,"elapsed":303,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"eaa6f1c2-e891-4f3e-d129-9e87fa12c007"},"source":["class A:\n","    def __init__(self, a):\n","        self.a = a\n","        aa = self.AA(self.p)\n","        self.f(self.p)\n","\n","    def f(self, func):\n","        func()\n","\n","    def p(self):\n","        print('this is pre-defined')\n","\n","    class AA:\n","        def __init__(self, f):\n","            f()\n","\n","class B(A):\n","    def __init__(self):\n","        super().__init__(4)\n","\n","    def p(self):\n","        print('this is modified after')\n","\n","b = B()"],"execution_count":48,"outputs":[{"output_type":"stream","text":["this is modified after\n","this is modified after\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GXUldhD1L9Bb","executionInfo":{"status":"ok","timestamp":1626422003500,"user_tz":-540,"elapsed":24,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"0c74ec6b-5b24-4891-f360-6dfd37ddde0c"},"source":["wordEmbeddingTuner.make_input([['안녕','하세요', 'ㅋㅅㅋ'],['ㅇ']], [2, 3])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[ 3068., 50000., 50000.],\n","        [ 1191., 50001., 50001.]], dtype=float32),\n"," array([2., 3.], dtype=float32))"]},"metadata":{"tags":[]},"execution_count":57}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8WsfP4Ho5Dv3","executionInfo":{"status":"ok","timestamp":1626419697760,"user_tz":-540,"elapsed":617,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"bf64ac75-e33e-46a7-8073-d6b80ae5e96a"},"source":["wordEmbeddingTuner.model(np.array([list(range(123))]))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(1, 2), dtype=float32, numpy=array([[0.04330495, 0.16677631]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AJbIMhm82tnE","executionInfo":{"status":"ok","timestamp":1626419667383,"user_tz":-540,"elapsed":267,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"30c37472-16dc-4ed6-dde1-20067f879ad5"},"source":["wordEmbeddingTuner.model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, None)]       0                                            \n","__________________________________________________________________________________________________\n","embedding (Embedding)           (None, None, 100)    35804500    input_1[0][0]                    \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, None, 100)    0           embedding[0][0]                  \n","__________________________________________________________________________________________________\n","bidirectional (Bidirectional)   (None, None, 100)    160800      dropout[0][0]                    \n","__________________________________________________________________________________________________\n","H (Dense)                       (None, None, 256)    25856       bidirectional[0][0]              \n","__________________________________________________________________________________________________\n","dense (Dense)                   (None, None, 1)      257         H[0][0]                          \n","__________________________________________________________________________________________________\n","tf.compat.v1.transpose (TFOpLam (None, 256, None)    0           H[0][0]                          \n","__________________________________________________________________________________________________\n","attention_score (Softmax)       (None, None, 1)      0           dense[0][0]                      \n","__________________________________________________________________________________________________\n","tf.linalg.matmul (TFOpLambda)   (None, 256, 1)       0           tf.compat.v1.transpose[0][0]     \n","                                                                 attention_score[0][0]            \n","__________________________________________________________________________________________________\n","tf.compat.v1.squeeze (TFOpLambd (None, 256)          0           tf.linalg.matmul[0][0]           \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 256)          0           tf.compat.v1.squeeze[0][0]       \n","__________________________________________________________________________________________________\n","dense_1 (Dense)                 (None, 512)          131584      dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 512)          0           dense_1[0][0]                    \n","__________________________________________________________________________________________________\n","dense_2 (Dense)                 (None, 2)            1026        dropout_2[0][0]                  \n","==================================================================================================\n","Total params: 36,124,023\n","Trainable params: 36,124,023\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"id":"6r1_E7h_WU7a","executionInfo":{"status":"ok","timestamp":1626419674558,"user_tz":-540,"elapsed":942,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"ef32665b-cac4-43e3-d665-f00027074d59"},"source":["k.utils.plot_model(wordEmbeddingTuner.model, show_shapes=True, dpi=64)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W2tWvWYUF4xB","executionInfo":{"status":"ok","timestamp":1626435547168,"user_tz":-540,"elapsed":95779,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"2ba5be60-67d4-4e91-d353-da588eee5423"},"source":["!pip uninstall -y tensorflow\n","!pip install tensorflow-gpu==1.13.1"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Uninstalling tensorflow-2.5.0:\n","  Successfully uninstalled tensorflow-2.5.0\n","Collecting tensorflow-gpu==1.13.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/2c/65/8dc8fc4a263a24f7ad935b72ad35e72ba381cb9e175b6a5fe086c85f17a7/tensorflow_gpu-1.13.1-cp37-cp37m-manylinux1_x86_64.whl (345.0MB)\n","\u001b[K     |████████████████████████████████| 345.0MB 28kB/s \n","\u001b[?25hCollecting tensorboard<1.14.0,>=1.13.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/0f/39/bdd75b08a6fba41f098b6cb091b9e8c7a80e1b4d679a581a0ccd17b10373/tensorboard-1.13.1-py3-none-any.whl (3.2MB)\n","\u001b[K     |████████████████████████████████| 3.2MB 46.4MB/s \n","\u001b[?25hCollecting tensorflow-estimator<1.14.0rc0,>=1.13.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/bb/48/13f49fc3fa0fdf916aa1419013bb8f2ad09674c275b4046d5ee669a46873/tensorflow_estimator-1.13.0-py2.py3-none-any.whl (367kB)\n","\u001b[K     |████████████████████████████████| 368kB 52.3MB/s \n","\u001b[?25hRequirement already satisfied: absl-py>=0.1.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (0.12.0)\n","Requirement already satisfied: six>=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (1.15.0)\n","Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (1.34.1)\n","Requirement already satisfied: gast>=0.2.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (0.4.0)\n","Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (1.1.2)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (1.19.5)\n","Requirement already satisfied: protobuf>=3.6.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (3.17.3)\n","Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (1.1.0)\n","Collecting keras-applications>=1.0.6\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/71/e3/19762fdfc62877ae9102edf6342d71b28fbfd9dea3d2f96a882ce099b03f/Keras_Applications-1.0.8-py3-none-any.whl (50kB)\n","\u001b[K     |████████████████████████████████| 51kB 8.0MB/s \n","\u001b[?25hRequirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (0.36.2)\n","Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-gpu==1.13.1) (0.8.1)\n","Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard<1.14.0,>=1.13.0->tensorflow-gpu==1.13.1) (1.0.1)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard<1.14.0,>=1.13.0->tensorflow-gpu==1.13.1) (3.3.4)\n","Collecting mock>=2.0.0\n","  Downloading https://files.pythonhosted.org/packages/5c/03/b7e605db4a57c0f6fba744b11ef3ddf4ddebcada35022927a2b5fc623fdf/mock-4.0.3-py3-none-any.whl\n","Requirement already satisfied: h5py in /usr/local/lib/python3.7/dist-packages (from keras-applications>=1.0.6->tensorflow-gpu==1.13.1) (3.1.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard<1.14.0,>=1.13.0->tensorflow-gpu==1.13.1) (4.6.1)\n","Requirement already satisfied: cached-property; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from h5py->keras-applications>=1.0.6->tensorflow-gpu==1.13.1) (1.5.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard<1.14.0,>=1.13.0->tensorflow-gpu==1.13.1) (3.5.0)\n","Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->markdown>=2.6.8->tensorboard<1.14.0,>=1.13.0->tensorflow-gpu==1.13.1) (3.7.4.3)\n","Installing collected packages: tensorboard, mock, tensorflow-estimator, keras-applications, tensorflow-gpu\n","  Found existing installation: tensorboard 2.5.0\n","    Uninstalling tensorboard-2.5.0:\n","      Successfully uninstalled tensorboard-2.5.0\n","  Found existing installation: tensorflow-estimator 2.5.0\n","    Uninstalling tensorflow-estimator-2.5.0:\n","      Successfully uninstalled tensorflow-estimator-2.5.0\n","Successfully installed keras-applications-1.0.8 mock-4.0.3 tensorboard-1.13.1 tensorflow-estimator-1.13.0 tensorflow-gpu-1.13.1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N70WD3XMHHIh","executionInfo":{"status":"ok","timestamp":1626437369755,"user_tz":-540,"elapsed":38516,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"f78f6501-f083-42cb-9c5d-61227f4cd356"},"source":["from models.tune_utils import WordEmbeddingTuner as OrigTuner\n","origWordEmbeddingTuner = OrigTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt',\n","                                   test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                                   embedding_name='random',\n","                                   embedding_fname=DATA_PATH+'word-embeddings/word2vec/word2vec',\n","                                   model_save_path=DATA_PATH+'word-embeddings/word2vec-tune')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:528: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:529: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:530: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:535: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt.word-embedding-tokenized\n","INFO:tensorflow:load tokenized corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt.word-embedding-tokenized\n","WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Colocations handled automatically by placer.\n","WARNING:tensorflow:From /content/drive/MyDrive/ML/KRembedding/models/tune_utils.py:196: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","WARNING:tensorflow:From /content/drive/MyDrive/ML/KRembedding/models/tune_utils.py:200: LSTMCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This class is equivalent as tf.keras.layers.LSTMCell, and will be replaced by that in Tensorflow 2.0.\n","WARNING:tensorflow:From /content/drive/MyDrive/ML/KRembedding/models/tune_utils.py:208: bidirectional_dynamic_rnn (from tensorflow.python.ops.rnn) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `keras.layers.Bidirectional(keras.layers.RNN(cell))`, which is equivalent to this API\n","WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/rnn.py:443: dynamic_rnn (from tensorflow.python.ops.rnn) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `keras.layers.RNN(cell)`, which is equivalent to this API\n","WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/ops/rnn.py:626: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.cast instead.\n","\n","WARNING: The TensorFlow contrib module will not be included in TensorFlow 2.0.\n","For more information, please see:\n","  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md\n","  * https://github.com/tensorflow/addons\n","If you depend on functionality not listed there, please file an issue.\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RCtXjEzBLEfS","executionInfo":{"status":"ok","timestamp":1626436639030,"user_tz":-540,"elapsed":200,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"fe00d642-6f59-4823-8b4a-982dd41d583f"},"source":["L = [ len(s[0]) for s in origWordEmbeddingTuner.train_data ]\n","sum(L) / len(L)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["18.436497459898394"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PQNXsGN1JpGl","executionInfo":{"status":"ok","timestamp":1626436801444,"user_tz":-540,"elapsed":363,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"c6dd5e27-657e-4b58-be5a-c4f37967426e"},"source":["list(data.items())[1][1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73,\n","       73, 73, 73, 73, 73, 73, 73, 73, 73])"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"skctTpa6Hx0S","executionInfo":{"status":"ok","timestamp":1626436955623,"user_tz":-540,"elapsed":2384,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"0743464c-bce5-4c48-bb77-c84eaf239eb8"},"source":["import time\n","orig_get_batch = origWordEmbeddingTuner.get_batch(origWordEmbeddingTuner.train_data,\n","                                                  origWordEmbeddingTuner.num_epochs)\n","times = []\n","for t in range(10):\n","    tick = time.time()\n","    lengths = []\n","    for n in range(100):\n","        data = next(orig_get_batch)\n","        lengths.append(list(data.items())[1][1][0])\n","    times.append(time.time() - tick)\n","print(sum(times) / len(times))\n","print(sum(lengths) / len(lengths))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:num_batches_per_epoch : 1171\n"],"name":"stdout"},{"output_type":"stream","text":["/content/drive/My Drive/ML/KRembedding/models/tune_utils.py:347: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  data = np.array(data)[idx]\n"],"name":"stderr"},{"output_type":"stream","text":["0.21523027420043944\n","75.29\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"21Cc7aX42rtR","executionInfo":{"status":"error","timestamp":1626437428763,"user_tz":-540,"elapsed":59016,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"a30dcf28-39d9-43ba-9501-e7c3167219b8"},"source":["origWordEmbeddingTuner.tune()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:num_batches_per_epoch : 1171\n"],"name":"stdout"},{"output_type":"stream","text":["/content/drive/MyDrive/ML/KRembedding/models/tune_utils.py:347: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  data = np.array(data)[idx]\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:global step 1 train loss 0.0007\n","INFO:tensorflow:global step 2 train loss 0.0014\n","INFO:tensorflow:global step 3 train loss 0.0021\n","INFO:tensorflow:global step 4 train loss 0.0028\n","INFO:tensorflow:global step 5 train loss 0.0035\n","INFO:tensorflow:global step 6 train loss 0.0042\n","INFO:tensorflow:global step 7 train loss 0.0049\n","INFO:tensorflow:global step 8 train loss 0.0056\n","INFO:tensorflow:global step 9 train loss 0.0063\n","INFO:tensorflow:global step 10 train loss 0.0070\n","INFO:tensorflow:global step 11 train loss 0.0077\n","INFO:tensorflow:global step 12 train loss 0.0084\n","INFO:tensorflow:global step 13 train loss 0.0091\n","INFO:tensorflow:global step 14 train loss 0.0098\n","INFO:tensorflow:global step 15 train loss 0.0105\n","INFO:tensorflow:global step 16 train loss 0.0112\n","INFO:tensorflow:global step 17 train loss 0.0119\n","INFO:tensorflow:global step 18 train loss 0.0126\n","INFO:tensorflow:global step 19 train loss 0.0133\n","INFO:tensorflow:global step 20 train loss 0.0140\n","INFO:tensorflow:global step 21 train loss 0.0146\n","INFO:tensorflow:global step 22 train loss 0.0153\n","INFO:tensorflow:global step 23 train loss 0.0160\n","INFO:tensorflow:global step 24 train loss 0.0167\n","INFO:tensorflow:global step 25 train loss 0.0174\n","INFO:tensorflow:global step 26 train loss 0.0181\n","INFO:tensorflow:global step 27 train loss 0.0188\n","INFO:tensorflow:global step 28 train loss 0.0195\n","INFO:tensorflow:global step 29 train loss 0.0202\n","INFO:tensorflow:global step 30 train loss 0.0209\n","INFO:tensorflow:global step 31 train loss 0.0216\n","INFO:tensorflow:global step 32 train loss 0.0223\n","INFO:tensorflow:global step 33 train loss 0.0230\n","INFO:tensorflow:global step 34 train loss 0.0237\n","INFO:tensorflow:global step 35 train loss 0.0244\n","INFO:tensorflow:global step 36 train loss 0.0251\n","INFO:tensorflow:global step 37 train loss 0.0257\n","INFO:tensorflow:global step 38 train loss 0.0264\n","INFO:tensorflow:global step 39 train loss 0.0271\n","INFO:tensorflow:global step 40 train loss 0.0278\n","INFO:tensorflow:global step 41 train loss 0.0285\n","INFO:tensorflow:global step 42 train loss 0.0292\n","INFO:tensorflow:global step 43 train loss 0.0299\n","INFO:tensorflow:global step 44 train loss 0.0306\n","INFO:tensorflow:global step 45 train loss 0.0313\n","INFO:tensorflow:global step 46 train loss 0.0320\n","INFO:tensorflow:global step 47 train loss 0.0326\n","INFO:tensorflow:global step 48 train loss 0.0333\n","INFO:tensorflow:global step 49 train loss 0.0340\n","INFO:tensorflow:global step 50 train loss 0.0347\n","INFO:tensorflow:global step 51 train loss 0.0354\n","INFO:tensorflow:global step 52 train loss 0.0361\n","INFO:tensorflow:global step 53 train loss 0.0368\n","INFO:tensorflow:global step 54 train loss 0.0375\n","INFO:tensorflow:global step 55 train loss 0.0382\n","INFO:tensorflow:global step 56 train loss 0.0389\n","INFO:tensorflow:global step 57 train loss 0.0396\n","INFO:tensorflow:global step 58 train loss 0.0403\n","INFO:tensorflow:global step 59 train loss 0.0410\n","INFO:tensorflow:global step 60 train loss 0.0417\n","INFO:tensorflow:global step 61 train loss 0.0424\n","INFO:tensorflow:global step 62 train loss 0.0430\n","INFO:tensorflow:global step 63 train loss 0.0437\n","INFO:tensorflow:global step 64 train loss 0.0444\n","INFO:tensorflow:global step 65 train loss 0.0451\n","INFO:tensorflow:global step 66 train loss 0.0458\n","INFO:tensorflow:global step 67 train loss 0.0465\n","INFO:tensorflow:global step 68 train loss 0.0472\n","INFO:tensorflow:global step 69 train loss 0.0479\n","INFO:tensorflow:global step 70 train loss 0.0486\n","INFO:tensorflow:global step 71 train loss 0.0493\n","INFO:tensorflow:global step 72 train loss 0.0500\n","INFO:tensorflow:global step 73 train loss 0.0507\n","INFO:tensorflow:global step 74 train loss 0.0514\n","INFO:tensorflow:global step 75 train loss 0.0521\n","INFO:tensorflow:global step 76 train loss 0.0527\n","INFO:tensorflow:global step 77 train loss 0.0534\n","INFO:tensorflow:global step 78 train loss 0.0541\n","INFO:tensorflow:global step 79 train loss 0.0548\n","INFO:tensorflow:global step 80 train loss 0.0555\n","INFO:tensorflow:global step 81 train loss 0.0562\n","INFO:tensorflow:global step 82 train loss 0.0569\n","INFO:tensorflow:global step 83 train loss 0.0576\n","INFO:tensorflow:global step 84 train loss 0.0583\n","INFO:tensorflow:global step 85 train loss 0.0590\n","INFO:tensorflow:global step 86 train loss 0.0597\n","INFO:tensorflow:global step 87 train loss 0.0604\n","INFO:tensorflow:global step 88 train loss 0.0611\n","INFO:tensorflow:global step 89 train loss 0.0617\n","INFO:tensorflow:global step 90 train loss 0.0624\n","INFO:tensorflow:global step 91 train loss 0.0631\n","INFO:tensorflow:global step 92 train loss 0.0639\n","INFO:tensorflow:global step 93 train loss 0.0645\n","INFO:tensorflow:global step 94 train loss 0.0652\n","INFO:tensorflow:global step 95 train loss 0.0659\n","INFO:tensorflow:global step 96 train loss 0.0666\n","INFO:tensorflow:global step 97 train loss 0.0673\n","INFO:tensorflow:global step 98 train loss 0.0680\n","INFO:tensorflow:global step 99 train loss 0.0687\n","INFO:tensorflow:global step 100 train loss 0.0694\n","INFO:tensorflow:global step 101 train loss 0.0701\n","INFO:tensorflow:global step 102 train loss 0.0708\n","INFO:tensorflow:global step 103 train loss 0.0714\n","INFO:tensorflow:global step 104 train loss 0.0721\n","INFO:tensorflow:global step 105 train loss 0.0728\n","INFO:tensorflow:global step 106 train loss 0.0735\n","INFO:tensorflow:global step 107 train loss 0.0742\n","INFO:tensorflow:global step 108 train loss 0.0749\n","INFO:tensorflow:global step 109 train loss 0.0756\n","INFO:tensorflow:global step 110 train loss 0.0763\n","INFO:tensorflow:global step 111 train loss 0.0770\n","INFO:tensorflow:global step 112 train loss 0.0776\n","INFO:tensorflow:global step 113 train loss 0.0783\n","INFO:tensorflow:global step 114 train loss 0.0790\n","INFO:tensorflow:global step 115 train loss 0.0797\n","INFO:tensorflow:global step 116 train loss 0.0804\n","INFO:tensorflow:global step 117 train loss 0.0811\n","INFO:tensorflow:global step 118 train loss 0.0818\n","INFO:tensorflow:global step 119 train loss 0.0824\n","INFO:tensorflow:global step 120 train loss 0.0831\n","INFO:tensorflow:global step 121 train loss 0.0838\n","INFO:tensorflow:global step 122 train loss 0.0845\n","INFO:tensorflow:global step 123 train loss 0.0852\n","INFO:tensorflow:global step 124 train loss 0.0859\n","INFO:tensorflow:global step 125 train loss 0.0866\n","INFO:tensorflow:global step 126 train loss 0.0873\n","INFO:tensorflow:global step 127 train loss 0.0880\n","INFO:tensorflow:global step 128 train loss 0.0887\n","INFO:tensorflow:global step 129 train loss 0.0894\n","INFO:tensorflow:global step 130 train loss 0.0901\n","INFO:tensorflow:global step 131 train loss 0.0908\n","INFO:tensorflow:global step 132 train loss 0.0914\n","INFO:tensorflow:global step 133 train loss 0.0921\n","INFO:tensorflow:global step 134 train loss 0.0928\n","INFO:tensorflow:global step 135 train loss 0.0935\n","INFO:tensorflow:global step 136 train loss 0.0942\n","INFO:tensorflow:global step 137 train loss 0.0949\n","INFO:tensorflow:global step 138 train loss 0.0956\n","INFO:tensorflow:global step 139 train loss 0.0963\n","INFO:tensorflow:global step 140 train loss 0.0969\n","INFO:tensorflow:global step 141 train loss 0.0976\n","INFO:tensorflow:global step 142 train loss 0.0983\n","INFO:tensorflow:global step 143 train loss 0.0990\n","INFO:tensorflow:global step 144 train loss 0.0997\n","INFO:tensorflow:global step 145 train loss 0.1004\n","INFO:tensorflow:global step 146 train loss 0.1011\n","INFO:tensorflow:global step 147 train loss 0.1018\n","INFO:tensorflow:global step 148 train loss 0.1025\n","INFO:tensorflow:global step 149 train loss 0.1031\n","INFO:tensorflow:global step 150 train loss 0.1038\n","INFO:tensorflow:global step 151 train loss 0.1045\n","INFO:tensorflow:global step 152 train loss 0.1052\n","INFO:tensorflow:global step 153 train loss 0.1059\n","INFO:tensorflow:global step 154 train loss 0.1066\n","INFO:tensorflow:global step 155 train loss 0.1072\n","INFO:tensorflow:global step 156 train loss 0.1079\n","INFO:tensorflow:global step 157 train loss 0.1086\n","INFO:tensorflow:global step 158 train loss 0.1093\n","INFO:tensorflow:global step 159 train loss 0.1100\n","INFO:tensorflow:global step 160 train loss 0.1107\n","INFO:tensorflow:global step 161 train loss 0.1113\n","INFO:tensorflow:global step 162 train loss 0.1120\n","INFO:tensorflow:global step 163 train loss 0.1127\n","INFO:tensorflow:global step 164 train loss 0.1134\n","INFO:tensorflow:global step 165 train loss 0.1141\n","INFO:tensorflow:global step 166 train loss 0.1147\n","INFO:tensorflow:global step 167 train loss 0.1154\n","INFO:tensorflow:global step 168 train loss 0.1161\n","INFO:tensorflow:global step 169 train loss 0.1168\n","INFO:tensorflow:global step 170 train loss 0.1174\n","INFO:tensorflow:global step 171 train loss 0.1181\n","INFO:tensorflow:global step 172 train loss 0.1188\n","INFO:tensorflow:global step 173 train loss 0.1195\n","INFO:tensorflow:global step 174 train loss 0.1202\n","INFO:tensorflow:global step 175 train loss 0.1208\n","INFO:tensorflow:global step 176 train loss 0.1215\n","INFO:tensorflow:global step 177 train loss 0.1222\n","INFO:tensorflow:global step 178 train loss 0.1228\n","INFO:tensorflow:global step 179 train loss 0.1235\n","INFO:tensorflow:global step 180 train loss 0.1242\n","INFO:tensorflow:global step 181 train loss 0.1249\n","INFO:tensorflow:global step 182 train loss 0.1256\n","INFO:tensorflow:global step 183 train loss 0.1262\n","INFO:tensorflow:global step 184 train loss 0.1269\n","INFO:tensorflow:global step 185 train loss 0.1276\n","INFO:tensorflow:global step 186 train loss 0.1282\n","INFO:tensorflow:global step 187 train loss 0.1289\n","INFO:tensorflow:global step 188 train loss 0.1296\n","INFO:tensorflow:global step 189 train loss 0.1303\n","INFO:tensorflow:global step 190 train loss 0.1310\n","INFO:tensorflow:global step 191 train loss 0.1316\n","INFO:tensorflow:global step 192 train loss 0.1323\n","INFO:tensorflow:global step 193 train loss 0.1330\n","INFO:tensorflow:global step 194 train loss 0.1336\n","INFO:tensorflow:global step 195 train loss 0.1343\n","INFO:tensorflow:global step 196 train loss 0.1350\n","INFO:tensorflow:global step 197 train loss 0.1356\n","INFO:tensorflow:global step 198 train loss 0.1363\n","INFO:tensorflow:global step 199 train loss 0.1370\n","INFO:tensorflow:global step 200 train loss 0.1377\n","INFO:tensorflow:global step 201 train loss 0.1383\n","INFO:tensorflow:global step 202 train loss 0.1390\n","INFO:tensorflow:global step 203 train loss 0.1397\n","INFO:tensorflow:global step 204 train loss 0.1403\n","INFO:tensorflow:global step 205 train loss 0.1410\n","INFO:tensorflow:global step 206 train loss 0.1417\n","INFO:tensorflow:global step 207 train loss 0.1423\n","INFO:tensorflow:global step 208 train loss 0.1430\n","INFO:tensorflow:global step 209 train loss 0.1436\n","INFO:tensorflow:global step 210 train loss 0.1443\n","INFO:tensorflow:global step 211 train loss 0.1449\n","INFO:tensorflow:global step 212 train loss 0.1456\n","INFO:tensorflow:global step 213 train loss 0.1463\n","INFO:tensorflow:global step 214 train loss 0.1470\n","INFO:tensorflow:global step 215 train loss 0.1476\n","INFO:tensorflow:global step 216 train loss 0.1483\n","INFO:tensorflow:global step 217 train loss 0.1489\n","INFO:tensorflow:global step 218 train loss 0.1496\n","INFO:tensorflow:global step 219 train loss 0.1502\n","INFO:tensorflow:global step 220 train loss 0.1509\n","INFO:tensorflow:global step 221 train loss 0.1516\n","INFO:tensorflow:global step 222 train loss 0.1522\n","INFO:tensorflow:global step 223 train loss 0.1529\n","INFO:tensorflow:global step 224 train loss 0.1535\n","INFO:tensorflow:global step 225 train loss 0.1542\n","INFO:tensorflow:global step 226 train loss 0.1548\n","INFO:tensorflow:global step 227 train loss 0.1554\n","INFO:tensorflow:global step 228 train loss 0.1560\n","INFO:tensorflow:global step 229 train loss 0.1567\n","INFO:tensorflow:global step 230 train loss 0.1573\n","INFO:tensorflow:global step 231 train loss 0.1580\n","INFO:tensorflow:global step 232 train loss 0.1586\n","INFO:tensorflow:global step 233 train loss 0.1593\n","INFO:tensorflow:global step 234 train loss 0.1599\n","INFO:tensorflow:global step 235 train loss 0.1605\n","INFO:tensorflow:global step 236 train loss 0.1612\n","INFO:tensorflow:global step 237 train loss 0.1618\n","INFO:tensorflow:global step 238 train loss 0.1624\n","INFO:tensorflow:global step 239 train loss 0.1631\n","INFO:tensorflow:global step 240 train loss 0.1637\n","INFO:tensorflow:global step 241 train loss 0.1643\n","INFO:tensorflow:global step 242 train loss 0.1649\n","INFO:tensorflow:global step 243 train loss 0.1656\n","INFO:tensorflow:global step 244 train loss 0.1663\n","INFO:tensorflow:global step 245 train loss 0.1669\n","INFO:tensorflow:global step 246 train loss 0.1675\n","INFO:tensorflow:global step 247 train loss 0.1681\n","INFO:tensorflow:global step 248 train loss 0.1687\n","INFO:tensorflow:global step 249 train loss 0.1693\n","INFO:tensorflow:global step 250 train loss 0.1700\n","INFO:tensorflow:global step 251 train loss 0.1706\n","INFO:tensorflow:global step 252 train loss 0.1712\n","INFO:tensorflow:global step 253 train loss 0.1718\n","INFO:tensorflow:global step 254 train loss 0.1725\n","INFO:tensorflow:global step 255 train loss 0.1731\n","INFO:tensorflow:global step 256 train loss 0.1737\n","INFO:tensorflow:global step 257 train loss 0.1743\n","INFO:tensorflow:global step 258 train loss 0.1749\n","INFO:tensorflow:global step 259 train loss 0.1756\n","INFO:tensorflow:global step 260 train loss 0.1762\n","INFO:tensorflow:global step 261 train loss 0.1768\n","INFO:tensorflow:global step 262 train loss 0.1774\n","INFO:tensorflow:global step 263 train loss 0.1781\n","INFO:tensorflow:global step 264 train loss 0.1786\n","INFO:tensorflow:global step 265 train loss 0.1793\n","INFO:tensorflow:global step 266 train loss 0.1799\n","INFO:tensorflow:global step 267 train loss 0.1805\n","INFO:tensorflow:global step 268 train loss 0.1811\n","INFO:tensorflow:global step 269 train loss 0.1817\n","INFO:tensorflow:global step 270 train loss 0.1823\n","INFO:tensorflow:global step 271 train loss 0.1829\n","INFO:tensorflow:global step 272 train loss 0.1835\n","INFO:tensorflow:global step 273 train loss 0.1842\n","INFO:tensorflow:global step 274 train loss 0.1848\n","INFO:tensorflow:global step 275 train loss 0.1853\n","INFO:tensorflow:global step 276 train loss 0.1859\n","INFO:tensorflow:global step 277 train loss 0.1865\n","INFO:tensorflow:global step 278 train loss 0.1871\n","INFO:tensorflow:global step 279 train loss 0.1877\n","INFO:tensorflow:global step 280 train loss 0.1883\n","INFO:tensorflow:global step 281 train loss 0.1889\n","INFO:tensorflow:global step 282 train loss 0.1895\n","INFO:tensorflow:global step 283 train loss 0.1902\n","INFO:tensorflow:global step 284 train loss 0.1908\n","INFO:tensorflow:global step 285 train loss 0.1914\n","INFO:tensorflow:global step 286 train loss 0.1919\n","INFO:tensorflow:global step 287 train loss 0.1925\n","INFO:tensorflow:global step 288 train loss 0.1931\n","INFO:tensorflow:global step 289 train loss 0.1937\n","INFO:tensorflow:global step 290 train loss 0.1944\n","INFO:tensorflow:global step 291 train loss 0.1950\n","INFO:tensorflow:global step 292 train loss 0.1956\n","INFO:tensorflow:global step 293 train loss 0.1962\n","INFO:tensorflow:global step 294 train loss 0.1968\n","INFO:tensorflow:global step 295 train loss 0.1974\n","INFO:tensorflow:global step 296 train loss 0.1979\n","INFO:tensorflow:global step 297 train loss 0.1985\n","INFO:tensorflow:global step 298 train loss 0.1990\n","INFO:tensorflow:global step 299 train loss 0.1996\n","INFO:tensorflow:global step 300 train loss 0.2002\n","INFO:tensorflow:global step 301 train loss 0.2008\n","INFO:tensorflow:global step 302 train loss 0.2014\n","INFO:tensorflow:global step 303 train loss 0.2019\n","INFO:tensorflow:global step 304 train loss 0.2026\n","INFO:tensorflow:global step 305 train loss 0.2032\n","INFO:tensorflow:global step 306 train loss 0.2038\n","INFO:tensorflow:global step 307 train loss 0.2044\n","INFO:tensorflow:global step 308 train loss 0.2049\n","INFO:tensorflow:global step 309 train loss 0.2055\n","INFO:tensorflow:global step 310 train loss 0.2061\n","INFO:tensorflow:global step 311 train loss 0.2067\n","INFO:tensorflow:global step 312 train loss 0.2073\n","INFO:tensorflow:global step 313 train loss 0.2078\n","INFO:tensorflow:global step 314 train loss 0.2084\n","INFO:tensorflow:global step 315 train loss 0.2090\n","INFO:tensorflow:global step 316 train loss 0.2097\n","INFO:tensorflow:global step 317 train loss 0.2103\n","INFO:tensorflow:global step 318 train loss 0.2109\n","INFO:tensorflow:global step 319 train loss 0.2114\n","INFO:tensorflow:global step 320 train loss 0.2121\n","INFO:tensorflow:global step 321 train loss 0.2126\n","INFO:tensorflow:global step 322 train loss 0.2132\n","INFO:tensorflow:global step 323 train loss 0.2138\n","INFO:tensorflow:global step 324 train loss 0.2144\n","INFO:tensorflow:global step 325 train loss 0.2150\n","INFO:tensorflow:global step 326 train loss 0.2156\n","INFO:tensorflow:global step 327 train loss 0.2161\n","INFO:tensorflow:global step 328 train loss 0.2168\n","INFO:tensorflow:global step 329 train loss 0.2173\n","INFO:tensorflow:global step 330 train loss 0.2178\n","INFO:tensorflow:global step 331 train loss 0.2184\n","INFO:tensorflow:global step 332 train loss 0.2190\n","INFO:tensorflow:global step 333 train loss 0.2196\n","INFO:tensorflow:global step 334 train loss 0.2202\n","INFO:tensorflow:global step 335 train loss 0.2208\n","INFO:tensorflow:global step 336 train loss 0.2214\n","INFO:tensorflow:global step 337 train loss 0.2220\n","INFO:tensorflow:global step 338 train loss 0.2226\n","INFO:tensorflow:global step 339 train loss 0.2232\n","INFO:tensorflow:global step 340 train loss 0.2237\n","INFO:tensorflow:global step 341 train loss 0.2244\n","INFO:tensorflow:global step 342 train loss 0.2249\n","INFO:tensorflow:global step 343 train loss 0.2256\n","INFO:tensorflow:global step 344 train loss 0.2261\n","INFO:tensorflow:global step 345 train loss 0.2268\n","INFO:tensorflow:global step 346 train loss 0.2274\n","INFO:tensorflow:global step 347 train loss 0.2280\n","INFO:tensorflow:global step 348 train loss 0.2285\n","INFO:tensorflow:global step 349 train loss 0.2290\n","INFO:tensorflow:global step 350 train loss 0.2296\n","INFO:tensorflow:global step 351 train loss 0.2302\n","INFO:tensorflow:global step 352 train loss 0.2307\n","INFO:tensorflow:global step 353 train loss 0.2313\n","INFO:tensorflow:global step 354 train loss 0.2318\n","INFO:tensorflow:global step 355 train loss 0.2324\n","INFO:tensorflow:global step 356 train loss 0.2331\n","INFO:tensorflow:global step 357 train loss 0.2337\n","INFO:tensorflow:global step 358 train loss 0.2342\n","INFO:tensorflow:global step 359 train loss 0.2348\n","INFO:tensorflow:global step 360 train loss 0.2353\n","INFO:tensorflow:global step 361 train loss 0.2358\n","INFO:tensorflow:global step 362 train loss 0.2364\n","INFO:tensorflow:global step 363 train loss 0.2370\n","INFO:tensorflow:global step 364 train loss 0.2376\n","INFO:tensorflow:global step 365 train loss 0.2381\n","INFO:tensorflow:global step 366 train loss 0.2387\n","INFO:tensorflow:global step 367 train loss 0.2393\n","INFO:tensorflow:global step 368 train loss 0.2399\n","INFO:tensorflow:global step 369 train loss 0.2405\n","INFO:tensorflow:global step 370 train loss 0.2410\n","INFO:tensorflow:global step 371 train loss 0.2416\n","INFO:tensorflow:global step 372 train loss 0.2421\n","INFO:tensorflow:global step 373 train loss 0.2427\n","INFO:tensorflow:global step 374 train loss 0.2433\n","INFO:tensorflow:global step 375 train loss 0.2439\n","INFO:tensorflow:global step 376 train loss 0.2444\n","INFO:tensorflow:global step 377 train loss 0.2450\n","INFO:tensorflow:global step 378 train loss 0.2455\n","INFO:tensorflow:global step 379 train loss 0.2461\n","INFO:tensorflow:global step 380 train loss 0.2466\n","INFO:tensorflow:global step 381 train loss 0.2471\n","INFO:tensorflow:global step 382 train loss 0.2477\n","INFO:tensorflow:global step 383 train loss 0.2483\n","INFO:tensorflow:global step 384 train loss 0.2489\n","INFO:tensorflow:global step 385 train loss 0.2494\n","INFO:tensorflow:global step 386 train loss 0.2500\n","INFO:tensorflow:global step 387 train loss 0.2505\n","INFO:tensorflow:global step 388 train loss 0.2511\n","INFO:tensorflow:global step 389 train loss 0.2517\n","INFO:tensorflow:global step 390 train loss 0.2523\n","INFO:tensorflow:global step 391 train loss 0.2529\n","INFO:tensorflow:global step 392 train loss 0.2535\n","INFO:tensorflow:global step 393 train loss 0.2540\n","INFO:tensorflow:global step 394 train loss 0.2546\n","INFO:tensorflow:global step 395 train loss 0.2552\n","INFO:tensorflow:global step 396 train loss 0.2558\n","INFO:tensorflow:global step 397 train loss 0.2564\n","INFO:tensorflow:global step 398 train loss 0.2570\n","INFO:tensorflow:global step 399 train loss 0.2575\n","INFO:tensorflow:global step 400 train loss 0.2581\n","INFO:tensorflow:global step 401 train loss 0.2587\n","INFO:tensorflow:global step 402 train loss 0.2592\n","INFO:tensorflow:global step 403 train loss 0.2598\n","INFO:tensorflow:global step 404 train loss 0.2604\n","INFO:tensorflow:global step 405 train loss 0.2609\n","INFO:tensorflow:global step 406 train loss 0.2615\n","INFO:tensorflow:global step 407 train loss 0.2620\n","INFO:tensorflow:global step 408 train loss 0.2625\n","INFO:tensorflow:global step 409 train loss 0.2631\n","INFO:tensorflow:global step 410 train loss 0.2637\n","INFO:tensorflow:global step 411 train loss 0.2643\n","INFO:tensorflow:global step 412 train loss 0.2648\n","INFO:tensorflow:global step 413 train loss 0.2654\n","INFO:tensorflow:global step 414 train loss 0.2659\n","INFO:tensorflow:global step 415 train loss 0.2665\n","INFO:tensorflow:global step 416 train loss 0.2671\n","INFO:tensorflow:global step 417 train loss 0.2677\n","INFO:tensorflow:global step 418 train loss 0.2683\n","INFO:tensorflow:global step 419 train loss 0.2688\n","INFO:tensorflow:global step 420 train loss 0.2693\n","INFO:tensorflow:global step 421 train loss 0.2698\n","INFO:tensorflow:global step 422 train loss 0.2704\n","INFO:tensorflow:global step 423 train loss 0.2710\n","INFO:tensorflow:global step 424 train loss 0.2716\n","INFO:tensorflow:global step 425 train loss 0.2722\n","INFO:tensorflow:global step 426 train loss 0.2727\n","INFO:tensorflow:global step 427 train loss 0.2733\n","INFO:tensorflow:global step 428 train loss 0.2738\n","INFO:tensorflow:global step 429 train loss 0.2745\n","INFO:tensorflow:global step 430 train loss 0.2751\n","INFO:tensorflow:global step 431 train loss 0.2756\n","INFO:tensorflow:global step 432 train loss 0.2761\n","INFO:tensorflow:global step 433 train loss 0.2767\n","INFO:tensorflow:global step 434 train loss 0.2773\n","INFO:tensorflow:global step 435 train loss 0.2779\n","INFO:tensorflow:global step 436 train loss 0.2785\n","INFO:tensorflow:global step 437 train loss 0.2792\n","INFO:tensorflow:global step 438 train loss 0.2797\n","INFO:tensorflow:global step 439 train loss 0.2803\n","INFO:tensorflow:global step 440 train loss 0.2809\n","INFO:tensorflow:global step 441 train loss 0.2814\n","INFO:tensorflow:global step 442 train loss 0.2821\n","INFO:tensorflow:global step 443 train loss 0.2826\n","INFO:tensorflow:global step 444 train loss 0.2832\n","INFO:tensorflow:global step 445 train loss 0.2837\n","INFO:tensorflow:global step 446 train loss 0.2843\n","INFO:tensorflow:global step 447 train loss 0.2848\n","INFO:tensorflow:global step 448 train loss 0.2854\n","INFO:tensorflow:global step 449 train loss 0.2859\n","INFO:tensorflow:global step 450 train loss 0.2865\n","INFO:tensorflow:global step 451 train loss 0.2871\n","INFO:tensorflow:global step 452 train loss 0.2877\n","INFO:tensorflow:global step 453 train loss 0.2882\n","INFO:tensorflow:global step 454 train loss 0.2887\n","INFO:tensorflow:global step 455 train loss 0.2893\n","INFO:tensorflow:global step 456 train loss 0.2899\n","INFO:tensorflow:global step 457 train loss 0.2904\n","INFO:tensorflow:global step 458 train loss 0.2910\n","INFO:tensorflow:global step 459 train loss 0.2916\n","INFO:tensorflow:global step 460 train loss 0.2922\n","INFO:tensorflow:global step 461 train loss 0.2928\n","INFO:tensorflow:global step 462 train loss 0.2933\n","INFO:tensorflow:global step 463 train loss 0.2938\n","INFO:tensorflow:global step 464 train loss 0.2944\n","INFO:tensorflow:global step 465 train loss 0.2949\n","INFO:tensorflow:global step 466 train loss 0.2954\n","INFO:tensorflow:global step 467 train loss 0.2960\n","INFO:tensorflow:global step 468 train loss 0.2966\n","INFO:tensorflow:global step 469 train loss 0.2971\n"],"name":"stdout"},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-d3b4d5e77189>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0morigWordEmbeddingTuner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtune\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/content/drive/MyDrive/ML/KRembedding/models/tune_utils.py\u001b[0m in \u001b[0;36mtune\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    665\u001b[0m         \u001b[0msess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mglobal_variables_initializer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    666\u001b[0m         \u001b[0msess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0membed_init\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0membedding_placeholder\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0membeddings\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 667\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msess\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msaver\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mglobal_step\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moutput_feed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    668\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    669\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmake_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msentences\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_training\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/content/drive/MyDrive/ML/KRembedding/models/tune_utils.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(self, sess, saver, global_step, output_feed)\u001b[0m\n\u001b[1;32m    307\u001b[0m         \u001b[0mcheckpoint_loss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0.0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mcurrent_input_feed\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtrain_batches\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 309\u001b[0;31m             \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcurrent_loss\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_feed\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcurrent_input_feed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    310\u001b[0m             \u001b[0mcheckpoint_loss\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0mcurrent_loss\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    311\u001b[0m             \u001b[0;31m#if global_step.eval(sess) % self.eval_every == 0:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m    927\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    928\u001b[0m       result = self._run(None, fetches, feed_dict, options_ptr,\n\u001b[0;32m--> 929\u001b[0;31m                          run_metadata_ptr)\n\u001b[0m\u001b[1;32m    930\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mrun_metadata\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    931\u001b[0m         \u001b[0mproto_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_session\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_GetBuffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrun_metadata_ptr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run\u001b[0;34m(self, handle, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1150\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfinal_fetches\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mfinal_targets\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mfeed_dict_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1151\u001b[0m       results = self._do_run(handle, final_targets, final_fetches,\n\u001b[0;32m-> 1152\u001b[0;31m                              feed_dict_tensor, options, run_metadata)\n\u001b[0m\u001b[1;32m   1153\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1154\u001b[0m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_run\u001b[0;34m(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1326\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mhandle\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1327\u001b[0m       return self._do_call(_run_fn, feeds, fetches, targets, options,\n\u001b[0;32m-> 1328\u001b[0;31m                            run_metadata)\n\u001b[0m\u001b[1;32m   1329\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1330\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_prun_fn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeeds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetches\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1332\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1333\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1334\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1335\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOpError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1336\u001b[0m       \u001b[0mmessage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run_fn\u001b[0;34m(feed_dict, fetch_list, target_list, options, run_metadata)\u001b[0m\n\u001b[1;32m   1317\u001b[0m       \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_extend_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1318\u001b[0m       return self._call_tf_sessionrun(\n\u001b[0;32m-> 1319\u001b[0;31m           options, feed_dict, fetch_list, target_list, run_metadata)\n\u001b[0m\u001b[1;32m   1320\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1321\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_prun_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_call_tf_sessionrun\u001b[0;34m(self, options, feed_dict, fetch_list, target_list, run_metadata)\u001b[0m\n\u001b[1;32m   1405\u001b[0m     return tf_session.TF_SessionRun_wrapper(\n\u001b[1;32m   1406\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_session\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0moptions\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_list\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1407\u001b[0;31m         run_metadata)\n\u001b[0m\u001b[1;32m   1408\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1409\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_call_tf_sessionprun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}