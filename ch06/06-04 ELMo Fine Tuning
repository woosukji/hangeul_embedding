{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"06-04 ELMo Fine Tuning","provenance":[],"collapsed_sections":[],"machine_shape":"hm","authorship_tag":"ABX9TyPC7oDl7rQEGv9YZHuasKL+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"DxpqVAn1hzkO"},"source":["# __6.4 ELMo Fine Tuning__"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t7lpQeWw-Azm","executionInfo":{"status":"ok","timestamp":1626991278936,"user_tz":-540,"elapsed":40517,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"ff44b397-5e1c-42cc-f980-b2b056805b81"},"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","FOLDERNAME = 'ML/KRembedding/'\n","\n","LIB_PATH = 'lib'\n","DATA_PATH = '/notebooks/embedding/data/'\n","\n","%cd drive/My\\ Drive/$FOLDERNAME/\n","\n","# 학습된 단어 임베딩 다운로드\n","!bash preprocess.sh dump-processed\n","import time\n","time.sleep(1)\n","!bash sentmodel.sh download-pretrained-elmo"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n","/content/drive/My Drive/ML/KRembedding\n","download processed data...\n","--2021-07-22 22:00:49--  https://docs.google.com/uc?export=download&confirm=zRi8&id=1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG\n","Resolving docs.google.com (docs.google.com)... 142.250.152.101, 142.250.152.100, 142.250.152.138, ...\n","Connecting to docs.google.com (docs.google.com)|142.250.152.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Moved Temporarily\n","Location: https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download [following]\n","--2021-07-22 22:00:49--  https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download\n","Resolving doc-04-6c-docs.googleusercontent.com (doc-04-6c-docs.googleusercontent.com)... 172.217.212.132, 2607:f8b0:4001:c03::84\n","Connecting to doc-04-6c-docs.googleusercontent.com (doc-04-6c-docs.googleusercontent.com)|172.217.212.132|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://docs.google.com/nonceSigner?nonce=me2ig3pnhtcli&continue=https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e%3Ddownload&hash=cfrjbda8lsru2c47nu0sr9asfq1f2hcl [following]\n","--2021-07-22 22:00:49--  https://docs.google.com/nonceSigner?nonce=me2ig3pnhtcli&continue=https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e%3Ddownload&hash=cfrjbda8lsru2c47nu0sr9asfq1f2hcl\n","Connecting to docs.google.com (docs.google.com)|142.250.152.101|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download&nonce=me2ig3pnhtcli&user=16979790682845214356Z&hash=a1eudcv4khk4mvr3s974dj6bok4nqoh2 [following]\n","--2021-07-22 22:00:49--  https://doc-04-6c-docs.googleusercontent.com/docs/securesc/e1i3phkv1bfr0ecjmkp457i6suaqpgdu/fi1st0oqiolrt1maf2qnn5cim937jktv/1626991200000/05170634686643261154/16979790682845214356Z/1kUecR7xO7bsHFmUI6AExtY5u2XXlObOG?e=download&nonce=me2ig3pnhtcli&user=16979790682845214356Z&hash=a1eudcv4khk4mvr3s974dj6bok4nqoh2\n","Connecting to doc-04-6c-docs.googleusercontent.com (doc-04-6c-docs.googleusercontent.com)|172.217.212.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: unspecified [application/zip]\n","Saving to: ‘/notebooks/embedding/data/processed.zip’\n","\n","/notebooks/embeddin     [              <=>   ] 401.89M  97.0MB/s    in 4.3s    \n","\n","2021-07-22 22:00:54 (93.2 MB/s) - ‘/notebooks/embedding/data/processed.zip’ saved [421408263]\n","\n","Archive:  processed.zip\n","   creating: processed/\n","  inflating: processed/space-correct.model  \n","  inflating: processed/processed_korquad.txt  \n","  inflating: processed/processed_ratings_train.txt  \n","  inflating: processed/processed_ratings_test.txt  \n","  inflating: processed/processed_wiki_ko.txt  \n","  inflating: processed/processed_ratings.txt  \n","  inflating: processed/corrected_ratings_corpus.txt  \n","  inflating: processed/soyword.model  \n","  inflating: processed/processed_review_movieid.txt  \n","  inflating: processed/corrected_ratings_train.txt  \n","  inflating: processed/corrected_ratings_test.txt  \n","download pretrained ELMo weights...\n","--2021-07-22 22:01:09--  https://docs.google.com/uc?export=download&confirm=1TDe&id=1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp\n","Resolving docs.google.com (docs.google.com)... 74.125.126.139, 74.125.126.101, 74.125.126.100, ...\n","Connecting to docs.google.com (docs.google.com)|74.125.126.139|:443... connected.\n","HTTP request sent, awaiting response... 302 Moved Temporarily\n","Location: https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e=download [following]\n","--2021-07-22 22:01:09--  https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e=download\n","Resolving doc-08-9c-docs.googleusercontent.com (doc-08-9c-docs.googleusercontent.com)... 172.217.212.132, 2607:f8b0:4001:c03::84\n","Connecting to doc-08-9c-docs.googleusercontent.com (doc-08-9c-docs.googleusercontent.com)|172.217.212.132|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://docs.google.com/nonceSigner?nonce=m84qvlc5so1u2&continue=https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e%3Ddownload&hash=soruqqut33h6apimthgs57mpiorek20n [following]\n","--2021-07-22 22:01:09--  https://docs.google.com/nonceSigner?nonce=m84qvlc5so1u2&continue=https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e%3Ddownload&hash=soruqqut33h6apimthgs57mpiorek20n\n","Connecting to docs.google.com (docs.google.com)|74.125.126.139|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e=download&nonce=m84qvlc5so1u2&user=02655017070355680266Z&hash=3vckff7gmlbsc5ce7pi0u6lmp9cdnikf [following]\n","--2021-07-22 22:01:09--  https://doc-08-9c-docs.googleusercontent.com/docs/securesc/a8gfopu0jiu3v44pt92cb1i64sk57sv8/ij54p0veg2lo6aogsjelvejleg53qk1j/1626991200000/05170634686643261154/02655017070355680266Z/1go2JtVeYBOjkBCWJWk8inkSpVg7VfFVp?e=download&nonce=m84qvlc5so1u2&user=02655017070355680266Z&hash=3vckff7gmlbsc5ce7pi0u6lmp9cdnikf\n","Connecting to doc-08-9c-docs.googleusercontent.com (doc-08-9c-docs.googleusercontent.com)|172.217.212.132|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: unspecified [application/zip]\n","Saving to: ‘/notebooks/embedding/data/sentence-embeddings/elmo/pretrain-ckpt/elmo.zip’\n","\n","/notebooks/embeddin     [    <=>             ]  78.26M   103MB/s    in 0.8s    \n","\n","2021-07-22 22:01:10 (103 MB/s) - ‘/notebooks/embedding/data/sentence-embeddings/elmo/pretrain-ckpt/elmo.zip’ saved [82059571]\n","\n","Archive:  elmo.zip\n","  inflating: elmo-vocab.txt          \n","  inflating: elmo.model              \n","  inflating: options.json            \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y79LYd0le-B1","executionInfo":{"status":"ok","timestamp":1626991402287,"user_tz":-540,"elapsed":123389,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"e5c0f9ec-0a3c-4457-af96-0d7011a6eb7d"},"source":["# Mecab 설치\n","!bash <(curl -s https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Installing automake (A dependency for mecab-ko)\n","Get:1 https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/ InRelease [3,626 B]\n","Ign:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  InRelease\n","Get:3 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]\n","Ign:4 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  InRelease\n","Get:5 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release [697 B]\n","Hit:6 https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  Release\n","Get:7 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Release.gpg [836 B]\n","Hit:8 http://archive.ubuntu.com/ubuntu bionic InRelease\n","Get:9 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic InRelease [15.9 kB]\n","Get:10 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]\n","Get:11 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]\n","Hit:12 http://ppa.launchpad.net/cran/libgit2/ubuntu bionic InRelease\n","Hit:13 http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic InRelease\n","Get:15 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic InRelease [21.3 kB]\n","Ign:16 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages\n","Get:16 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64  Packages [679 kB]\n","Get:17 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [500 kB]\n","Get:18 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1,420 kB]\n","Get:19 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2,190 kB]\n","Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2,257 kB]\n","Get:21 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [31.5 kB]\n","Get:22 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main Sources [1,785 kB]\n","Get:23 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [38.7 kB]\n","Get:24 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2,693 kB]\n","Get:25 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [533 kB]\n","Get:26 http://ppa.launchpad.net/c2d4u.team/c2d4u4.0+/ubuntu bionic/main amd64 Packages [913 kB]\n","Get:27 http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu bionic/main amd64 Packages [44.1 kB]\n","Fetched 13.4 MB in 4s (3,723 kB/s)\n","Reading package lists... Done\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  autoconf autotools-dev libsigsegv2 m4\n","Suggested packages:\n","  autoconf-archive gnu-standards autoconf-doc libtool gettext m4-doc\n","The following NEW packages will be installed:\n","  autoconf automake autotools-dev libsigsegv2 m4\n","0 upgraded, 5 newly installed, 0 to remove and 80 not upgraded.\n","Need to get 1,082 kB of archives.\n","After this operation, 3,994 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 libsigsegv2 amd64 2.12-1 [14.7 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 m4 amd64 1.4.18-1 [197 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 autoconf all 2.69-11 [322 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 autotools-dev all 20180224.1 [39.6 kB]\n","Get:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 automake all 1:1.15.1-3ubuntu2 [509 kB]\n","Fetched 1,082 kB in 1s (1,018 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 5.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package libsigsegv2:amd64.\n","(Reading database ... 160837 files and directories currently installed.)\n","Preparing to unpack .../libsigsegv2_2.12-1_amd64.deb ...\n","Unpacking libsigsegv2:amd64 (2.12-1) ...\n","Selecting previously unselected package m4.\n","Preparing to unpack .../archives/m4_1.4.18-1_amd64.deb ...\n","Unpacking m4 (1.4.18-1) ...\n","Selecting previously unselected package autoconf.\n","Preparing to unpack .../autoconf_2.69-11_all.deb ...\n","Unpacking autoconf (2.69-11) ...\n","Selecting previously unselected package autotools-dev.\n","Preparing to unpack .../autotools-dev_20180224.1_all.deb ...\n","Unpacking autotools-dev (20180224.1) ...\n","Selecting previously unselected package automake.\n","Preparing to unpack .../automake_1%3a1.15.1-3ubuntu2_all.deb ...\n","Unpacking automake (1:1.15.1-3ubuntu2) ...\n","Setting up libsigsegv2:amd64 (2.12-1) ...\n","Setting up m4 (1.4.18-1) ...\n","Setting up autotools-dev (20180224.1) ...\n","Setting up autoconf (2.69-11) ...\n","Setting up automake (1:1.15.1-3ubuntu2) ...\n","update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode\n","Processing triggers for libc-bin (2.27-3ubuntu1.2) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Install mecab-ko-dic\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n","100 1381k  100 1381k    0     0  2084k      0 --:--:-- --:--:-- --:--:-- 2084k\n","mecab-0.996-ko-0.9.2/\n","mecab-0.996-ko-0.9.2/example/\n","mecab-0.996-ko-0.9.2/example/example.cpp\n","mecab-0.996-ko-0.9.2/example/example_lattice.cpp\n","mecab-0.996-ko-0.9.2/example/example_lattice.c\n","mecab-0.996-ko-0.9.2/example/example.c\n","mecab-0.996-ko-0.9.2/example/thread_test.cpp\n","mecab-0.996-ko-0.9.2/mecab-config.in\n","mecab-0.996-ko-0.9.2/man/\n","mecab-0.996-ko-0.9.2/man/Makefile.am\n","mecab-0.996-ko-0.9.2/man/mecab.1\n","mecab-0.996-ko-0.9.2/man/Makefile.in\n","mecab-0.996-ko-0.9.2/mecab.iss.in\n","mecab-0.996-ko-0.9.2/config.guess\n","mecab-0.996-ko-0.9.2/README\n","mecab-0.996-ko-0.9.2/COPYING\n","mecab-0.996-ko-0.9.2/CHANGES.md\n","mecab-0.996-ko-0.9.2/README.md\n","mecab-0.996-ko-0.9.2/INSTALL\n","mecab-0.996-ko-0.9.2/config.sub\n","mecab-0.996-ko-0.9.2/configure.in\n","mecab-0.996-ko-0.9.2/swig/\n","mecab-0.996-ko-0.9.2/swig/Makefile\n","mecab-0.996-ko-0.9.2/swig/version.h.in\n","mecab-0.996-ko-0.9.2/swig/version.h\n","mecab-0.996-ko-0.9.2/swig/MeCab.i\n","mecab-0.996-ko-0.9.2/aclocal.m4\n","mecab-0.996-ko-0.9.2/LGPL\n","mecab-0.996-ko-0.9.2/Makefile.am\n","mecab-0.996-ko-0.9.2/configure\n","mecab-0.996-ko-0.9.2/tests/\n","mecab-0.996-ko-0.9.2/tests/autolink/\n","mecab-0.996-ko-0.9.2/tests/autolink/unk.def\n","mecab-0.996-ko-0.9.2/tests/autolink/dicrc\n","mecab-0.996-ko-0.9.2/tests/autolink/dic.csv\n","mecab-0.996-ko-0.9.2/tests/autolink/test\n","mecab-0.996-ko-0.9.2/tests/autolink/char.def\n","mecab-0.996-ko-0.9.2/tests/autolink/matrix.def\n","mecab-0.996-ko-0.9.2/tests/autolink/test.gld\n","mecab-0.996-ko-0.9.2/tests/t9/\n","mecab-0.996-ko-0.9.2/tests/t9/unk.def\n","mecab-0.996-ko-0.9.2/tests/t9/ipadic.pl\n","mecab-0.996-ko-0.9.2/tests/t9/dicrc\n","mecab-0.996-ko-0.9.2/tests/t9/dic.csv\n","mecab-0.996-ko-0.9.2/tests/t9/test\n","mecab-0.996-ko-0.9.2/tests/t9/char.def\n","mecab-0.996-ko-0.9.2/tests/t9/matrix.def\n","mecab-0.996-ko-0.9.2/tests/t9/mkdic.pl\n","mecab-0.996-ko-0.9.2/tests/t9/test.gld\n","mecab-0.996-ko-0.9.2/tests/cost-train/\n","mecab-0.996-ko-0.9.2/tests/cost-train/ipa.train\n","mecab-0.996-ko-0.9.2/tests/cost-train/ipa.test\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/rewrite.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/feature.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/unk.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/dicrc\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/dic.csv\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/char.def\n","mecab-0.996-ko-0.9.2/tests/cost-train/seed/matrix.def\n","mecab-0.996-ko-0.9.2/tests/run-eval.sh\n","mecab-0.996-ko-0.9.2/tests/run-cost-train.sh\n","mecab-0.996-ko-0.9.2/tests/Makefile.am\n","mecab-0.996-ko-0.9.2/tests/katakana/\n","mecab-0.996-ko-0.9.2/tests/katakana/unk.def\n","mecab-0.996-ko-0.9.2/tests/katakana/dicrc\n","mecab-0.996-ko-0.9.2/tests/katakana/dic.csv\n","mecab-0.996-ko-0.9.2/tests/katakana/test\n","mecab-0.996-ko-0.9.2/tests/katakana/char.def\n","mecab-0.996-ko-0.9.2/tests/katakana/matrix.def\n","mecab-0.996-ko-0.9.2/tests/katakana/test.gld\n","mecab-0.996-ko-0.9.2/tests/eval/\n","mecab-0.996-ko-0.9.2/tests/eval/answer\n","mecab-0.996-ko-0.9.2/tests/eval/system\n","mecab-0.996-ko-0.9.2/tests/eval/test.gld\n","mecab-0.996-ko-0.9.2/tests/shiin/\n","mecab-0.996-ko-0.9.2/tests/shiin/unk.def\n","mecab-0.996-ko-0.9.2/tests/shiin/dicrc\n","mecab-0.996-ko-0.9.2/tests/shiin/dic.csv\n","mecab-0.996-ko-0.9.2/tests/shiin/test\n","mecab-0.996-ko-0.9.2/tests/shiin/char.def\n","mecab-0.996-ko-0.9.2/tests/shiin/matrix.def\n","mecab-0.996-ko-0.9.2/tests/shiin/mkdic.pl\n","mecab-0.996-ko-0.9.2/tests/shiin/test.gld\n","mecab-0.996-ko-0.9.2/tests/latin/\n","mecab-0.996-ko-0.9.2/tests/latin/unk.def\n","mecab-0.996-ko-0.9.2/tests/latin/dicrc\n","mecab-0.996-ko-0.9.2/tests/latin/dic.csv\n","mecab-0.996-ko-0.9.2/tests/latin/test\n","mecab-0.996-ko-0.9.2/tests/latin/char.def\n","mecab-0.996-ko-0.9.2/tests/latin/matrix.def\n","mecab-0.996-ko-0.9.2/tests/latin/test.gld\n","mecab-0.996-ko-0.9.2/tests/chartype/\n","mecab-0.996-ko-0.9.2/tests/chartype/unk.def\n","mecab-0.996-ko-0.9.2/tests/chartype/dicrc\n","mecab-0.996-ko-0.9.2/tests/chartype/dic.csv\n","mecab-0.996-ko-0.9.2/tests/chartype/test\n","mecab-0.996-ko-0.9.2/tests/chartype/char.def\n","mecab-0.996-ko-0.9.2/tests/chartype/matrix.def\n","mecab-0.996-ko-0.9.2/tests/chartype/test.gld\n","mecab-0.996-ko-0.9.2/tests/run-dics.sh\n","mecab-0.996-ko-0.9.2/tests/ngram/\n","mecab-0.996-ko-0.9.2/tests/ngram/unk.def\n","mecab-0.996-ko-0.9.2/tests/ngram/dicrc\n","mecab-0.996-ko-0.9.2/tests/ngram/dic.csv\n","mecab-0.996-ko-0.9.2/tests/ngram/test\n","mecab-0.996-ko-0.9.2/tests/ngram/char.def\n","mecab-0.996-ko-0.9.2/tests/ngram/matrix.def\n","mecab-0.996-ko-0.9.2/tests/ngram/test.gld\n","mecab-0.996-ko-0.9.2/tests/Makefile.in\n","mecab-0.996-ko-0.9.2/ltmain.sh\n","mecab-0.996-ko-0.9.2/config.rpath\n","mecab-0.996-ko-0.9.2/config.h.in\n","mecab-0.996-ko-0.9.2/mecabrc.in\n","mecab-0.996-ko-0.9.2/GPL\n","mecab-0.996-ko-0.9.2/Makefile.train\n","mecab-0.996-ko-0.9.2/ChangeLog\n","mecab-0.996-ko-0.9.2/install-sh\n","mecab-0.996-ko-0.9.2/AUTHORS\n","mecab-0.996-ko-0.9.2/doc/\n","mecab-0.996-ko-0.9.2/doc/bindings.html\n","mecab-0.996-ko-0.9.2/doc/posid.html\n","mecab-0.996-ko-0.9.2/doc/unk.html\n","mecab-0.996-ko-0.9.2/doc/learn.html\n","mecab-0.996-ko-0.9.2/doc/format.html\n","mecab-0.996-ko-0.9.2/doc/libmecab.html\n","mecab-0.996-ko-0.9.2/doc/mecab.css\n","mecab-0.996-ko-0.9.2/doc/feature.html\n","mecab-0.996-ko-0.9.2/doc/Makefile.am\n","mecab-0.996-ko-0.9.2/doc/soft.html\n","mecab-0.996-ko-0.9.2/doc/en/\n","mecab-0.996-ko-0.9.2/doc/en/bindings.html\n","mecab-0.996-ko-0.9.2/doc/dic-detail.html\n","mecab-0.996-ko-0.9.2/doc/flow.png\n","mecab-0.996-ko-0.9.2/doc/mecab.html\n","mecab-0.996-ko-0.9.2/doc/index.html\n","mecab-0.996-ko-0.9.2/doc/result.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_a.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_eval.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Tagger-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions_vars.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/doxygen.css\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_r.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Lattice.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Tagger.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h_source.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/tabs.css\n","mecab-0.996-ko-0.9.2/doc/doxygen/nav_f.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_b.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/nav_h.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_h.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Model.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/closed.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_l.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__path__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/functions_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_type.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Lattice-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__node__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers_func.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_s.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__dictionary__info__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers_type.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classMeCab_1_1Model-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__dictionary__info__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespaces.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespacemembers.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/namespaceMeCab.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__path__t.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/files.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/structmecab__node__t-members.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/index.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/annotated.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/globals_defs.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/classes.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h-source.html\n","mecab-0.996-ko-0.9.2/doc/doxygen/doxygen.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/tab_b.gif\n","mecab-0.996-ko-0.9.2/doc/doxygen/bc_s.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/open.png\n","mecab-0.996-ko-0.9.2/doc/doxygen/mecab_8h.html\n","mecab-0.996-ko-0.9.2/doc/dic.html\n","mecab-0.996-ko-0.9.2/doc/partial.html\n","mecab-0.996-ko-0.9.2/doc/feature.png\n","mecab-0.996-ko-0.9.2/doc/Makefile.in\n","mecab-0.996-ko-0.9.2/missing\n","mecab-0.996-ko-0.9.2/BSD\n","mecab-0.996-ko-0.9.2/NEWS\n","mecab-0.996-ko-0.9.2/mkinstalldirs\n","mecab-0.996-ko-0.9.2/src/\n","mecab-0.996-ko-0.9.2/src/dictionary.h\n","mecab-0.996-ko-0.9.2/src/writer.h\n","mecab-0.996-ko-0.9.2/src/utils.h\n","mecab-0.996-ko-0.9.2/src/string_buffer.cpp\n","mecab-0.996-ko-0.9.2/src/tokenizer.cpp\n","mecab-0.996-ko-0.9.2/src/make.bat\n","mecab-0.996-ko-0.9.2/src/mecab.h\n","mecab-0.996-ko-0.9.2/src/freelist.h\n","mecab-0.996-ko-0.9.2/src/string_buffer.h\n","mecab-0.996-ko-0.9.2/src/learner_tagger.h\n","mecab-0.996-ko-0.9.2/src/dictionary_compiler.cpp\n","mecab-0.996-ko-0.9.2/src/eval.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-system-eval.cpp\n","mecab-0.996-ko-0.9.2/src/darts.h\n","mecab-0.996-ko-0.9.2/src/param.h\n","mecab-0.996-ko-0.9.2/src/char_property.h\n","mecab-0.996-ko-0.9.2/src/learner_node.h\n","mecab-0.996-ko-0.9.2/src/mecab-dict-gen.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-dict-index.cpp\n","mecab-0.996-ko-0.9.2/src/winmain.h\n","mecab-0.996-ko-0.9.2/src/thread.h\n","mecab-0.996-ko-0.9.2/src/context_id.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.am\n","mecab-0.996-ko-0.9.2/src/connector.h\n","mecab-0.996-ko-0.9.2/src/common.h\n","mecab-0.996-ko-0.9.2/src/dictionary_rewriter.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.msvc.in\n","mecab-0.996-ko-0.9.2/src/dictionary_rewriter.h\n","mecab-0.996-ko-0.9.2/src/feature_index.h\n","mecab-0.996-ko-0.9.2/src/iconv_utils.cpp\n","mecab-0.996-ko-0.9.2/src/char_property.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-test-gen.cpp\n","mecab-0.996-ko-0.9.2/src/tagger.cpp\n","mecab-0.996-ko-0.9.2/src/mecab-cost-train.cpp\n","mecab-0.996-ko-0.9.2/src/learner.cpp\n","mecab-0.996-ko-0.9.2/src/dictionary.cpp\n","mecab-0.996-ko-0.9.2/src/lbfgs.cpp\n","mecab-0.996-ko-0.9.2/src/ucs.h\n","mecab-0.996-ko-0.9.2/src/writer.cpp\n","mecab-0.996-ko-0.9.2/src/learner_tagger.cpp\n","mecab-0.996-ko-0.9.2/src/lbfgs.h\n","mecab-0.996-ko-0.9.2/src/libmecab.cpp\n","mecab-0.996-ko-0.9.2/src/tokenizer.h\n","mecab-0.996-ko-0.9.2/src/mecab.cpp\n","mecab-0.996-ko-0.9.2/src/utils.cpp\n","mecab-0.996-ko-0.9.2/src/dictionary_generator.cpp\n","mecab-0.996-ko-0.9.2/src/param.cpp\n","mecab-0.996-ko-0.9.2/src/context_id.h\n","mecab-0.996-ko-0.9.2/src/mmap.h\n","mecab-0.996-ko-0.9.2/src/viterbi.h\n","mecab-0.996-ko-0.9.2/src/viterbi.cpp\n","mecab-0.996-ko-0.9.2/src/stream_wrapper.h\n","mecab-0.996-ko-0.9.2/src/feature_index.cpp\n","mecab-0.996-ko-0.9.2/src/nbest_generator.h\n","mecab-0.996-ko-0.9.2/src/ucstable.h\n","mecab-0.996-ko-0.9.2/src/nbest_generator.cpp\n","mecab-0.996-ko-0.9.2/src/iconv_utils.h\n","mecab-0.996-ko-0.9.2/src/connector.cpp\n","mecab-0.996-ko-0.9.2/src/Makefile.in\n","mecab-0.996-ko-0.9.2/src/scoped_ptr.h\n","mecab-0.996-ko-0.9.2/Makefile.in\n","checking for a BSD-compatible install... /usr/bin/install -c\n","checking whether build environment is sane... yes\n","checking for a thread-safe mkdir -p... /bin/mkdir -p\n","checking for gawk... no\n","checking for mawk... mawk\n","checking whether make sets $(MAKE)... yes\n","checking for gcc... gcc\n","checking whether the C compiler works... yes\n","checking for C compiler default output file name... a.out\n","checking for suffix of executables... \n","checking whether we are cross compiling... no\n","checking for suffix of object files... o\n","checking whether we are using the GNU C compiler... yes\n","checking whether gcc accepts -g... yes\n","checking for gcc option to accept ISO C89... none needed\n","checking for style of include used by make... GNU\n","checking dependency style of gcc... none\n","checking for g++... g++\n","checking whether we are using the GNU C++ compiler... yes\n","checking whether g++ accepts -g... yes\n","checking dependency style of g++... none\n","checking how to run the C preprocessor... gcc -E\n","checking for grep that handles long lines and -e... /bin/grep\n","checking for egrep... /bin/grep -E\n","checking whether gcc needs -traditional... no\n","checking whether make sets $(MAKE)... (cached) yes\n","checking build system type... x86_64-unknown-linux-gnu\n","checking host system type... x86_64-unknown-linux-gnu\n","checking how to print strings... printf\n","checking for a sed that does not truncate output... /bin/sed\n","checking for fgrep... /bin/grep -F\n","checking for ld used by gcc... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B\n","checking the name lister (/usr/bin/nm -B) interface... BSD nm\n","checking whether ln -s works... yes\n","checking the maximum length of command line arguments... 1572864\n","checking whether the shell understands some XSI constructs... yes\n","checking whether the shell understands \"+=\"... yes\n","checking how to convert x86_64-unknown-linux-gnu file names to x86_64-unknown-linux-gnu format... func_convert_file_noop\n","checking how to convert x86_64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop\n","checking for /usr/bin/ld option to reload object files... -r\n","checking for objdump... objdump\n","checking how to recognize dependent libraries... pass_all\n","checking for dlltool... dlltool\n","checking how to associate runtime and link libraries... printf %s\\n\n","checking for ar... ar\n","checking for archiver @FILE support... @\n","checking for strip... strip\n","checking for ranlib... ranlib\n","checking command to parse /usr/bin/nm -B output from gcc object... ok\n","checking for sysroot... no\n","./configure: line 7378: /usr/bin/file: No such file or directory\n","checking for mt... no\n","checking if : is a manifest tool... no\n","checking for ANSI C header files... yes\n","checking for sys/types.h... yes\n","checking for sys/stat.h... yes\n","checking for stdlib.h... yes\n","checking for string.h... yes\n","checking for memory.h... yes\n","checking for strings.h... yes\n","checking for inttypes.h... yes\n","checking for stdint.h... yes\n","checking for unistd.h... yes\n","checking for dlfcn.h... yes\n","checking for objdir... .libs\n","checking if gcc supports -fno-rtti -fno-exceptions... no\n","checking for gcc option to produce PIC... -fPIC -DPIC\n","checking if gcc PIC flag -fPIC -DPIC works... yes\n","checking if gcc static flag -static works... yes\n","checking if gcc supports -c -o file.o... yes\n","checking if gcc supports -c -o file.o... (cached) yes\n","checking whether the gcc linker (/usr/bin/ld) supports shared libraries... yes\n","checking whether -lc should be explicitly linked in... no\n","checking dynamic linker characteristics... GNU/Linux ld.so\n","checking how to hardcode library paths into programs... immediate\n","checking whether stripping libraries is possible... yes\n","checking if libtool supports shared libraries... yes\n","checking whether to build shared libraries... yes\n","checking whether to build static libraries... yes\n","checking how to run the C++ preprocessor... g++ -E\n","checking for ld used by g++... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking whether the g++ linker (/usr/bin/ld) supports shared libraries... yes\n","checking for g++ option to produce PIC... -fPIC -DPIC\n","checking if g++ PIC flag -fPIC -DPIC works... yes\n","checking if g++ static flag -static works... yes\n","checking if g++ supports -c -o file.o... yes\n","checking if g++ supports -c -o file.o... (cached) yes\n","checking whether the g++ linker (/usr/bin/ld) supports shared libraries... yes\n","checking dynamic linker characteristics... (cached) GNU/Linux ld.so\n","checking how to hardcode library paths into programs... immediate\n","checking for library containing strerror... none required\n","checking whether byte ordering is bigendian... no\n","checking for ld used by GCC... /usr/bin/ld\n","checking if the linker (/usr/bin/ld) is GNU ld... yes\n","checking for shared library run path origin... done\n","checking for iconv... yes\n","checking for working iconv... yes\n","checking for iconv declaration... \n","         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n","checking for ANSI C header files... (cached) yes\n","checking for an ANSI C-conforming const... yes\n","checking whether byte ordering is bigendian... (cached) no\n","checking for string.h... (cached) yes\n","checking for stdlib.h... (cached) yes\n","checking for unistd.h... (cached) yes\n","checking fcntl.h usability... yes\n","checking fcntl.h presence... yes\n","checking for fcntl.h... yes\n","checking for stdint.h... (cached) yes\n","checking for sys/stat.h... (cached) yes\n","checking sys/mman.h usability... yes\n","checking sys/mman.h presence... yes\n","checking for sys/mman.h... yes\n","checking sys/times.h usability... yes\n","checking sys/times.h presence... yes\n","checking for sys/times.h... yes\n","checking for sys/types.h... (cached) yes\n","checking dirent.h usability... yes\n","checking dirent.h presence... yes\n","checking for dirent.h... yes\n","checking ctype.h usability... yes\n","checking ctype.h presence... yes\n","checking for ctype.h... yes\n","checking for sys/types.h... (cached) yes\n","checking io.h usability... no\n","checking io.h presence... no\n","checking for io.h... no\n","checking windows.h usability... no\n","checking windows.h presence... no\n","checking for windows.h... no\n","checking pthread.h usability... yes\n","checking pthread.h presence... yes\n","checking for pthread.h... yes\n","checking for off_t... yes\n","checking for size_t... yes\n","checking size of char... 1\n","checking size of short... 2\n","checking size of int... 4\n","checking size of long... 8\n","checking size of long long... 8\n","checking size of size_t... 8\n","checking for size_t... (cached) yes\n","checking for unsigned long long int... yes\n","checking for stdlib.h... (cached) yes\n","checking for unistd.h... (cached) yes\n","checking for sys/param.h... yes\n","checking for getpagesize... yes\n","checking for working mmap... yes\n","checking for main in -lstdc++... yes\n","checking for pthread_create in -lpthread... yes\n","checking for pthread_join in -lpthread... yes\n","checking for getenv... yes\n","checking for opendir... yes\n","checking whether make is GNU Make... yes\n","checking if g++ supports stl <vector> (required)... yes\n","checking if g++ supports stl <list> (required)... yes\n","checking if g++ supports stl <map> (required)... yes\n","checking if g++ supports stl <set> (required)... yes\n","checking if g++ supports stl <queue> (required)... yes\n","checking if g++ supports stl <functional> (required)... yes\n","checking if g++ supports stl <algorithm> (required)... yes\n","checking if g++ supports stl <string> (required)... yes\n","checking if g++ supports stl <iostream> (required)... yes\n","checking if g++ supports stl <sstream> (required)... yes\n","checking if g++ supports stl <fstream> (required)... yes\n","checking if g++ supports template <class T> (required)... yes\n","checking if g++ supports const_cast<> (required)... yes\n","checking if g++ supports static_cast<> (required)... yes\n","checking if g++ supports reinterpret_cast<> (required)... yes\n","checking if g++ supports namespaces (required) ... yes\n","checking if g++ supports __thread (optional)... yes\n","checking if g++ supports template <class T> (required)... yes\n","checking if g++ supports GCC native atomic operations (optional)... yes\n","checking if g++ supports OSX native atomic operations (optional)... no\n","checking if g++ environment provides all required features... yes\n","configure: creating ./config.status\n","config.status: creating Makefile\n","config.status: creating src/Makefile\n","config.status: creating src/Makefile.msvc\n","config.status: creating man/Makefile\n","config.status: creating doc/Makefile\n","config.status: creating tests/Makefile\n","config.status: creating swig/version.h\n","config.status: creating mecab.iss\n","config.status: creating mecab-config\n","config.status: creating mecabrc\n","config.status: creating config.h\n","config.status: executing depfiles commands\n","config.status: executing libtool commands\n","config.status: executing default commands\n","make  all-recursive\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making all in src\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o viterbi.lo viterbi.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c viterbi.cpp  -fPIC -DPIC -o .libs/viterbi.o\n","In file included from \u001b[01m\u001b[Kviterbi.cpp:14:0\u001b[m\u001b[K:\n","\u001b[01m\u001b[Kparam.h:30:13:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K'\u001b[01m\u001b[KTarget {anonymous}::lexical_cast(Source) [with Target = std::__cxx11::basic_string<char>; Source = std::__cxx11::basic_string<char>]\u001b[m\u001b[K' defined but not used [\u001b[01;35m\u001b[K-Wunused-function\u001b[m\u001b[K]\n"," std::string \u001b[01;35m\u001b[Klexical_cast<std::string, std::string>\u001b[m\u001b[K(std::string arg) {\n","             \u001b[01;35m\u001b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c viterbi.cpp -o viterbi.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o tagger.lo tagger.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tagger.cpp  -fPIC -DPIC -o .libs/tagger.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tagger.cpp -o tagger.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o utils.lo utils.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c utils.cpp  -fPIC -DPIC -o .libs/utils.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c utils.cpp -o utils.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o eval.lo eval.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c eval.cpp  -fPIC -DPIC -o .libs/eval.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c eval.cpp -o eval.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o iconv_utils.lo iconv_utils.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c iconv_utils.cpp  -fPIC -DPIC -o .libs/iconv_utils.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c iconv_utils.cpp -o iconv_utils.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_rewriter.lo dictionary_rewriter.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_rewriter.cpp  -fPIC -DPIC -o .libs/dictionary_rewriter.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_rewriter.cpp -o dictionary_rewriter.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_generator.lo dictionary_generator.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_generator.cpp  -fPIC -DPIC -o .libs/dictionary_generator.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_generator.cpp -o dictionary_generator.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary_compiler.lo dictionary_compiler.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_compiler.cpp  -fPIC -DPIC -o .libs/dictionary_compiler.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary_compiler.cpp -o dictionary_compiler.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o context_id.lo context_id.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c context_id.cpp  -fPIC -DPIC -o .libs/context_id.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c context_id.cpp -o context_id.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o connector.lo connector.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c connector.cpp  -fPIC -DPIC -o .libs/connector.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c connector.cpp -o connector.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o nbest_generator.lo nbest_generator.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c nbest_generator.cpp  -fPIC -DPIC -o .libs/nbest_generator.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c nbest_generator.cpp -o nbest_generator.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o writer.lo writer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c writer.cpp  -fPIC -DPIC -o .libs/writer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c writer.cpp -o writer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o string_buffer.lo string_buffer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c string_buffer.cpp  -fPIC -DPIC -o .libs/string_buffer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c string_buffer.cpp -o string_buffer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o param.lo param.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c param.cpp  -fPIC -DPIC -o .libs/param.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c param.cpp -o param.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o tokenizer.lo tokenizer.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tokenizer.cpp  -fPIC -DPIC -o .libs/tokenizer.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c tokenizer.cpp -o tokenizer.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o char_property.lo char_property.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c char_property.cpp  -fPIC -DPIC -o .libs/char_property.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c char_property.cpp -o char_property.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o dictionary.lo dictionary.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary.cpp  -fPIC -DPIC -o .libs/dictionary.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c dictionary.cpp -o dictionary.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o feature_index.lo feature_index.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c feature_index.cpp  -fPIC -DPIC -o .libs/feature_index.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c feature_index.cpp -o feature_index.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o lbfgs.lo lbfgs.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c lbfgs.cpp  -fPIC -DPIC -o .libs/lbfgs.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c lbfgs.cpp -o lbfgs.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o learner_tagger.lo learner_tagger.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner_tagger.cpp  -fPIC -DPIC -o .libs/learner_tagger.o\n","\u001b[01m\u001b[Klearner_tagger.cpp:25:7:\u001b[m\u001b[K \u001b[01;35m\u001b[Kwarning: \u001b[m\u001b[K'\u001b[01m\u001b[Kchar* MeCab::{anonymous}::mystrdup(const string&)\u001b[m\u001b[K' defined but not used [\u001b[01;35m\u001b[K-Wunused-function\u001b[m\u001b[K]\n"," char *\u001b[01;35m\u001b[Kmystrdup\u001b[m\u001b[K(const std::string &str) {\n","       \u001b[01;35m\u001b[K^~~~~~~~\u001b[m\u001b[K\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner_tagger.cpp -o learner_tagger.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o learner.lo learner.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner.cpp  -fPIC -DPIC -o .libs/learner.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c learner.cpp -o learner.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o libmecab.lo libmecab.cpp\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c libmecab.cpp  -fPIC -DPIC -o .libs/libmecab.o\n","libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102 -DMECAB_DEFAULT_RC=\\\"/usr/local/etc/mecabrc\\\" -O3 -Wall -c libmecab.cpp -o libmecab.o >/dev/null 2>&1\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall  -no-undefined -version-info 2:0:0  -o libmecab.la -rpath /usr/local/lib viterbi.lo tagger.lo utils.lo eval.lo iconv_utils.lo dictionary_rewriter.lo dictionary_generator.lo dictionary_compiler.lo context_id.lo connector.lo nbest_generator.lo writer.lo string_buffer.lo param.lo tokenizer.lo char_property.lo dictionary.lo feature_index.lo lbfgs.lo learner_tagger.lo learner.lo libmecab.lo  -lpthread -lpthread  -lstdc++ \n","libtool: link: g++  -fPIC -DPIC -shared -nostdlib /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o  .libs/viterbi.o .libs/tagger.o .libs/utils.o .libs/eval.o .libs/iconv_utils.o .libs/dictionary_rewriter.o .libs/dictionary_generator.o .libs/dictionary_compiler.o .libs/context_id.o .libs/connector.o .libs/nbest_generator.o .libs/writer.o .libs/string_buffer.o .libs/param.o .libs/tokenizer.o .libs/char_property.o .libs/dictionary.o .libs/feature_index.o .libs/lbfgs.o .libs/learner_tagger.o .libs/learner.o .libs/libmecab.o   -lpthread -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/local/cuda/lib64/stubs -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. -lstdc++ -lm -lc -lgcc_s /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o  -O3   -Wl,-soname -Wl,libmecab.so.2 -o .libs/libmecab.so.2.0.0\n","libtool: link: (cd \".libs\" && rm -f \"libmecab.so.2\" && ln -s \"libmecab.so.2.0.0\" \"libmecab.so.2\")\n","libtool: link: (cd \".libs\" && rm -f \"libmecab.so\" && ln -s \"libmecab.so.2.0.0\" \"libmecab.so\")\n","libtool: link: ar cru .libs/libmecab.a  viterbi.o tagger.o utils.o eval.o iconv_utils.o dictionary_rewriter.o dictionary_generator.o dictionary_compiler.o context_id.o connector.o nbest_generator.o writer.o string_buffer.o param.o tokenizer.o char_property.o dictionary.o feature_index.o lbfgs.o learner_tagger.o learner.o libmecab.o\n","ar: `u' modifier ignored since `D' is the default (see `U')\n","libtool: link: ranlib .libs/libmecab.a\n","libtool: link: ( cd \".libs\" && rm -f \"libmecab.la\" && ln -s \"../libmecab.la\" \"libmecab.la\" )\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab.o mecab.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab mecab.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab mecab.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-dict-index.o mecab-dict-index.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-dict-index mecab-dict-index.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-dict-index mecab-dict-index.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-dict-gen.o mecab-dict-gen.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-dict-gen mecab-dict-gen.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-dict-gen mecab-dict-gen.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-cost-train.o mecab-cost-train.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-cost-train mecab-cost-train.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-cost-train mecab-cost-train.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-system-eval.o mecab-system-eval.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-system-eval mecab-system-eval.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-system-eval mecab-system-eval.o  ./.libs/libmecab.so -lpthread -lstdc++\n","g++ -DHAVE_CONFIG_H -I. -I.. -DDIC_VERSION=102   -DMECAB_DEFAULT_RC=\"\\\"/usr/local/etc/mecabrc\\\"\"    -O3 -Wall  -c -o mecab-test-gen.o mecab-test-gen.cpp\n","/bin/bash ../libtool --tag=CXX   --mode=link g++  -O3 -Wall    -o mecab-test-gen mecab-test-gen.o libmecab.la -lpthread -lpthread  -lstdc++ \n","libtool: link: g++ -O3 -Wall -o .libs/mecab-test-gen mecab-test-gen.o  ./.libs/libmecab.so -lpthread -lstdc++\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making all in man\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making all in doc\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making all in tests\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Nothing to be done for 'all'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making check in src\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making check in man\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making check in doc\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[1]: Nothing to be done for 'check'.\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making check in tests\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make  check-TESTS\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 177\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 178x178\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 83\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 84x84\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 450\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 162\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 3x3\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 4\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 11\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 1\n","reading ./matrix.def ... 1x1\n","\n","done!\n","./pos-id.def is not found. minimum setting is used\n","reading ./unk.def ... 2\n","emitting double-array: 100% |###########################################| \n","./model.def is not found. skipped.\n","./pos-id.def is not found. minimum setting is used\n","reading ./dic.csv ... 1\n","reading ./matrix.def ... 1x1\n","\n","done!\n","PASS: run-dics.sh\n","PASS: run-eval.sh\n","seed/pos-id.def is not found. minimum setting is used\n","reading seed/unk.def ... 40\n","emitting double-array: 100% |###########################################| \n","seed/model.def is not found. skipped.\n","seed/pos-id.def is not found. minimum setting is used\n","reading seed/dic.csv ... 4335\n","emitting double-array: 100% |###########################################| \n","reading seed/matrix.def ... 1x1\n","\n","done!\n","reading corpus ...\n","Number of sentences: 34\n","Number of features:  64108\n","eta:                 0.00005\n","freq:                1\n","eval-size:           6\n","unk-eval-size:       4\n","threads:             1\n","charset:             EUC-JP\n","C(sigma^2):          1.00000\n","\n","iter=0 err=1.00000 F=0.35771 target=2406.28355 diff=1.00000\n","iter=1 err=0.97059 F=0.65652 target=1484.25231 diff=0.38318\n","iter=2 err=0.91176 F=0.79331 target=863.32765 diff=0.41834\n","iter=3 err=0.85294 F=0.89213 target=596.72480 diff=0.30881\n","iter=4 err=0.61765 F=0.95467 target=336.30744 diff=0.43641\n","iter=5 err=0.50000 F=0.96702 target=246.53039 diff=0.26695\n","iter=6 err=0.35294 F=0.95472 target=188.93963 diff=0.23361\n","iter=7 err=0.20588 F=0.99106 target=168.62665 diff=0.10751\n","iter=8 err=0.05882 F=0.99777 target=158.64865 diff=0.05917\n","iter=9 err=0.08824 F=0.99665 target=154.14530 diff=0.02839\n","iter=10 err=0.08824 F=0.99665 target=151.94257 diff=0.01429\n","iter=11 err=0.02941 F=0.99888 target=147.20825 diff=0.03116\n","iter=12 err=0.00000 F=1.00000 target=147.34956 diff=0.00096\n","iter=13 err=0.02941 F=0.99888 target=146.32592 diff=0.00695\n","iter=14 err=0.00000 F=1.00000 target=145.77299 diff=0.00378\n","iter=15 err=0.02941 F=0.99888 target=145.24641 diff=0.00361\n","iter=16 err=0.00000 F=1.00000 target=144.96490 diff=0.00194\n","iter=17 err=0.02941 F=0.99888 target=144.90246 diff=0.00043\n","iter=18 err=0.00000 F=1.00000 target=144.75959 diff=0.00099\n","iter=19 err=0.00000 F=1.00000 target=144.71727 diff=0.00029\n","iter=20 err=0.00000 F=1.00000 target=144.66337 diff=0.00037\n","iter=21 err=0.00000 F=1.00000 target=144.61349 diff=0.00034\n","iter=22 err=0.00000 F=1.00000 target=144.62987 diff=0.00011\n","iter=23 err=0.00000 F=1.00000 target=144.60060 diff=0.00020\n","iter=24 err=0.00000 F=1.00000 target=144.59125 diff=0.00006\n","iter=25 err=0.00000 F=1.00000 target=144.58619 diff=0.00004\n","iter=26 err=0.00000 F=1.00000 target=144.58219 diff=0.00003\n","iter=27 err=0.00000 F=1.00000 target=144.58059 diff=0.00001\n","\n","Done! writing model file ... \n","model-ipadic.c1.0.f1.model is not a binary model. reopen it as text mode...\n","reading seed/unk.def ... 40\n","reading seed/dic.csv ... 4335\n","emitting model-ipadic.c1.0.f1.dic/left-id.def/ model-ipadic.c1.0.f1.dic/right-id.def\n","emitting model-ipadic.c1.0.f1.dic/unk.def ... 40\n","emitting model-ipadic.c1.0.f1.dic/dic.csv ... 4335\n","emitting matrix      : 100% |###########################################| \n","copying seed/char.def to model-ipadic.c1.0.f1.dic/char.def\n","copying seed/rewrite.def to model-ipadic.c1.0.f1.dic/rewrite.def\n","copying seed/dicrc to model-ipadic.c1.0.f1.dic/dicrc\n","copying seed/feature.def to model-ipadic.c1.0.f1.dic/feature.def\n","copying model-ipadic.c1.0.f1.model to model-ipadic.c1.0.f1.dic/model.def\n","\n","done!\n","model-ipadic.c1.0.f1.dic/pos-id.def is not found. minimum setting is used\n","reading model-ipadic.c1.0.f1.dic/unk.def ... 40\n","emitting double-array: 100% |###########################################| \n","model-ipadic.c1.0.f1.dic/pos-id.def is not found. minimum setting is used\n","reading model-ipadic.c1.0.f1.dic/dic.csv ... 4335\n","emitting double-array: 100% |###########################################| \n","reading model-ipadic.c1.0.f1.dic/matrix.def ... 346x346\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","              precision          recall         F\n","LEVEL 0:    12.8959(57/442) 11.8998(57/479) 12.3779\n","LEVEL 1:    12.2172(54/442) 11.2735(54/479) 11.7264\n","LEVEL 2:    11.7647(52/442) 10.8559(52/479) 11.2921\n","LEVEL 4:    11.7647(52/442) 10.8559(52/479) 11.2921\n","PASS: run-cost-train.sh\n","==================\n","All 3 tests passed\n","==================\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Making install in src\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","test -z \"/usr/local/lib\" || /bin/mkdir -p \"/usr/local/lib\"\n"," /bin/bash ../libtool   --mode=install /usr/bin/install -c   libmecab.la '/usr/local/lib'\n","libtool: install: /usr/bin/install -c .libs/libmecab.so.2.0.0 /usr/local/lib/libmecab.so.2.0.0\n","libtool: install: (cd /usr/local/lib && { ln -s -f libmecab.so.2.0.0 libmecab.so.2 || { rm -f libmecab.so.2 && ln -s libmecab.so.2.0.0 libmecab.so.2; }; })\n","libtool: install: (cd /usr/local/lib && { ln -s -f libmecab.so.2.0.0 libmecab.so || { rm -f libmecab.so && ln -s libmecab.so.2.0.0 libmecab.so; }; })\n","libtool: install: /usr/bin/install -c .libs/libmecab.lai /usr/local/lib/libmecab.la\n","libtool: install: /usr/bin/install -c .libs/libmecab.a /usr/local/lib/libmecab.a\n","libtool: install: chmod 644 /usr/local/lib/libmecab.a\n","libtool: install: ranlib /usr/local/lib/libmecab.a\n","libtool: finish: PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin:/sbin\" ldconfig -n /usr/local/lib\n","----------------------------------------------------------------------\n","Libraries have been installed in:\n","   /usr/local/lib\n","\n","If you ever happen to want to link against installed libraries\n","in a given directory, LIBDIR, you must either use libtool, and\n","specify the full pathname of the library, or use the `-LLIBDIR'\n","flag during linking and do at least one of the following:\n","   - add LIBDIR to the `LD_LIBRARY_PATH' environment variable\n","     during execution\n","   - add LIBDIR to the `LD_RUN_PATH' environment variable\n","     during linking\n","   - use the `-Wl,-rpath -Wl,LIBDIR' linker flag\n","   - have your system administrator add LIBDIR to `/etc/ld.so.conf'\n","\n","See any operating system documentation about shared libraries for\n","more information, such as the ld(1) and ld.so(8) manual pages.\n","----------------------------------------------------------------------\n","test -z \"/usr/local/bin\" || /bin/mkdir -p \"/usr/local/bin\"\n","  /bin/bash ../libtool   --mode=install /usr/bin/install -c mecab '/usr/local/bin'\n","libtool: install: /usr/bin/install -c .libs/mecab /usr/local/bin/mecab\n","test -z \"/usr/local/libexec/mecab\" || /bin/mkdir -p \"/usr/local/libexec/mecab\"\n","  /bin/bash ../libtool   --mode=install /usr/bin/install -c mecab-dict-index mecab-dict-gen mecab-cost-train mecab-system-eval mecab-test-gen '/usr/local/libexec/mecab'\n","libtool: install: /usr/bin/install -c .libs/mecab-dict-index /usr/local/libexec/mecab/mecab-dict-index\n","libtool: install: /usr/bin/install -c .libs/mecab-dict-gen /usr/local/libexec/mecab/mecab-dict-gen\n","libtool: install: /usr/bin/install -c .libs/mecab-cost-train /usr/local/libexec/mecab/mecab-cost-train\n","libtool: install: /usr/bin/install -c .libs/mecab-system-eval /usr/local/libexec/mecab/mecab-system-eval\n","libtool: install: /usr/bin/install -c .libs/mecab-test-gen /usr/local/libexec/mecab/mecab-test-gen\n","test -z \"/usr/local/include\" || /bin/mkdir -p \"/usr/local/include\"\n"," /usr/bin/install -c -m 644 mecab.h '/usr/local/include'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/src'\n","Making install in man\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","test -z \"/usr/local/share/man/man1\" || /bin/mkdir -p \"/usr/local/share/man/man1\"\n"," /usr/bin/install -c -m 644 mecab.1 '/usr/local/share/man/man1'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/man'\n","Making install in doc\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","make[2]: Nothing to be done for 'install-data-am'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/doc'\n","Making install in tests\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[2]: Nothing to be done for 'install-exec-am'.\n","make[2]: Nothing to be done for 'install-data-am'.\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2/tests'\n","make[1]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[2]: Entering directory '/tmp/mecab-0.996-ko-0.9.2'\n","test -z \"/usr/local/bin\" || /bin/mkdir -p \"/usr/local/bin\"\n"," /usr/bin/install -c mecab-config '/usr/local/bin'\n","test -z \"/usr/local/etc\" || /bin/mkdir -p \"/usr/local/etc\"\n"," /usr/bin/install -c -m 644 mecabrc '/usr/local/etc'\n","make[2]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","make[1]: Leaving directory '/tmp/mecab-0.996-ko-0.9.2'\n","Install mecab-ko-dic\n","Install mecab-ko-dic\n","  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n","100 47.4M  100 47.4M    0     0  39.0M      0  0:00:01  0:00:01 --:--:--  323M\n","mecab-ko-dic-2.1.1-20180720/\n","mecab-ko-dic-2.1.1-20180720/configure\n","mecab-ko-dic-2.1.1-20180720/COPYING\n","mecab-ko-dic-2.1.1-20180720/autogen.sh\n","mecab-ko-dic-2.1.1-20180720/Place-station.csv\n","mecab-ko-dic-2.1.1-20180720/NNG.csv\n","mecab-ko-dic-2.1.1-20180720/README\n","mecab-ko-dic-2.1.1-20180720/EF.csv\n","mecab-ko-dic-2.1.1-20180720/MAG.csv\n","mecab-ko-dic-2.1.1-20180720/Preanalysis.csv\n","mecab-ko-dic-2.1.1-20180720/NNB.csv\n","mecab-ko-dic-2.1.1-20180720/Person-actor.csv\n","mecab-ko-dic-2.1.1-20180720/VV.csv\n","mecab-ko-dic-2.1.1-20180720/Makefile.in\n","mecab-ko-dic-2.1.1-20180720/matrix.def\n","mecab-ko-dic-2.1.1-20180720/EC.csv\n","mecab-ko-dic-2.1.1-20180720/NNBC.csv\n","mecab-ko-dic-2.1.1-20180720/clean\n","mecab-ko-dic-2.1.1-20180720/ChangeLog\n","mecab-ko-dic-2.1.1-20180720/J.csv\n","mecab-ko-dic-2.1.1-20180720/.keep\n","mecab-ko-dic-2.1.1-20180720/feature.def\n","mecab-ko-dic-2.1.1-20180720/Foreign.csv\n","mecab-ko-dic-2.1.1-20180720/XPN.csv\n","mecab-ko-dic-2.1.1-20180720/EP.csv\n","mecab-ko-dic-2.1.1-20180720/NR.csv\n","mecab-ko-dic-2.1.1-20180720/left-id.def\n","mecab-ko-dic-2.1.1-20180720/Place.csv\n","mecab-ko-dic-2.1.1-20180720/Symbol.csv\n","mecab-ko-dic-2.1.1-20180720/dicrc\n","mecab-ko-dic-2.1.1-20180720/NP.csv\n","mecab-ko-dic-2.1.1-20180720/ETM.csv\n","mecab-ko-dic-2.1.1-20180720/IC.csv\n","mecab-ko-dic-2.1.1-20180720/Place-address.csv\n","mecab-ko-dic-2.1.1-20180720/Group.csv\n","mecab-ko-dic-2.1.1-20180720/model.def\n","mecab-ko-dic-2.1.1-20180720/XSN.csv\n","mecab-ko-dic-2.1.1-20180720/INSTALL\n","mecab-ko-dic-2.1.1-20180720/rewrite.def\n","mecab-ko-dic-2.1.1-20180720/Inflect.csv\n","mecab-ko-dic-2.1.1-20180720/configure.ac\n","mecab-ko-dic-2.1.1-20180720/NNP.csv\n","mecab-ko-dic-2.1.1-20180720/CoinedWord.csv\n","mecab-ko-dic-2.1.1-20180720/XSV.csv\n","mecab-ko-dic-2.1.1-20180720/pos-id.def\n","mecab-ko-dic-2.1.1-20180720/Makefile.am\n","mecab-ko-dic-2.1.1-20180720/unk.def\n","mecab-ko-dic-2.1.1-20180720/missing\n","mecab-ko-dic-2.1.1-20180720/VCP.csv\n","mecab-ko-dic-2.1.1-20180720/install-sh\n","mecab-ko-dic-2.1.1-20180720/Hanja.csv\n","mecab-ko-dic-2.1.1-20180720/MAJ.csv\n","mecab-ko-dic-2.1.1-20180720/XSA.csv\n","mecab-ko-dic-2.1.1-20180720/Wikipedia.csv\n","mecab-ko-dic-2.1.1-20180720/tools/\n","mecab-ko-dic-2.1.1-20180720/tools/add-userdic.sh\n","mecab-ko-dic-2.1.1-20180720/tools/mecab-bestn.sh\n","mecab-ko-dic-2.1.1-20180720/tools/convert_for_using_store.sh\n","mecab-ko-dic-2.1.1-20180720/user-dic/\n","mecab-ko-dic-2.1.1-20180720/user-dic/nnp.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/place.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/person.csv\n","mecab-ko-dic-2.1.1-20180720/user-dic/README.md\n","mecab-ko-dic-2.1.1-20180720/NorthKorea.csv\n","mecab-ko-dic-2.1.1-20180720/VX.csv\n","mecab-ko-dic-2.1.1-20180720/right-id.def\n","mecab-ko-dic-2.1.1-20180720/VA.csv\n","mecab-ko-dic-2.1.1-20180720/char.def\n","mecab-ko-dic-2.1.1-20180720/NEWS\n","mecab-ko-dic-2.1.1-20180720/MM.csv\n","mecab-ko-dic-2.1.1-20180720/ETN.csv\n","mecab-ko-dic-2.1.1-20180720/AUTHORS\n","mecab-ko-dic-2.1.1-20180720/Person.csv\n","mecab-ko-dic-2.1.1-20180720/XR.csv\n","mecab-ko-dic-2.1.1-20180720/VCN.csv\n","Looking in current directory for macros.\n","configure.ac:2: warning: AM_INIT_AUTOMAKE: two- and three-arguments forms are deprecated.  For more info, see:\n","configure.ac:2: http://www.gnu.org/software/automake/manual/automake.html#Modernize-AM_005fINIT_005fAUTOMAKE-invocation\n","checking for a BSD-compatible install... /usr/bin/install -c\n","checking whether build environment is sane... yes\n","/tmp/mecab-ko-dic-2.1.1-20180720/missing: Unknown `--is-lightweight' option\n","Try `/tmp/mecab-ko-dic-2.1.1-20180720/missing --help' for more information\n","configure: WARNING: 'missing' script is too old or missing\n","checking for a thread-safe mkdir -p... /bin/mkdir -p\n","checking for gawk... no\n","checking for mawk... mawk\n","checking whether make sets $(MAKE)... yes\n","checking whether make supports nested variables... yes\n","checking for mecab-config... /usr/local/bin/mecab-config\n","checking that generated files are newer than configure... done\n","configure: creating ./config.status\n","config.status: creating Makefile\n","/usr/local/lib\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n","/usr/local/libexec/mecab/mecab-dict-index -d . -o . -f UTF-8 -t UTF-8\n","reading ./unk.def ... 13\n","emitting double-array: 100% |###########################################| \n","reading ./Place-station.csv ... 1145\n","reading ./VA.csv ... 2360\n","reading ./J.csv ... 416\n","reading ./Person.csv ... 196459\n","reading ./EF.csv ... 1820\n","reading ./Inflect.csv ... 44820\n","reading ./Hanja.csv ... 125750\n","reading ./Place-address.csv ... 19301\n","reading ./VCP.csv ... 9\n","reading ./MM.csv ... 453\n","reading ./XR.csv ... 3637\n","reading ./Group.csv ... 3176\n","reading ./NNBC.csv ... 677\n","reading ./IC.csv ... 1305\n","reading ./NorthKorea.csv ... 3\n","reading ./MAG.csv ... 14242\n","reading ./Foreign.csv ... 11690\n","reading ./Symbol.csv ... 16\n","reading ./NR.csv ... 482\n","reading ./ETM.csv ... 133\n","reading ./NP.csv ... 342\n","reading ./EC.csv ... 2547\n","reading ./XSN.csv ... 124\n","reading ./XPN.csv ... 83\n","reading ./NNG.csv ... 208524\n","reading ./MAJ.csv ... 240\n","reading ./NNB.csv ... 140\n","reading ./Wikipedia.csv ... 36762\n","reading ./XSV.csv ... 23\n","reading ./NNP.csv ... 2371\n","reading ./Place.csv ... 30303\n","reading ./VCN.csv ... 7\n","reading ./VV.csv ... 7331\n","reading ./XSA.csv ... 19\n","reading ./Person-actor.csv ... 99230\n","reading ./ETN.csv ... 14\n","reading ./CoinedWord.csv ... 148\n","reading ./VX.csv ... 125\n","reading ./EP.csv ... 51\n","reading ./Preanalysis.csv ... 5\n","emitting double-array: 100% |###########################################| \n","reading ./matrix.def ... 3822x2693\n","emitting matrix      : 100% |###########################################| \n","\n","done!\n","echo To enable dictionary, rewrite /usr/local/etc/mecabrc as \\\"dicdir = /usr/local/lib/mecab/dic/mecab-ko-dic\\\"\n","To enable dictionary, rewrite /usr/local/etc/mecabrc as \"dicdir = /usr/local/lib/mecab/dic/mecab-ko-dic\"\n","make[1]: Entering directory '/tmp/mecab-ko-dic-2.1.1-20180720'\n","make[1]: Nothing to be done for 'install-exec-am'.\n"," /bin/mkdir -p '/usr/local/lib/mecab/dic/mecab-ko-dic'\n"," /usr/bin/install -c -m 644 model.bin matrix.bin char.bin sys.dic unk.dic left-id.def right-id.def rewrite.def pos-id.def dicrc '/usr/local/lib/mecab/dic/mecab-ko-dic'\n","make[1]: Leaving directory '/tmp/mecab-ko-dic-2.1.1-20180720'\n","Install mecab-python\n","/tmp /tmp/mecab-ko-dic-2.1.1-20180720\n","Cloning into 'mecab-python-0.996'...\n","Unpacking objects: 100% (17/17), done.\n","/tmp/mecab-ko-dic-2.1.1-20180720\n","Processing /tmp/mecab-python-0.996\n","\u001b[33m  DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n","   pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\u001b[0m\n","Building wheels for collected packages: mecab-python\n","  Building wheel for mecab-python (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for mecab-python: filename=mecab_python-0.996_ko_0.9.2-cp37-cp37m-linux_x86_64.whl size=141814 sha256=8e32f7bbd86bd4dd529a2057834ecbfee01ed629f2601aa0f08fd65ee2762402\n","  Stored in directory: /root/.cache/pip/wheels/40/7b/9f/2922869bef86c3354ae7034f7a3647c573ee1997c2dad0290a\n","\u001b[33m  WARNING: Built wheel for mecab-python is invalid: Metadata 1.2 mandates PEP 440 version, but '0.996-ko-0.9.2' is not\u001b[0m\n","Failed to build mecab-python\n","Installing collected packages: mecab-python\n","    Running setup.py install for mecab-python ... \u001b[?25l\u001b[?25hdone\n","\u001b[33m  DEPRECATION: mecab-python was installed using the legacy 'setup.py install' method, because a wheel could not be built for it. A possible replacement is to fix the wheel build issue reported above. You can find discussion regarding this at https://github.com/pypa/pip/issues/8368.\u001b[0m\n","Successfully installed mecab-python-0.996-ko-0.9.2\n","Done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"R5j0MOc6ScMU","executionInfo":{"status":"ok","timestamp":1626991402288,"user_tz":-540,"elapsed":29,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["import sys\n","sys.path.append('/content/drive/MyDrive/'+FOLDERNAME+LIB_PATH)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"iiSuaZwdshvJ","executionInfo":{"status":"ok","timestamp":1626991435372,"user_tz":-540,"elapsed":33109,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["from preprocess import get_tokenizer, post_processing\n","from bert.tokenization import FullTokenizer\n","import tensorflow as tf\n","import tensorflow.keras as k\n","import tensorflow.keras.backend as K\n","import tensorflow.keras.layers as L\n","import numpy as np\n","import sys, os, random, argparse, re, collections\n","from gensim.models import Word2Vec\n","from collections import defaultdict\n","from scipy.stats import truncnorm"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"x1n-Fa7HjDy_","executionInfo":{"status":"ok","timestamp":1626991435780,"user_tz":-540,"elapsed":440,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["class Tuner(object):\n","\n","    def __init__(self, train_corpus_fname=None, tokenized_train_corpus_fname=None,\n","                 test_corpus_fname=None, tokenized_test_corpus_fname=None,\n","                 model_name=\"bert\", model_save_path=None, vocab_fname=None, eval_every=1000,\n","                 batch_size=32, num_epochs=10, dropout_keep_prob_rate=0.9, model_ckpt_path=None,\n","                 sp_model_path=None, batch_verbose=True):\n","        # configurations\n","        self.model_name = model_name\n","        self.eval_every = eval_every\n","        self.model_ckpt_path = model_ckpt_path\n","        self.model_save_path = model_save_path\n","        self.batch_size = batch_size\n","        self.num_epochs = num_epochs\n","        self.dropout_keep_prob_rate = dropout_keep_prob_rate\n","        self.best_valid_score = 0.0\n","        if not os.path.exists(model_save_path):\n","            os.mkdir(model_save_path)\n","        # define tokenizer\n","        if self.model_name == \"bert\":\n","            self.tokenizer = FullTokenizer(vocab_file=vocab_fname, do_lower_case=False)\n","        elif self.model_name == \"xlnet\":\n","            sp = spm.SentencePieceProcessor()\n","            sp.Load(sp_model_path)\n","            self.tokenizer = sp\n","        else:\n","            self.tokenizer = get_tokenizer(\"mecab\")\n","        # load or tokenize corpus\n","        self.train_data, self.train_data_size = self.load_or_tokenize_corpus(train_corpus_fname, tokenized_train_corpus_fname)\n","        self.test_data, self.test_data_size = self.load_or_tokenize_corpus(test_corpus_fname, tokenized_test_corpus_fname)\n","\n","        self.batch_verbose = batch_verbose\n","        self.epoch_verbose = not self.batch_verbose\n","        self.nBatchLogger = self.NBatchLogger(self, self.eval_every, self.batch_verbose)\n","\n","    def load_or_tokenize_corpus(self, corpus_fname, tokenized_corpus_fname):\n","        data_set = []\n","        if os.path.exists(tokenized_corpus_fname):\n","            print(\"load tokenized corpus : \" + tokenized_corpus_fname)\n","            with open(tokenized_corpus_fname, 'r') as f1:\n","                for line in f1:\n","                    tokens, label = line.strip().split(\"\\u241E\")\n","                    if len(tokens) > 0:\n","                        data_set.append([tokens.split(\" \"), int(label)])\n","        else:\n","            print(\"tokenize corpus : \" + corpus_fname + \" > \" + tokenized_corpus_fname)\n","            with open(corpus_fname, 'r') as f2:\n","                next(f2)  # skip head line\n","                for line in f2:\n","                    sentence, label = line.strip().split(\"\\u241E\")\n","                    if self.model_name == \"bert\":\n","                        tokens = self.tokenizer.tokenize(sentence)\n","                    elif self.model_name == \"xlnet\":\n","                        normalized_sentence = preprocess_text(sentence, lower=False)\n","                        tokens = encode_pieces(self.tokenizer, normalized_sentence, return_unicode=False, sample=False)\n","                    else:\n","                        tokens = self.tokenizer.morphs(sentence)\n","                        tokens = post_processing(tokens)\n","                    if int(label) > 0.5:\n","                        int_label = 1\n","                    else:\n","                        int_label = 0\n","                    data_set.append([tokens, int_label])\n","            with open(tokenized_corpus_fname, 'w') as f3:\n","                for tokens, label in data_set:\n","                    f3.writelines(' '.join(tokens) + \"\\u241E\" + str(label) + \"\\n\")\n","        return data_set, len(data_set)\n","\n","    def train(self, optimizer, loss):\n","        saver = k.callbacks.ModelCheckpoint(\n","            filepath='ckpt/elmo.{epoch:02d}-{val_acc:.2f}.h5',\n","            save_weights_only=True)\n","        \n","        train_batches = self.GetBatch(data=self.train_data, \n","                                      data_size=self.train_data_size,\n","                                      batch_size=self.batch_size,\n","                                      make_input=self.make_input)\n","        test_batches = self.GetBatch(data=self.test_data, \n","                                     data_size=self.test_data_size,\n","                                     batch_size=self.batch_size,\n","                                     make_input=self.make_input)\n","        self.model.compile(optimizer=optimizer,\n","                           loss=loss,\n","                           metrics=['acc'])\n","        self.history = self.model.fit(x=train_batches,\n","                       epochs=self.num_epochs,\n","                       validation_data=test_batches,\n","                       callbacks=[self.nBatchLogger, saver],\n","                       verbose=self.epoch_verbose)\n","\n","    def validation(self, model):\n","        eval = model.evaluate(self.train_data, verbose = self.batch_verbose)\n","        if eval['acc'] > self.best_valid_score:\n","            self.best_valid_score = eval['acc']\n","            path = self.model_save_path + '/' + f'{eval[\"acc\"]:.5f}'\n","            model.save(path)\n","\n","    class GetBatch(k.utils.Sequence):\n","        'Generates data for Keras'\n","        def __init__(self, data, data_size, batch_size, make_input):\n","            'Initialization'\n","            self.data = np.array(data, dtype=object)\n","            self.data_size = data_size\n","            self.batch_size = batch_size\n","            self.make_input = make_input\n","\n","            self.idx = np.arange(self.data_size)\n","            self.on_epoch_end()\n","\n","        def __len__(self):\n","            'Denotes the number of batches per epoch'\n","            return int(self.data_size / self.batch_size)\n","\n","        def __getitem__(self, i):\n","            'Generate one batch of data'\n","            # Generate indexes of the batch\n","            indexes = self.idx[i*self.batch_size:(i+1)*self.batch_size]\n","            \n","            # Generate data\n","            features = self.data[indexes]\n","            batch_sentences, batch_labels = features[:, 0], features[:, 1]\n","            X, y = self.make_input(batch_sentences, batch_labels)\n","            return X, y\n","\n","        def on_epoch_end(self):\n","            'Updates indexes after each epoch'\n","            np.random.shuffle(self.idx)\n","\n","\n","    class NBatchLogger(k.callbacks.Callback):\n","        def __init__(self, outer, eval_every, batch_verbose=False):\n","            self.outer = outer\n","            self._step = 0\n","            self._checkpoint_loss = 0\n","            self._eval_every = eval_every\n","            self._batch_verbose = batch_verbose\n","\n","        def on_batch_end(self, batch, logs=None):\n","            self._step += 1\n","            self._checkpoint_loss += logs['loss']\n","            if self._step % self._eval_every == 0:\n","                if self._batch_verbose:\n","                    print(\"global step %d train loss %.4f\" %\n","                                    (self._step, self._checkpoint_loss / self._eval_every))\n","            self._checkpoint_loss = 0\n","            #self.outer.validation(self.model)\n","\n","\n","    def make_input(self, sentences, labels, training):\n","        raise NotImplementedError\n","\n","    def tune(self):\n","        raise NotImplementedError\n","        raise NotImplementedError"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-AD_sfF_lsrP"},"source":["__TO DO :__\n","- modify word embedding network using K.dot()\n","- solve `tf.logging` problem when import `bilm.data`\n","- `keras.layers.Conv1D` last batch problem (look for [code](https://stackoverflow.com/questions/41147734/looking-for-source-code-of-from-gen-nn-ops-in-tensorflow))\n","\n","https://stackoverflow.com/questions/66933311/how-to-load-tensorflow-1-1x-checkpoint-weights-into-a-tf2-2-lstm-layer-results"]},{"cell_type":"code","metadata":{"id":"As6YGuR2DaI4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626991437965,"user_tz":-540,"elapsed":2188,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"723c1435-18e0-43af-e1b7-7ae14a435518"},"source":["#K.clear_session()\n","\n","\n","import h5py, json\n","\n","class BidirectionalLanguageModel(L.Layer):\n","\n","    def __init__(self, options_fname, weight_file, **kwargs):\n","        \n","        super().__init__(**kwargs)\n","\n","        with open(options_fname, 'r') as f:\n","            self.options = json.load(f)\n","        \n","        self.weight_file = weight_file\n","\n","    def build(self, input_shape):\n","        self.char_cnn_layer = self.make_char_cnn_layer()\n","        self.bidi_lstm_layer = self.make_bidi_lstm_layer()\n","\n","        self.set_pretrained_weights()\n","\n","    def call(self, ids_input):\n","        # make mask & lengths variable from given input\n","        mask = tf.reduce_any(ids_input > 0, axis=-1)\n","        sequence_lengths = tf.reduce_sum(\n","            tf.cast(mask, 'int32'),\n","            axis=-1\n","        )\n","\n","        char_cnn_embeddings = self.char_cnn_layer(ids_input)\n","        \n","        outputs = self.bidi_lstm_layer([char_cnn_embeddings, mask, sequence_lengths])\n","\n","        return outputs     \n","\n","    \n","    def set_pretrained_weights(self):\n","\n","        # fetch pretrained weights for CNNs\n","        try:\n","            cnn_variable_names = [ variable.name for variable in self.char_cnn_layer.variables ]\n","            pretrained_weights = [ self._pretrained_initializer(name) for name in cnn_variable_names ]\n","            self.char_cnn_layer.set_weights(pretrained_weights)\n","\n","            # fetch pretrained weights for RNNs\n","            rnn_variable_names = [ variable.name for variable in self.bidi_lstm_layer.variables ]\n","            pretrained_weights = [ self._pretrained_initializer(name) for name in rnn_variable_names ]\n","            self.bidi_lstm_layer.set_weights(pretrained_weights)\n","        except:\n","            print('can\\'t load pretrained weights : layer name doesn\\'t match')\n","\n","\n","    def _pretrained_initializer(self, varname):\n","        # We'll stub out all the initializers in the pretrained LM with\n","        # a function that loads the weights from the file\n","        # Corresponding to bilm.model._pretrained_initializer()\n","\n","        weight_file = self.weight_file\n","\n","        weight_name_map = {}\n","        for i in range(2):\n","            for j in range(8):  # if we decide to add more layers\n","                root = 'RNN_{}/RNN/MultiRNNCell/Cell{}/LSTMCell'.format(i, j)\n","                weight_name_map[root + '/kernel'] = \\\n","                    root + '/W_0'\n","                weight_name_map[root + '/bias'] = \\\n","                    root + '/B'\n","                weight_name_map[root + '/projection/kernel'] = \\\n","                    root + '/W_P_0'\n","\n","        root = 'CNN'\n","        for i in range(8):  # if we decide to add more layers\n","            weight_name_map[root + f'/cnn_{i}/kernel'] = \\\n","                root + f'/W_cnn_{i}'\n","            weight_name_map[root + f'/cnn_{i}/bias'] = \\\n","                root + f'/b_cnn_{i}'\n","        \n","        for i in range(2):\n","            for typ in ['carry', 'transform']:\n","                weight_name_map[root + f'/high_{i}/{typ}/kernel'] = \\\n","                    root + f'_high_{i}/W_{typ}'\n","                weight_name_map[root + f'/high_{i}/{typ}/bias'] = \\\n","                    root + f'_high_{i}/b_{typ}'\n","                    \n","        weight_name_map[root + '/proj/kernel'] = \\\n","            root + f'_proj/W_proj'\n","        weight_name_map[root + '/proj/bias'] = \\\n","            root + f'_proj/b_proj'\n","\n","        # convert the graph name to that in the checkpoint : remove \":0\"\n","        varname_in_file = varname[:-2]\n","        \n","        with h5py.File(weight_file, 'r') as fin:\n","            if varname_in_file.startswith('char_embed'):\n","                # Have added a special 0 index for padding not present\n","                # in the original model.\n","                char_embed_weights = fin['char_embed'][...]\n","                weights = np.zeros(\n","                    (char_embed_weights.shape[0] + 1,\n","                        char_embed_weights.shape[1]),\n","                    dtype='float32'\n","                )\n","                weights[1:, :] = char_embed_weights\n","            else:\n","                varname_in_file = weight_name_map[varname_in_file]\n","                weights = fin[varname_in_file][...]\n","\n","#                if varname_in_file.startswith('CNN/W'):\n","#                    weights = weights[0, :, :, :]\n","\n","        return weights\n","    \n","    def make_char_cnn_layer(self):\n","        # CNN token embeddings over characters\n","        # Recieve token ID matrices (from bilm.data.TokenBatcher) and give token embeddings\n","        # Corresponding to bilm.model.BidirectionalLanguageModelGraph._build_word_char_embeddings()\n","\n","        cnn_options = self.options['char_cnn']\n","        n_characters, char_embed_dim, cnn_filter_options, max_char_token, n_highway, activation = map(cnn_options.get, \n","        ['n_characters', 'embedding', 'filters', 'max_characters_per_token', 'n_highway', 'activation'])\n","\n","        input = L.Input((None, max_char_token))\n","        \n","        char_embed_dim = char_embed_dim['dim']\n","        embedding_layer = L.Embedding(n_characters + 1,\n","                                        char_embed_dim,\n","                                        trainable=True,\n","                                        name='char_embed')\n","        embedding_output = embedding_layer(input)\n","        \n","        embedding_output = K.expand_dims(embedding_output, axis=-3) ##\n","\n","        n_filters = sum([ filters for kernel_size, filters in cnn_filter_options])\n","        cnn_outputs = []\n","        for i, (kernel_size, filters) in enumerate(cnn_filter_options):\n","            #cnn_filter = L.Conv1D(filters, kernel_size, name=f'CNN/cnn_{i}')\n","            cnn_filter = L.Conv2D(filters, (1, kernel_size), activation=activation, name=f'CNN/cnn_{i}') ##\n","\n","            cnn_filter_out = cnn_filter(embedding_output)\n","            cnn_filter_out = K.squeeze(cnn_filter_out, axis=-3) ##\n","            cnn_filter_out = tf.math.reduce_max(cnn_filter_out, axis=-2)\n","\n","            cnn_outputs.append(cnn_filter_out)\n","        \n","        _cnn_output = L.concatenate(cnn_outputs, axis=-1)\n","\n","        for i in range(n_highway):\n","            carry_gate = L.Dense(n_filters, activation='sigmoid', name=f'CNN/high_{i}/carry')(_cnn_output)\n","            transform_gate = L.Dense(n_filters, activation='relu', name=f'CNN/high_{i}/transform')(_cnn_output)\n","            # cnn_output = carry_gate * transform_gate + (1. - carry_gate) * cnn_output\n","            cnn_output = L.add([\n","                L.multiply([carry_gate, transform_gate]),\n","                L.multiply([\n","                                # L.subtract([1., carry_gate]),\n","                                L.Lambda(lambda c: 1. - c, name=f'subtract_{i}')(carry_gate),\n","                                _cnn_output\n","                ])\n","            ]) \n","\n","        projection_dim = self.options['lstm']['projection_dim']\n","        highway_output = L.Dense(projection_dim, name='CNN/proj')(cnn_output)\n","\n","        return k.Model(input, highway_output, name='CNN')\n","\n","\n","    def make_bidi_lstm_layer(self):\n","        # Bidirectional LSTM layer\n","\n","\n","        # Recieve token embeddings (from char_cnn_layer()) and give LSTM outputs for every layers\n","        # Corresponding to bilm.model.BidirectionalLanguageModelGraph._build_lstms()\n","\n","        # parse the options\n","        lstm_options = self.options['lstm']\n","        lstm_dim, projection_dim, n_lstm_layers, cell_clip, proj_clip = map(lstm_options.get, \n","        ['dim', 'projection_dim', 'n_layers', 'cell_clip', 'proj_clip'])\n","\n","        embedding_input = L.Input((None, projection_dim), name='embedding_input')\n","        mask = L.Input((None,), name='mask', dtype='bool')\n","        sequence_lengths = L.Input((), name='sequence_lengths', dtype='int32')\n","        \n","        lstm_outputs = {'forward': [embedding_input], 'backward': [embedding_input]}\n","        for direction in ['forward', 'backward']:\n","            i_direction = {'forward': 0, 'backward': 1}[direction]\n","\n","            lstm_output = embedding_input\n","            for i in range(n_lstm_layers):\n","\n","                cell = tf.compat.v1.nn.rnn_cell.LSTMCell( \n","                    lstm_dim, num_proj=projection_dim,\n","                    cell_clip=cell_clip, proj_clip=proj_clip, \n","                    name=f'RNN_{i_direction}/RNN/MultiRNNCell/Cell{i}/LSTMCell')\n","                \n","                layer = L.RNN(cell, return_sequences=True, go_backwards=i_direction,\n","                            name=f'RNN_{direction}/LSTM_{i}')\n","                \n","                dense = L.Dense(projection_dim, name=f'{direction}_test_{i}')\n","\n","                _lstm_output = layer(lstm_output,\n","                                     mask=mask)\n","\n","                if i == 0:\n","                    lstm_output = _lstm_output\n","                else:\n","                    lstm_output = L.add([_lstm_output,\n","                                        lstm_output])\n","                lstm_outputs[direction].append(lstm_output)\n","\n","\n","        # Process outputs and make final embeddings for each RNN layer\n","        # Corresponding to bilm.model.BidirectionalLanguageModelGraph._build_ops()\n","\n","        layers = []\n","        for forward_backward_layer in zip(lstm_outputs['forward'], lstm_outputs['backward']):\n","            layers.append(\n","                L.concatenate(forward_backward_layer, axis=-1))\n","        lm_embeddings = K.stack(layers, axis=1)\n","\n","        # The layers include the BOS/EOS tokens.  Remove them\n","        #lengths = tf.reshape(sequence_lengths, (-1,)) # flatten\n","        lengths_wo_bos = L.Lambda(lambda l: l - 1, name=f'delete_bos')(sequence_lengths)\n","        lengths_wo_bos_eos = L.Lambda(lambda l: l - 1, name=f'delete_eos')(lengths_wo_bos)\n","        \n","        lm_embeddings_wo_bos = lm_embeddings[:, :, 1:, :]\n","        lm_embeddings_wo_bos = tf.reverse_sequence(\n","            lm_embeddings_wo_bos,\n","            lengths_wo_bos,\n","            seq_axis=2,\n","            batch_axis=0,\n","        )\n","        lm_embeddings_wo_bos_eos = lm_embeddings_wo_bos[:, :, 1:, :]\n","        lm_embeddings_wo_bos_eos = tf.reverse_sequence(\n","            lm_embeddings_wo_bos_eos,\n","            lengths_wo_bos_eos,\n","            seq_axis=2,\n","            batch_axis=0,\n","        )\n","\n","        # get the mask op without bos/eos.\n","        mask_wo_bos = mask[:, 1:]\n","        mask_wo_bos = tf.reverse_sequence(\n","            mask_wo_bos,\n","            lengths_wo_bos,\n","            seq_axis=1,\n","            batch_axis=0,\n","        )\n","        mask_wo_bos_eos = mask_wo_bos[:, 1:]\n","        mask_wo_bos_eos = tf.reverse_sequence(\n","            mask_wo_bos_eos,\n","            lengths_wo_bos_eos,\n","            seq_axis=1,\n","            batch_axis=0,\n","        )\n","\n","        return k.Model([embedding_input, mask, sequence_lengths], \n","                       [lm_embeddings_wo_bos_eos, mask_wo_bos_eos], \n","                       name='RNN')\n","        \n","\n","bilm = BidirectionalLanguageModel(options_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/options.json', \n","                                  weight_file=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo.model')\n","a = bilm(K.ones((4, 7, 30)))"],"execution_count":6,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/layers/legacy_rnn/rnn_cell_impl.py:909: UserWarning: `tf.nn.rnn_cell.LSTMCell` is deprecated and will be removed in a future version. This class is equivalent as `tf.keras.layers.LSTMCell`, and will be replaced by that in Tensorflow 2.0.\n","  warnings.warn(\"`tf.nn.rnn_cell.LSTMCell` is deprecated and will be \"\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:2191: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.\n","  warnings.warn('`layer.add_variable` is deprecated and '\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:1331: UserWarning: `layer.updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  warnings.warn('`layer.updates` will be removed in a future version. '\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"3G2S6dxnsDF2","executionInfo":{"status":"ok","timestamp":1626991994154,"user_tz":-540,"elapsed":573,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["import h5py, json\n","from bilm.data import Batcher\n","\n","#K.clear_session()\n","\n","class ELMoTuner(Tuner):\n","    \n","    def __init__(self, train_corpus_fname, test_corpus_fname,\n","                 vocab_fname, options_fname, pretrain_model_fname,\n","                 model_save_path, max_characters_per_token=30, \n","                 batch_size=32, learning_rate=0.0001, num_labels=2,\n","                 batch_verbose=True, num_epochs=10):\n","        # Load a corpus.\n","        super().__init__(train_corpus_fname=train_corpus_fname,\n","                         tokenized_train_corpus_fname=train_corpus_fname + \".elmo-tokenized\",\n","                         test_corpus_fname=test_corpus_fname,\n","                         tokenized_test_corpus_fname=test_corpus_fname + \".elmo-tokenized\",\n","                         model_name='elmo', vocab_fname=vocab_fname,\n","                         model_save_path=model_save_path, batch_size=batch_size,\n","                         batch_verbose=batch_verbose, num_epochs=num_epochs)\n","        \n","        with open(options_fname, 'r') as f:\n","            self.options = json.load(f)\n","\n","        self.options_fname = options_fname\n","        self.pretrain_model_fname = pretrain_model_fname\n","        self.max_characters_per_token = max_characters_per_token\n","        self.num_labels = 2 # positive, negative\n","        self.num_train_steps = (int((len(self.train_data) - 1) / self.batch_size) + 1) * self.num_epochs\n","        self.lr = learning_rate\n","        self.batcher = Batcher(lm_vocab_file=vocab_fname, max_token_length=self.max_characters_per_token)\n","        # build train model.\n","        self.model = self.make_elmo_model(self.num_labels)\n","\n","\n","    def make_input(self, sentences, labels):\n","        current_input = self.batcher.batch_sentences(sentences)\n","        current_output = np.array(labels)\n","        \n","        return current_input.astype(np.int32), current_output.astype(np.int32)\n","\n","    def tune(self):\n","        optimizer = k.optimizers.Adam(self.lr)\n","        loss = k.losses.SparseCategoricalCrossentropy(from_logits=True)\n","        self.train(optimizer, loss)\n"," \n","\n","    def make_elmo_weight_layer(self, l2_coef=None, use_top_only=False, do_layer_norm=False, name=None):\n","        # ELMo weight over CNN embedding + LSTM layer outputs\n","        # Recieve layer outputs (from bidi_lstm_layer()) and give weighted sum (after layer norm)\n","        # Corresponding to bilm.elmo.weight_layers()\n","\n","        # a bit of helper functions\n","\n","        def MaskedLayerNorm(shape=None):\n","            # do layer normalization excluding the mask\n","            x = L.Input(shape, dtype='float32', name='_x')\n","            mask = L.Input((None,), dtype='bool', name='_mask')\n","\n","            lm_dim = x.shape[-1]\n","            broadcast_mask = L.Reshape((1, -1, 1))(\n","                tf.cast(mask, 'float32'))\n","            x_masked = x * broadcast_mask\n","            N = tf.reduce_sum(broadcast_mask, axis=[2,3], keepdims=True) * lm_dim\n","            mean = tf.reduce_sum(x_masked, axis=[2,3], keepdims=True) / N\n","            variance = tf.reduce_sum(\n","                tf.square( (x_masked - mean) * broadcast_mask ),\n","                axis=[2,3],\n","                keepdims=True\n","                ) / N\n","            normalized = (x - mean) / (tf.math.sqrt(variance) + 1e-12)\n","\n","            return k.Model([x, mask], normalized, name='masked_layer_norm')\n","\n","\n","        class ELMoWeighting(L.Layer):   # Inheritance class\n","            def __init__(self, l2_coef=None, use_top_only=False, **kwargs):  \n","                super().__init__(**kwargs)\n","                self.l2_coef = l2_coef\n","                self.use_top_only = use_top_only\n","                \n","            # Initialization parameters through build\n","            def build(self, input_shape):  # This function will automatically get the input dimension according to the input data\n","                self.n_lm_layers = input_shape[1]\n","                self.W = self.add_weight(name='ELMo_W', shape=(self.n_lm_layers), initializer='zeros', trainable=True)\n","                self.gamma = self.add_weight(name='ELMo_gamma', shape=(), initializer='ones', trainable=True)\n","                \n","            # Define output\n","            def call(self, input):\n","                if self.use_top_only:\n","                    sum_pieces = input[:, -1, :, :]\n","                else:\n","                    normed_W = tf.reshape(\n","                        K.softmax(self.W + 1. / self.n_lm_layers),\n","                        (1, 1, -1, 1))\n","                    sum_pieces = K.squeeze(\n","                        K.conv2d(input, normed_W, data_format='channels_first'),\n","                        axis=1\n","                    )\n","                if l2_coef is not None:\n","                    self.add_loss(l2_coef * tf.reduce_sum(tf.square(self.W)))\n","\n","                return self.gamma * sum_pieces\n","\n","\n","        # now do layer norm & ELMo weighting\n","\n","        n_lm_layers = self.options['lstm']['n_layers'] + 1\n","        lm_dim = self.options['lstm']['projection_dim'] * 2\n","\n","        lm_embeddings = L.Input((n_lm_layers, None, lm_dim), name='lm_embeddings')\n","        mask = L.Input((None,), dtype='bool', name='mask')\n","\n","        layer_norm = MaskedLayerNorm(shape=lm_embeddings.shape[1:])\n","        if do_layer_norm:\n","            normed_lm_embeddings = layer_norm([lm_embeddings, mask])\n","        else:\n","            normed_lm_embeddings = lm_embeddings\n","\n","        elmo = ELMoWeighting(l2_coef=l2_coef, use_top_only=use_top_only, name='elmo_weighting')\n","        weighted_lm_layers = elmo(normed_lm_embeddings)\n","\n","        model = k.Model([lm_embeddings, mask], weighted_lm_layers, name=name)\n","\n","        return model\n","\n","\n","    def make_elmo_model(self, num_labels):\n","\n","        self.bilm = BidirectionalLanguageModel(self.options_fname, self.pretrain_model_fname)\n","\n","        ids = L.Input((None, self.max_characters_per_token), \n","                      dtype='int32', name='input')\n","        \n","        embeddings_op = self.bilm(ids)\n","        input_lengths = embeddings_op[-1]\n","\n","        self.weight_layers = self.make_elmo_weight_layer(\n","            l2_coef=0.,\n","            use_top_only=False,\n","            do_layer_norm=True,\n","            name='ELMo_weight'\n","        )\n","        elmo_embeddings = self.weight_layers(embeddings_op)\n","\n","        dropout_rate = 1 - self.dropout_keep_prob_rate\n","        features = L.Dropout(dropout_rate)(elmo_embeddings)\n","\n","\n","        lstm_cell_fw = tf.compat.v1.nn.rnn_cell.LSTMCell(512, cell_clip=5, proj_clip=5)\n","        lstm_cell_bw = tf.compat.v1.nn.rnn_cell.LSTMCell(512, cell_clip=5, proj_clip=5)\n","\n","        lstm_layer_fw = L.RNN(lstm_cell_fw, return_sequences=True)\n","        lstm_layer_bw = L.RNN(lstm_cell_bw, return_sequences=True, go_backwards=True)\n","\n","        lstm_output = L.Bidirectional(\n","            lstm_layer_fw,\n","            'sum',\n","            backward_layer=lstm_layer_bw\n","        )(features)\n","\n","\n","        # Attention layer\n","        H = L.Dense(256, activation='tanh', name=\"H\")(lstm_output)\n","        attention_score = L.Dense(1)(H)\n","        attention_score = L.Softmax(axis=1, name='attention_score')(attention_score)\n","        attention_output = L.dot([\n","            H,\n","            attention_score\n","        ], axes=[1, 1])\n","        attention_output = K.squeeze(attention_output, axis=-1)\n","        layer_output = L.Dropout(dropout_rate)(attention_output)\n","\n","        # Feedforward Layer\n","        fc = L.Dense(512, activation='relu')(layer_output)\n","        features_drop = L.Dropout(dropout_rate)(fc)\n","        logits = L.Dense(num_labels)(features_drop)\n","\n","        return k.Model(ids, logits)\n","\n","        \n","        \n"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"vTJc46XurtDg"},"source":["\n","elmoTuner = ELMoTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt', \n","                      test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                      vocab_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo-vocab.txt', \n","                      options_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/options.json', \n","                      pretrain_model_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo.model',\n","                      model_save_path=DATA_PATH+'sentence-embeddings/elmo/tune-ckpt', \n","                      max_characters_per_token=30, \n","                      batch_size=32, learning_rate=0.0001, num_labels=2,\n","                      batch_verbose=False, num_epochs=10)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R699z7rkn8Ki","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626912468904,"user_tz":-540,"elapsed":290,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"b64b997e-917f-460b-8803-4c700c10cb57"},"source":["elmoTuner.model.summary()"],"execution_count":33,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input (InputLayer)              [(None, None, 30)]   0                                            \n","__________________________________________________________________________________________________\n","bidirectional_language_model (B [(None, 3, None, 256 21986016    input[0][0]                      \n","__________________________________________________________________________________________________\n","ELMo_weight (Functional)        (None, None, 256)    4           bidirectional_language_model[0][0\n","                                                                 bidirectional_language_model[0][1\n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, None, 256)    0           ELMo_weight[0][0]                \n","__________________________________________________________________________________________________\n","bidirectional (Bidirectional)   (None, None, 512)    3149824     dropout[0][0]                    \n","__________________________________________________________________________________________________\n","H (Dense)                       (None, None, 256)    131328      bidirectional[0][0]              \n","__________________________________________________________________________________________________\n","dense (Dense)                   (None, None, 1)      257         H[0][0]                          \n","__________________________________________________________________________________________________\n","attention_score (Softmax)       (None, None, 1)      0           dense[0][0]                      \n","__________________________________________________________________________________________________\n","dot (Dot)                       (None, 256, 1)       0           H[0][0]                          \n","                                                                 attention_score[0][0]            \n","__________________________________________________________________________________________________\n","tf.compat.v1.squeeze (TFOpLambd (None, 256)          0           dot[0][0]                        \n","__________________________________________________________________________________________________\n","dropout_1 (Dropout)             (None, 256)          0           tf.compat.v1.squeeze[0][0]       \n","__________________________________________________________________________________________________\n","dense_1 (Dense)                 (None, 512)          131584      dropout_1[0][0]                  \n","__________________________________________________________________________________________________\n","dropout_2 (Dropout)             (None, 512)          0           dense_1[0][0]                    \n","__________________________________________________________________________________________________\n","dense_2 (Dense)                 (None, 2)            1026        dropout_2[0][0]                  \n","==================================================================================================\n","Total params: 25,400,039\n","Trainable params: 25,400,039\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7ScdYDku02sc","executionInfo":{"status":"ok","timestamp":1626962165103,"user_tz":-540,"elapsed":6052829,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"46e940b8-2a0f-4c5e-e91b-13e2738308ca"},"source":["elmoTuner.num_epochs = 5\n","elmoTuner.bilm.trainable = False\n","\n","elmoTuner.tune()"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Epoch 1/5\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:1331: UserWarning: `layer.updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  warnings.warn('`layer.updates` will be removed in a future version. '\n"],"name":"stderr"},{"output_type":"stream","text":["4687/4687 [==============================] - 4812s 1s/step - loss: 0.4568 - acc: 0.7776 - val_loss: 0.3898 - val_acc: 0.8207\n","Epoch 2/5\n","4687/4687 [==============================] - 5022s 1s/step - loss: 0.3620 - acc: 0.8375 - val_loss: 0.3501 - val_acc: 0.8428\n","Epoch 3/5\n","4687/4687 [==============================] - 5235s 1s/step - loss: 0.3165 - acc: 0.8612 - val_loss: 0.3294 - val_acc: 0.8562\n","Epoch 4/5\n","4687/4687 [==============================] - 5605s 1s/step - loss: 0.2811 - acc: 0.8802 - val_loss: 0.3192 - val_acc: 0.8606\n","4687/4687 [==============================] - 5605s 1s/step - loss: 0.2811 - acc: 0.8802 - val_loss: 0.3192 - val_acc: 0.8606\n","Epoch 5/5\n","Epoch 5/5\n","4687/4687 [==============================] - 5441s 1s/step - loss: 0.2466 - acc: 0.8974 - val_loss: 0.3220 - val_acc: 0.8648\n","4687/4687 [==============================] - 5441s 1s/step - loss: 0.2466 - acc: 0.8974 - val_loss: 0.3220 - val_acc: 0.8648\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fPUVAVtEmy1T"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"C9NPA3StL5DJ","executionInfo":{"status":"ok","timestamp":1626963780731,"user_tz":-540,"elapsed":959,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}}},"source":["elmoTuner.model.save_weights('elmoTuner_5.tf')"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N4UvFgt2irOL","executionInfo":{"status":"ok","timestamp":1626992041603,"user_tz":-540,"elapsed":38362,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"88f3ee15-89ab-4706-e04d-5341272814fb"},"source":["test_elmo = ELMoTuner(train_corpus_fname=DATA_PATH+'processed/processed_ratings_train.txt', \n","                      test_corpus_fname=DATA_PATH+'processed/processed_ratings_test.txt',\n","                      vocab_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo-vocab.txt', \n","                      options_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/options.json', \n","                      pretrain_model_fname=DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo.model',\n","                      model_save_path=DATA_PATH+'sentence-embeddings/elmo/tune-ckpt', \n","                      max_characters_per_token=30, \n","                      batch_size=32, learning_rate=0.0001, num_labels=2,\n","                      batch_verbose=False, num_epochs=5)"],"execution_count":9,"outputs":[{"output_type":"stream","text":["tokenize corpus : /notebooks/embedding/data/processed/processed_ratings_train.txt > /notebooks/embedding/data/processed/processed_ratings_train.txt.elmo-tokenized\n","tokenize corpus : /notebooks/embedding/data/processed/processed_ratings_test.txt > /notebooks/embedding/data/processed/processed_ratings_test.txt.elmo-tokenized\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/layers/legacy_rnn/rnn_cell_impl.py:909: UserWarning: `tf.nn.rnn_cell.LSTMCell` is deprecated and will be removed in a future version. This class is equivalent as `tf.keras.layers.LSTMCell`, and will be replaced by that in Tensorflow 2.0.\n","  warnings.warn(\"`tf.nn.rnn_cell.LSTMCell` is deprecated and will be \"\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:2191: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.\n","  warnings.warn('`layer.add_variable` is deprecated and '\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:1331: UserWarning: `layer.updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  warnings.warn('`layer.updates` will be removed in a future version. '\n"],"name":"stderr"},{"output_type":"stream","text":["can't load pretrained weights : layer name doesn't match\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ltEzLLxjst2","executionInfo":{"status":"ok","timestamp":1626992043716,"user_tz":-540,"elapsed":2126,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"7cfaede8-ba72-4a79-a9ca-c7748066df5a"},"source":["test_elmo.model.load_weights('elmoTuner_5.tf')"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.training.tracking.util.CheckpointLoadStatus at 0x7f015a8e7c90>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":214},"id":"2KJBxyV7jzLZ","executionInfo":{"status":"error","timestamp":1626992045217,"user_tz":-540,"elapsed":325,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"99343324-848c-40e7-d811-6f6726718bc4"},"source":["np.testing.assert_allclose(\n","elmoTuner.model(K.ones((3, 7, 30))),\n","test_elmo.model(K.ones((3, 7, 30))), \n","1e-12)"],"execution_count":12,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-41c97745f4d0>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m np.testing.assert_allclose(\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0melmoTuner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mones\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m7\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mtest_elmo\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mones\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m7\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m30\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m 1e-12)\n","\u001b[0;31mNameError\u001b[0m: name 'elmoTuner' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g_6yHMsdtBdZ","outputId":"6a993a8c-3d68-4621-fbf8-4fec6529331b"},"source":["test_elmo.bilm.trainable = True\n","test_elmo.lr = 0.00003\n","\n","test_elmo.tune()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/5\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:1331: UserWarning: `layer.updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  warnings.warn('`layer.updates` will be removed in a future version. '\n"],"name":"stderr"},{"output_type":"stream","text":["4687/4687 [==============================] - 12423s 3s/step - loss: 0.2661 - acc: 0.8878 - val_loss: 0.2946 - val_acc: 0.8767\n","Epoch 2/5\n","4687/4687 [==============================] - 12627s 3s/step - loss: 0.1840 - acc: 0.9275 - val_loss: 0.3260 - val_acc: 0.8752\n","Epoch 3/5\n","4687/4687 [==============================] - 12930s 3s/step - loss: 0.1290 - acc: 0.9513 - val_loss: 0.3642 - val_acc: 0.8717\n","Epoch 4/5\n","1742/4687 [==========>...................] - ETA: 2:08:13 - loss: 0.0818 - acc: 0.9700"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fi5way7asGnI","executionInfo":{"status":"ok","timestamp":1626965395990,"user_tz":-540,"elapsed":236,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"0684f778-048c-48cc-91db-ae3e33325eff"},"source":["with open('elmo_history.txt', 'w') as f:\n","    json.dump(elmoTuner.history.history, f)\n","elmoTuner.history.history"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'acc': [0.7775762677192688,\n","  0.8374959826469421,\n","  0.8611985445022583,\n","  0.8802272081375122,\n","  0.89743572473526],\n"," 'loss': [0.4567650258541107,\n","  0.36195579171180725,\n","  0.3164638578891754,\n","  0.2810837924480438,\n","  0.24662187695503235],\n"," 'val_acc': [0.8207226395606995,\n","  0.8427696824073792,\n","  0.8561939597129822,\n","  0.8606153726577759,\n","  0.8647767305374146],\n"," 'val_loss': [0.38979974389076233,\n","  0.3501318097114563,\n","  0.32935741543769836,\n","  0.3191852569580078,\n","  0.32197871804237366]}"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"UBweNOfcsEOu"},"source":["test_elmo"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LC_65lM4kEYZ","executionInfo":{"status":"ok","timestamp":1626963373444,"user_tz":-540,"elapsed":236,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"e88bbbd2-c3db-4290-e8a3-d9bac8a39964"},"source":["import h5py\n","with h5py.File('elmoTuner_5.h5') as f:\n","    f.visit(lambda name: (\n","        print(f'{name:90s} : shape {f[name].shape}') \n","        if hasattr(f[name], 'shape') \n","        else None\n","        ))"],"execution_count":31,"outputs":[{"output_type":"stream","text":["ELMo_weight/elmo_weighting/ELMo_W:0                                                        : shape (3,)\n","ELMo_weight/elmo_weighting/ELMo_gamma:0                                                    : shape ()\n","H/H/bias:0                                                                                 : shape (256,)\n","H/H/kernel:0                                                                               : shape (512, 256)\n","bidirectional/lstm_cell/bias:0                                                             : shape (2048,)\n","bidirectional/lstm_cell/kernel:0                                                           : shape (768, 2048)\n","bidirectional/lstm_cell_1/bias:0                                                           : shape (2048,)\n","bidirectional/lstm_cell_1/kernel:0                                                         : shape (768, 2048)\n","bidirectional_language_model/CNN/cnn_0/bias:0                                              : shape (32,)\n","bidirectional_language_model/CNN/cnn_0/kernel:0                                            : shape (1, 1, 16, 32)\n","bidirectional_language_model/CNN/cnn_1/bias:0                                              : shape (32,)\n","bidirectional_language_model/CNN/cnn_1/kernel:0                                            : shape (1, 2, 16, 32)\n","bidirectional_language_model/CNN/cnn_2/bias:0                                              : shape (64,)\n","bidirectional_language_model/CNN/cnn_2/kernel:0                                            : shape (1, 3, 16, 64)\n","bidirectional_language_model/CNN/cnn_3/bias:0                                              : shape (128,)\n","bidirectional_language_model/CNN/cnn_3/kernel:0                                            : shape (1, 4, 16, 128)\n","bidirectional_language_model/CNN/cnn_4/bias:0                                              : shape (256,)\n","bidirectional_language_model/CNN/cnn_4/kernel:0                                            : shape (1, 5, 16, 256)\n","bidirectional_language_model/CNN/cnn_5/bias:0                                              : shape (512,)\n","bidirectional_language_model/CNN/cnn_5/kernel:0                                            : shape (1, 6, 16, 512)\n","bidirectional_language_model/CNN/cnn_6/bias:0                                              : shape (1024,)\n","bidirectional_language_model/CNN/cnn_6/kernel:0                                            : shape (1, 7, 16, 1024)\n","bidirectional_language_model/CNN/high_1/carry/bias:0                                       : shape (2048,)\n","bidirectional_language_model/CNN/high_1/carry/kernel:0                                     : shape (2048, 2048)\n","bidirectional_language_model/CNN/high_1/transform/bias:0                                   : shape (2048,)\n","bidirectional_language_model/CNN/high_1/transform/kernel:0                                 : shape (2048, 2048)\n","bidirectional_language_model/CNN/proj/bias:0                                               : shape (128,)\n","bidirectional_language_model/CNN/proj/kernel:0                                             : shape (2048, 128)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/bias:0                  : shape (4096,)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/kernel:0                : shape (256, 4096)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/projection/kernel:0     : shape (1024, 128)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/bias:0                  : shape (4096,)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/kernel:0                : shape (256, 4096)\n","bidirectional_language_model/RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/projection/kernel:0     : shape (1024, 128)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/bias:0                  : shape (4096,)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/kernel:0                : shape (256, 4096)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/projection/kernel:0     : shape (1024, 128)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/bias:0                  : shape (4096,)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/kernel:0                : shape (256, 4096)\n","bidirectional_language_model/RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/projection/kernel:0     : shape (1024, 128)\n","bidirectional_language_model/char_embed/embeddings:0                                       : shape (262, 16)\n","dense/dense/bias:0                                                                         : shape (1,)\n","dense/dense/kernel:0                                                                       : shape (256, 1)\n","dense_1/dense_1/bias:0                                                                     : shape (512,)\n","dense_1/dense_1/kernel:0                                                                   : shape (256, 512)\n","dense_2/dense_2/bias:0                                                                     : shape (2,)\n","dense_2/dense_2/kernel:0                                                                   : shape (512, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xssf_SvcykJv","executionInfo":{"status":"ok","timestamp":1626920961057,"user_tz":-540,"elapsed":880,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"1222d53b-f344-40c7-8b22-c6da90143a40"},"source":["n_batch = 5\n","ones_for_every_batch = K.ones((n_batch, 1, 30, 16))\n","filters, kernel_size = 32, 2\n","last_difference_count = 0\n","mid_difference_count = 0\n","for _ in range(100):\n","    cnn_filter = L.Conv2D(filters, (kernel_size, 16)) #cnn_filter = L.Conv1D(filters, kernel_size)\n","    cnn_filter_out = cnn_filter(ones_for_every_batch)\n","\n","    try:\n","        for i in range(1, n_batch - 1):\n","            np.testing.assert_allclose(cnn_filter_out[0], cnn_filter_out[i], 1e-12)\n","    except:\n","        mid_difference_count += 1\n","\n","    try:\n","        np.testing.assert_allclose(cnn_filter_out[0], cnn_filter_out[-1], 1e-12)\n","    except:\n","        last_difference_count += 1\n","\n","\n","print(mid_difference_count)\n","print(last_difference_count)"],"execution_count":260,"outputs":[{"output_type":"stream","text":["0\n","0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7dmjYUYnuE5-","executionInfo":{"status":"ok","timestamp":1626863656165,"user_tz":-540,"elapsed":241,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"ac1297d4-deea-4e2f-e7fc-d05a4f8a74a4"},"source":["[variable.name for variable in elmoTuner.char_cnn_layer.variables]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['char_embed/embeddings:0',\n"," 'CNN/cnn_0/kernel:0',\n"," 'CNN/cnn_0/bias:0',\n"," 'CNN/cnn_1/kernel:0',\n"," 'CNN/cnn_1/bias:0',\n"," 'CNN/cnn_2/kernel:0',\n"," 'CNN/cnn_2/bias:0',\n"," 'CNN/cnn_3/kernel:0',\n"," 'CNN/cnn_3/bias:0',\n"," 'CNN/cnn_4/kernel:0',\n"," 'CNN/cnn_4/bias:0',\n"," 'CNN/cnn_5/kernel:0',\n"," 'CNN/cnn_5/bias:0',\n"," 'CNN/cnn_6/kernel:0',\n"," 'CNN/cnn_6/bias:0',\n"," 'CNN/high_0/carry/kernel:0',\n"," 'CNN/high_0/carry/bias:0',\n"," 'CNN/high_0/transform/kernel:0',\n"," 'CNN/high_0/transform/bias:0',\n"," 'CNN/high_1/carry/kernel:0',\n"," 'CNN/high_1/carry/bias:0',\n"," 'CNN/high_1/transform/kernel:0',\n"," 'CNN/high_1/transform/bias:0',\n"," 'CNN/proj/kernel:0',\n"," 'CNN/proj/bias:0']"]},"metadata":{"tags":[]},"execution_count":124}]},{"cell_type":"code","metadata":{"id":"Ny2yOwd30Urp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626844912822,"user_tz":-540,"elapsed":244,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"3866080a-80e7-4053-890a-25887048cddb"},"source":["def layernorm(x, mask):\n","    broadcast_mask = tf.reshape(tf.cast(mask, 'float32'), (-1, 1, x.shape[2], 1))\n","    x_masked = x * broadcast_mask\n","    N = tf.reduce_sum(broadcast_mask, axis=[2,3], keepdims=True) * x.shape[-1]\n","    mean = tf.reduce_sum(x_masked, axis=[2,3], keepdims=True) / N\n","    variance = tf.reduce_sum(\n","        ( (x - mean) * broadcast_mask ) ** 2,\n","        axis=[2,3],\n","        keepdims=True\n","        ) / N\n","    normalized = (x - mean) / (tf.math.sqrt(variance) + 1e-12)\n","    return mean, variance, normalized\n","\n","x = tf.constant(np.random.rand(2, 4, 3, 5) * 2, dtype='float32')\n","mask = tf.constant([[1, 1, 1],\n","                    [1, 1, 0]])\n","print('per-layer variance before norm')\n","print(layernorm(x, mask)[1])\n","print('per-layer variance after norm')\n","print(layernorm(layernorm(x, mask)[-1], mask)[1])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["per-layer variance before norm\n","tf.Tensor(\n","[[[[0.23366782]]\n","\n","  [[0.27007973]]\n","\n","  [[0.24900733]]\n","\n","  [[0.28478467]]]\n","\n","\n"," [[[0.48895484]]\n","\n","  [[0.21713641]]\n","\n","  [[0.30497372]]\n","\n","  [[0.3358685 ]]]], shape=(2, 4, 1, 1), dtype=float32)\n","per-layer variance after norm\n","tf.Tensor(\n","[[[[1.0000001]]\n","\n","  [[1.0000001]]\n","\n","  [[1.0000001]]\n","\n","  [[1.       ]]]\n","\n","\n"," [[[1.       ]]\n","\n","  [[0.9999999]]\n","\n","  [[1.       ]]\n","\n","  [[0.9999998]]]], shape=(2, 4, 1, 1), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mZa-OFKT3bsm","executionInfo":{"status":"ok","timestamp":1626599934714,"user_tz":-540,"elapsed":258,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"fb5e087c-449a-4f71-972e-b1cea93c0b1b"},"source":["import h5py\n","class A:\n","    def __init__(self):\n","        with h5py.File(DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo.model') as self.f:\n","            self.func()\n","        print(f)\n","\n","    def func(self):\n","        self.a = self.f['char_embed'][...]\n","\n","a = A()\n","a.a"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<closed File>\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["array([[-9.99295712e-01,  5.47058344e-01,  5.30470371e-01, ...,\n","         5.42457819e-01, -3.89054298e-01,  2.88617849e-01],\n","       [ 3.45418930e-01,  2.07204819e-01, -4.49575901e-01, ...,\n","        -8.93939257e-01,  9.16731358e-02,  6.67819023e-01],\n","       [ 7.27880239e-01,  6.97056055e-01,  2.64603376e-01, ...,\n","        -4.45170164e-01, -7.19533443e-01,  3.77302170e-01],\n","       ...,\n","       [-1.47497077e-02,  2.88932994e-02,  7.12985918e-02, ...,\n","        -1.27367690e-01,  8.86969361e-03, -6.96130022e-02],\n","       [-1.01260565e-01, -4.58760634e-02, -2.65172347e-02, ...,\n","        -9.65775251e-02, -1.20669730e-01, -3.39936614e-02],\n","       [-4.65944759e-05,  4.72090878e-02, -7.72405267e-02, ...,\n","         6.64743781e-02, -1.57714918e-01,  2.37484843e-01]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"id":"jt2acOhE4xwq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626932629910,"user_tz":-540,"elapsed":304,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"87548eb1-4726-4662-fd5b-0cc787cbd931"},"source":["import h5py\n","f = h5py.File(DATA_PATH+'sentence-embeddings/elmo/pretrain-ckpt/elmo.model')\n","f.visit(lambda name: (\n","    print(f'{name:45s} : shape {f[name].shape}') \n","    if hasattr(f[name], 'shape') \n","    else None\n","    ))"],"execution_count":280,"outputs":[{"output_type":"stream","text":["CNN/W_cnn_0                                   : shape (1, 1, 16, 32)\n","CNN/W_cnn_1                                   : shape (1, 2, 16, 32)\n","CNN/W_cnn_2                                   : shape (1, 3, 16, 64)\n","CNN/W_cnn_3                                   : shape (1, 4, 16, 128)\n","CNN/W_cnn_4                                   : shape (1, 5, 16, 256)\n","CNN/W_cnn_5                                   : shape (1, 6, 16, 512)\n","CNN/W_cnn_6                                   : shape (1, 7, 16, 1024)\n","CNN/b_cnn_0                                   : shape (32,)\n","CNN/b_cnn_1                                   : shape (32,)\n","CNN/b_cnn_2                                   : shape (64,)\n","CNN/b_cnn_3                                   : shape (128,)\n","CNN/b_cnn_4                                   : shape (256,)\n","CNN/b_cnn_5                                   : shape (512,)\n","CNN/b_cnn_6                                   : shape (1024,)\n","CNN_high_0/W_carry                            : shape (2048, 2048)\n","CNN_high_0/W_transform                        : shape (2048, 2048)\n","CNN_high_0/b_carry                            : shape (2048,)\n","CNN_high_0/b_transform                        : shape (2048,)\n","CNN_high_1/W_carry                            : shape (2048, 2048)\n","CNN_high_1/W_transform                        : shape (2048, 2048)\n","CNN_high_1/b_carry                            : shape (2048,)\n","CNN_high_1/b_transform                        : shape (2048,)\n","CNN_proj/W_proj                               : shape (2048, 128)\n","CNN_proj/b_proj                               : shape (128,)\n","RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/B       : shape (4096,)\n","RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/W_0     : shape (256, 4096)\n","RNN_0/RNN/MultiRNNCell/Cell0/LSTMCell/W_P_0   : shape (1024, 128)\n","RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/B       : shape (4096,)\n","RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/W_0     : shape (256, 4096)\n","RNN_0/RNN/MultiRNNCell/Cell1/LSTMCell/W_P_0   : shape (1024, 128)\n","RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/B       : shape (4096,)\n","RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/W_0     : shape (256, 4096)\n","RNN_1/RNN/MultiRNNCell/Cell0/LSTMCell/W_P_0   : shape (1024, 128)\n","RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/B       : shape (4096,)\n","RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/W_0     : shape (256, 4096)\n","RNN_1/RNN/MultiRNNCell/Cell1/LSTMCell/W_P_0   : shape (1024, 128)\n","char_embed                                    : shape (261, 16)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":935},"id":"5-wVm4Ln-ctJ","executionInfo":{"status":"error","timestamp":1626619741240,"user_tz":-540,"elapsed":886,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"e81d3a1a-2641-45b7-8ab1-fd3a5cae97b9"},"source":["def make_elmo_embedding_layer(self):\n","    lstm_options = self.options['lstm']\n","    \n","    return k.Model(input, output, name='RNN')\n","\n","elmoTuner.make_elmo_embedding_layer = make_elmo_embedding_layer\n","k.utils.plot_model(elmoTuner.make_char_cnn_layer())"],"execution_count":null,"outputs":[{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-144-76d226e63428>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0melmoTuner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_elmo_embedding_layer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmake_elmo_embedding_layer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mutils\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0melmoTuner\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_char_cnn_layer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/utils/vis_utils.py\u001b[0m in \u001b[0;36mplot_model\u001b[0;34m(model, to_file, show_shapes, show_dtype, show_layer_names, rankdir, expand_nested, dpi)\u001b[0m\n\u001b[1;32m    327\u001b[0m       \u001b[0mrankdir\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrankdir\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    328\u001b[0m       \u001b[0mexpand_nested\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexpand_nested\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 329\u001b[0;31m       dpi=dpi)\n\u001b[0m\u001b[1;32m    330\u001b[0m   \u001b[0mto_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpath_to_string\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mto_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    331\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mdot\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/utils/vis_utils.py\u001b[0m in \u001b[0;36mmodel_to_dot\u001b[0;34m(model, show_shapes, show_dtype, show_layer_names, rankdir, expand_nested, dpi, subgraph)\u001b[0m\n\u001b[1;32m    233\u001b[0m       \u001b[0mnode_key\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlayer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'_ib-'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mnode_key\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_network_nodes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 235\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0minbound_layer\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflatten\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minbound_layers\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    236\u001b[0m           \u001b[0minbound_layer_id\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minbound_layer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    237\u001b[0m           \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mexpand_nested\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/node.py\u001b[0m in \u001b[0;36minbound_layers\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    257\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    258\u001b[0m     inbound_layers = nest.map_structure(lambda t: t._keras_history.layer,\n\u001b[0;32m--> 259\u001b[0;31m                                         self.call_args[0])\n\u001b[0m\u001b[1;32m    260\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minbound_layers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    261\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36mmap_structure\u001b[0;34m(func, *structure, **kwargs)\u001b[0m\n\u001b[1;32m    865\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    866\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 867\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    868\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    869\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/nest.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    865\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    866\u001b[0m   return pack_sequence_as(\n\u001b[0;32m--> 867\u001b[0;31m       \u001b[0mstructure\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mentries\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    868\u001b[0m       expand_composites=expand_composites)\n\u001b[1;32m    869\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/node.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(t)\u001b[0m\n\u001b[1;32m    256\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_input\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    257\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 258\u001b[0;31m     inbound_layers = nest.map_structure(lambda t: t._keras_history.layer,\n\u001b[0m\u001b[1;32m    259\u001b[0m                                         self.call_args[0])\n\u001b[1;32m    260\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0minbound_layers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'ResourceVariable' object has no attribute '_keras_history'"]}]},{"cell_type":"code","metadata":{"id":"NsIwacN4kGCa"},"source":["a = bilm.char_cnn_layer(K.ones((4, 7, 30)))\n","i=1 #1,4\n","np.testing.assert_allclose(a[-1][i][-1], a[-1][i][-2])\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fmnP-UujKfBo","executionInfo":{"status":"ok","timestamp":1626607513550,"user_tz":-540,"elapsed":392,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"3ad6f430-9514-425f-cdce-85118a175ea8"},"source":["input = k.layers.Input((None, 2))\n","lstm = k.layers.LSTM(3, name='lstm')\n","output = lstm(input)\n","model = k.Model(input, output)\n","print(lstm.weights)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[<tf.Variable 'lstm/lstm_cell_3/kernel:0' shape=(2, 12) dtype=float32, numpy=\n","array([[-0.47153407,  0.4534639 ,  0.25188774, -0.47883195,  0.5810008 ,\n","         0.49185288,  0.14665115,  0.51306653, -0.19724423, -0.2824788 ,\n","         0.2402789 , -0.05580992],\n","       [ 0.04561907,  0.57383037,  0.6248628 , -0.1885258 , -0.41602957,\n","         0.49953306,  0.34663022,  0.31229615, -0.42810512, -0.01637137,\n","         0.35412538, -0.08298981]], dtype=float32)>, <tf.Variable 'lstm/lstm_cell_3/recurrent_kernel:0' shape=(3, 12) dtype=float32, numpy=\n","array([[-0.60659695,  0.24984944, -0.10044736,  0.3239598 ,  0.247171  ,\n","        -0.22103229,  0.08647676, -0.2745943 ,  0.11073962,  0.49862307,\n","        -0.00417942,  0.02899929],\n","       [ 0.34714454,  0.02679264, -0.06641854,  0.30490202, -0.07130731,\n","        -0.18923073, -0.16137958, -0.15846214,  0.5270624 , -0.06409723,\n","        -0.22385864,  0.5977738 ],\n","       [ 0.07929095,  0.1131275 , -0.24016163,  0.44723582, -0.06658161,\n","        -0.23511851,  0.57189524,  0.13680083, -0.37449327, -0.3130552 ,\n","        -0.28183952, -0.00655262]], dtype=float32)>, <tf.Variable 'lstm/lstm_cell_3/bias:0' shape=(12,) dtype=float32, numpy=array([0., 0., 0., 1., 1., 1., 0., 0., 0., 0., 0., 0.], dtype=float32)>]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lT3YCgJPELwQ"},"source":["def my_init(shape, dtype):\n","    a = np.ones((103, 20))\n","    b = np.ones((20,)) * 7\n","    c = np.ones((5,3)) * 9\n","    print(shape)\n","    for m in [a,b,c]:\n","        if m.shape == tuple(shape):\n","            return m"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OfkIHahvU9F0","executionInfo":{"status":"ok","timestamp":1626606161146,"user_tz":-540,"elapsed":395,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"28de7f2c-c563-4fff-a56a-5b427743ba9e"},"source":["import tensorflow.compat.v1 as tf1\n","lstm1 = tf1.nn.rnn_cell.LSTMCell(5, num_proj=3, initializer=my_init)\n","lstm1.build(input_shape=(None,None,100))\n","lstm1.weights"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[103, 20]\n","[5, 3]\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/layers/legacy_rnn/rnn_cell_impl.py:909: UserWarning: `tf.nn.rnn_cell.LSTMCell` is deprecated and will be removed in a future version. This class is equivalent as `tf.keras.layers.LSTMCell`, and will be replaced by that in Tensorflow 2.0.\n","  warnings.warn(\"`tf.nn.rnn_cell.LSTMCell` is deprecated and will be \"\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/base_layer.py:2191: UserWarning: `layer.add_variable` is deprecated and will be removed in a future version. Please use `layer.add_weight` method instead.\n","  warnings.warn('`layer.add_variable` is deprecated and '\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["[<tf.Variable 'lstm_cell_1/kernel:0' shape=(103, 20) dtype=float32, numpy=\n"," array([[1., 1., 1., ..., 1., 1., 1.],\n","        [1., 1., 1., ..., 1., 1., 1.],\n","        [1., 1., 1., ..., 1., 1., 1.],\n","        ...,\n","        [1., 1., 1., ..., 1., 1., 1.],\n","        [1., 1., 1., ..., 1., 1., 1.],\n","        [1., 1., 1., ..., 1., 1., 1.]], dtype=float32)>,\n"," <tf.Variable 'lstm_cell_1/bias:0' shape=(20,) dtype=float32, numpy=\n"," array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","        0., 0., 0.], dtype=float32)>,\n"," <tf.Variable 'lstm_cell_1/projection/kernel:0' shape=(5, 3) dtype=float32, numpy=\n"," array([[9., 9., 9.],\n","        [9., 9., 9.],\n","        [9., 9., 9.],\n","        [9., 9., 9.],\n","        [9., 9., 9.]], dtype=float32)>]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"xWsOZL63Ab9I"},"source":["lstm1.weights[0] = np.ones((103, 20))*3\n","lstm1.weights\n","lstm1.set_weights([np.ones((103, 20))*3, np.ones((20,)), np.ones((5, 3))])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BYHaBBIpSliS","executionInfo":{"status":"ok","timestamp":1626606522161,"user_tz":-540,"elapsed":380,"user":{"displayName":"지우석","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhvZqkWLzDYtaVFoDWuCyUR3LnktqLzC-l5rYKiDA=s64","userId":"11017745970550139980"}},"outputId":"64175b33-c1d5-44b1-ebd3-4af19c3780f3"},"source":["lstm1.weights"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<tf.Variable 'lstm_cell_1/kernel:0' shape=(103, 20) dtype=float32, numpy=\n"," array([[3., 3., 3., ..., 3., 3., 3.],\n","        [3., 3., 3., ..., 3., 3., 3.],\n","        [3., 3., 3., ..., 3., 3., 3.],\n","        ...,\n","        [3., 3., 3., ..., 3., 3., 3.],\n","        [3., 3., 3., ..., 3., 3., 3.],\n","        [3., 3., 3., ..., 3., 3., 3.]], dtype=float32)>,\n"," <tf.Variable 'lstm_cell_1/bias:0' shape=(20,) dtype=float32, numpy=\n"," array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,\n","        1., 1., 1.], dtype=float32)>,\n"," <tf.Variable 'lstm_cell_1/projection/kernel:0' shape=(5, 3) dtype=float32, numpy=\n"," array([[1., 1., 1.],\n","        [1., 1., 1.],\n","        [1., 1., 1.],\n","        [1., 1., 1.],\n","        [1., 1., 1.]], dtype=float32)>]"]},"metadata":{"tags":[]},"execution_count":36}]}]}